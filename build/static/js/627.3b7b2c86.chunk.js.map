{"version":3,"file":"static/js/627.3b7b2c86.chunk.js","mappings":"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","sources":["components/CardMUI/index.js","pages/components/CategoryPage.js"],"sourcesContent":["import { Button, Card, CardActions, CardContent, CardMedia, Typography } from '@mui/material';\r\n// import { generatePublicUrl } from 'urlConfig';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { Box, Modal, TextField } from '../../../node_modules/@mui/material/index';\r\nimport { Tabs } from 'antd';\r\nimport { notification, Image, Space } from 'antd';\r\nimport { Popconfirm, Upload } from '../../../node_modules/antd/lib/index';\r\nimport { useDispatch} from 'react-redux';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { deleteCategories, updateCategories, getAllCategory, getDataFilter } from 'actions/category';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n// import { makeStyles } from '@mui/styles';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { useSelector } from 'react-redux';\r\n/* eslint-disable */\r\nconst SimpleCard = (props) => {\r\n    const { TabPane } = Tabs;\r\n    const { card, image, name, value } = props.item;\r\n    // console.log('props.item;', props.item);\r\n    const category = useSelector((state) => state.category);\r\n    const [open, setOpen] = useState(false);\r\n    const [type, setType] = useState('');\r\n    const [nameCategory, setNameCategory] = useState('');\r\n    const [slug, setSlug] = useState('');\r\n    const [ids, SetIds] = useState('');\r\n    const [fileList, setFileList] = useState([]);\r\n    const [categoryInPage, setCategoryInPage] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const handleCancel = () => setPreviewVisible(false);\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [categoryImage, setCategoryImage] = useState('');\r\n    const handleChange = ({ fileList: newFileList }) => setFileList(newFileList);\r\n    const handlePreview = async (file) => {\r\n        console.log(file);\r\n        setPreviewImage(file.url);\r\n        setPreviewVisible(true);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n    const handleView = () => {\r\n        setType('view');\r\n        handleOpen();\r\n    };\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        dispatch(getDataFilter()).then((data) => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setCategoryInPage(data);\r\n            setLoading(false);\r\n        });\r\n        fileList.push({url : props.item.image});\r\n        setFileList(fileList);\r\n    }, [dispatch]);\r\n    const confirm = () => {\r\n        // let listIdCat = [];\r\n        // const tempItem = props?.item;\r\n        // listIdCat.push(tempItem._id);\r\n        // const payload = {\r\n        //     catId: listIdCat\r\n        // };\r\n        // console.log(listIdCat)\r\n        // console.log(props.item);\r\n        // var idTemp = props.item._id;\r\n        const data = {\r\n            _id: props?.item._id,\r\n        }\r\n        console.log(data)\r\n        dispatch(deleteCategories(data)).then((data) => {\r\n            dispatch(getAllCategory());\r\n        });\r\n        \r\n    };\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 800,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4\r\n    };\r\n    const getBase64 = (file) =>\r\n        new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n\r\n            reader.onload = () => resolve(reader.result);\r\n\r\n            reader.onerror = (error) => reject(error);\r\n        }\r\n    );\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div\r\n                style={{\r\n                    marginTop: 8\r\n                }}\r\n            >\r\n                Upload\r\n            </div>\r\n        </div>\r\n    );\r\n    const handleEdit = () => {\r\n        setType('edit');\r\n        handleOpen();\r\n    };\r\n    const handleUpdateCategory = async () => {\r\n        console.log(fileList);\r\n        // if (!fileList) return;\r\n        const list = [];\r\n        if(fileList&&fileList[0]&&fileList[0].type!=null)\r\n        {\r\n            \r\n            for (let pic of fileList) {\r\n                const reader = new FileReader();\r\n                if (pic) {\r\n                    const link = await getBase64(pic.originFileObj);\r\n                    list.push(link);\r\n                }\r\n            }\r\n            try {\r\n                await fetch('http://localhost:3001/product/uploadPicture', {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ data: list }),\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                })\r\n                    .then((response) => {\r\n                        if (response.ok) {\r\n                            return response.json();\r\n                        }\r\n                        throw new Error('Something went wrong');\r\n                    })\r\n                    .then((responseJson) => {\r\n                        const data = {\r\n                            _id: props.item._id,\r\n                            nameCategory,\r\n                            categoryImage: responseJson.result[0]\r\n                        };\r\n                        console.log(data);\r\n                        dispatch(updateCategories(data)).then((data) => {\r\n                            console.log('run if')\r\n                            dispatch(getDataFilter()).then((data) => {\r\n                                data.map((item, index) => (item.id = index + 1));\r\n                                setCategoryInPage(data);\r\n                                setLoading(false);\r\n                            });\r\n                            console.log(data);\r\n                            if (data === 'success') {\r\n                                handleClose();\r\n                                notification['success']({\r\n                                    message: 'Cập nhập Nhãn hàng',\r\n                                    description: 'Cập nhập Nhãn hàng thành công.'\r\n                                });\r\n                            } else {\r\n                                handleClose();\r\n                                notification['error'] ({\r\n                                    message: 'Cập nhập Nhãn hàng',\r\n                                    description: 'Cập nhập Nhãn hàng thất bại.',\r\n                                });\r\n                                \r\n                            }\r\n                        });\r\n                    });\r\n            } catch (err) {\r\n                throw new Error('Something went wrong');\r\n            }\r\n        } \r\n        else {\r\n            const data = {\r\n                _id: props.item._id,\r\n                nameCategory,\r\n                categoryImage: fileList.length!=0?fileList[0].url:null\r\n            };\r\n            console.log(data);\r\n            dispatch(updateCategories(data)).then((data) => {\r\n                console.log('run else')\r\n                dispatch(getDataFilter()).then((data) => {\r\n                    data.map((item, index) => (item.id = index + 1));\r\n                    setCategoryInPage(data);\r\n                    setLoading(false);\r\n                });\r\n                console.log(data);\r\n                if (data === 'success') {\r\n                    handleClose();\r\n                    notification['success']({\r\n                        message: 'Cập nhập Nhãn hàng',\r\n                        description: 'Cập nhập Nhãn hàng thành công.'\r\n                    });\r\n                } else {\r\n                    handleClose();\r\n                    notification['error'] ({\r\n                        message: 'Cập nhập Nhãn hàng',\r\n                        description: 'Cập nhập Nhãn hàng thất bại.',\r\n                    });\r\n                    \r\n                }\r\n            });\r\n        }\r\n        \r\n    };\r\n    const text = 'Bạn có chắc chắn muốn xoá?';\r\n    const modalProduct = (type) => {\r\n        let title;\r\n        let disable;\r\n        \r\n        const imgCat = props.item.image;\r\n        console.log(imgCat);\r\n        if (type === 'edit') {\r\n            title = 'Chỉnh sửa nhãn hàng';\r\n            disable = false;\r\n        }\r\n        else if (type === 'create') {\r\n            title = 'Thêm nhãn hàng';\r\n            disable = false;\r\n        } else {\r\n            title = 'Xem chi tiết nhãn hàng';\r\n            disable = true;\r\n            console.log(imgCat);\r\n            // imgCat = props.item.image;\r\n        }\r\n        return (\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"modal-modal-title\" aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Tabs defaultActiveKey=\"1\" style={{ color: 'black', fontSize: '19px' }}>\r\n                        <TabPane tab={<span>Thông tin chung</span>} key=\"1\">\r\n                            <div\r\n                                className=\"container_addProduct\"\r\n                                style={{\r\n                                    display: 'flex',\r\n                                    paddingTop: '0px',\r\n                                    color: 'black',\r\n                                    fontSize: '17px'\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    className=\"container_form_addProduct\"\r\n                                    style={{\r\n                                        paddingBottom: '50px',\r\n                                        width: '40%',\r\n                                        paddingRight: '30px'\r\n                                    }}\r\n                                >\r\n                                    <TextField\r\n                                        required\r\n                                        style={{ width: '100%', marginBottom: '15px' }}\r\n                                        id=\"outlined-error\"\r\n                                        label=\"Tên nhãn hàng\"\r\n                                        defaultValue={props?.item ? props?.item.name : ''}\r\n                                        disabled={disable}\r\n                                        onChange={(e) => setNameCategory(e.target.value)}\r\n                                    />\r\n                                    <ul></ul>\r\n                                    <Upload\r\n                                        listType=\"picture-card\"\r\n                                        fileList={fileList}\r\n                                        // defaultValue={props?.item ? props?.item.image : ''}\r\n                                        // defaultFileList={props?.item ? props?.item.image : []}                                        // onPreview={handlePreview}\r\n                                        onChange={handleChange}\r\n                                        beforeUpload={() => {\r\n                                            /* update state here */\r\n                                            return false;\r\n                                        }}\r\n                                    >\r\n                                        {/* {console.log(fileList)} */}\r\n                                        {fileList.length > 0 ? null : uploadButton}\r\n                                    </Upload>\r\n                                    <Modal\r\n                                        visible={previewVisible}\r\n                                        title={previewTitle}\r\n                                        footer={null}\r\n                                        onCancel={handleCancel}\r\n                                        style={{ zIndex: 9999999 }}\r\n                                    >\r\n                                        <img\r\n                                            alt=\"example\"\r\n                                            style={{\r\n                                                width: '100%'\r\n                                            }}\r\n                                            src={previewImage}\r\n                                        />\r\n                                    </Modal>\r\n                                    {/* <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                                        <img\r\n                                            alt=\"example\"\r\n                                            style={{\r\n                                                width: '100%'\r\n                                            }}\r\n                                            src={previewImage}\r\n                                        />\r\n                                    </Modal> */}\r\n                                </div>\r\n                            </div>\r\n                        </TabPane>\r\n                    </Tabs>\r\n                    <CardActions sx={{}}>\r\n                        <Button size=\"small\" variant=\"contained\" color=\"success\" disabled={disable} onClick={handleUpdateCategory}>\r\n                            Lưu\r\n                        </Button>\r\n                        <Button size=\"small\" variant=\"contained\" onClick={handleClose}>\r\n                            Đóng\r\n                        </Button>\r\n                    </CardActions>\r\n                </Box>\r\n            </Modal>\r\n        );\r\n    };\r\n    return (\r\n        <div style={{ display: 'inline-block', marginBottom: '20px', width: '19%', minWidth: '265px' }}>\r\n            {modalProduct(type)}\r\n\r\n            <Card className={card} style={{ width: '95%' }}>\r\n                <CardMedia component=\"img\" height=\"100\" image={image} alt=\"green iguana\" style={{ objectFit: 'cover' }} />\r\n                <CardContent>\r\n                    <Typography className={name} color=\"textPrimary\" variant=\"h4\">\r\n                        {name}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions sx={{ justifyContent: 'space-between' }}>\r\n                    <Button size=\"small\" variant=\"contained\" onClick={handleEdit}>\r\n                        Chỉnh sửa\r\n                    </Button>\r\n                    <Button size=\"small\" variant=\"contained\" onClick={handleView}>\r\n                        Chi tiết\r\n                    </Button>\r\n                    <Popconfirm placement=\"right\" title={text} onConfirm={confirm} okText=\"Đồng ý\" cancelText=\"Không\">\r\n                        <Button variant=\"outlined\" color=\"error\" style={{ cursor: 'pointer' }} startIcon={<DeleteIcon />} size=\"small\">\r\n                            Xoá\r\n                        </Button>\r\n                    </Popconfirm>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n        /* eslint-enable */\r\n    );\r\n};\r\n// SimpleCard.PropTypes = {\r\n//     item: PropTypes.object.isRequired,\r\n//     card: PropTypes.string,\r\n//     label: PropTypes.string\r\n// };\r\nexport default SimpleCard;\r\n","// ==============================|| COMPONENTS - TYPOGRAPHY ||============================== //\r\n\r\nimport SimpleCard from \"components/CardMUI/index\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Stack,\r\n  Box,\r\n} from \"../../../node_modules/@mui/material/index\";\r\nimport ComponentSkeleton from \"./ComponentSkeleton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport {\r\n  notification,\r\n  Space,\r\n  Popconfirm,\r\n  Form,\r\n  Collapse,\r\n  Select,\r\n  Row,\r\n  Col,\r\n} from \"antd\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { Card as CardANTD, Spin } from \"antd\";\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\nimport {\r\n  deleteCategories,\r\n  getAllCategory,\r\n  getDataFilter,\r\n} from \"actions/category\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst ComponentTypography = () => {\r\n  const gridStyle = {\r\n    width: \"50%\",\r\n    height: \"80px\",\r\n  };\r\n  const { Option } = Select;\r\n  const dispatch = useDispatch();\r\n  const text = \"Bạn có chắc chắn muốn xoá?\";\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryInPage, setCategoryInPage] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [type, setType] = useState(\"\");\r\n\r\n  const [searchModel, setSearchModel] = useState({\r\n    CategoryName: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getDataFilter()).then((data) => {\r\n      data.map((item, index) => (item.id = index + 1));\r\n      setCategoryInPage(data);\r\n      setLoading(false);\r\n    });\r\n  }, [dispatch, category]);\r\n  const handleChangeCategory = (value) => {\r\n    searchModel.CategoryId = value;\r\n    setSearchModel(searchModel);\r\n  };\r\n  const handleChangeProduct = (value) => {\r\n    searchModel.CategoryName = value;\r\n    setSearchModel(searchModel);\r\n  };\r\n  const handleSearch = () => {\r\n    setLoading(true);\r\n    dispatch(getDataFilter(searchModel)).then((data) => {\r\n      setCategoryInPage(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const listScreen = JSON.parse(localStorage.getItem(\"screenrole\"));\r\n    let obj = listScreen.find((o) => o.screenSlug === \"/category\");\r\n    console.log(\"obj\", obj);\r\n    if (!obj) {\r\n      navigate(\"/404\");\r\n    }\r\n  }, []);\r\n  // const handleCreate = () => {\r\n  //     setType('create');\r\n  //     setNameCategory('');\r\n  //     setSlug('');\r\n  //     setCategoryImage('');\r\n  //     handleOpen();\r\n  // };\r\n  return (\r\n    <ComponentSkeleton>\r\n      {category.loading === true ? (\r\n        <Box sx={{ width: \"100%\", marginBottom: \"20px\" }}>\r\n          <LinearProgress />\r\n        </Box>\r\n      ) : null}\r\n      <Form style={{ marginBottom: \"10px\" }}>\r\n        <Collapse\r\n          defaultActiveKey={[\"1\"]}\r\n          expandIconPosition={\"right\"}\r\n          className=\"mps-search-header-collapse\"\r\n        >\r\n          <Collapse.Panel\r\n            header={\r\n              <span className=\"mps-search-header-panel-title\">\r\n                {\" \"}\r\n                Thông tin tìm kiếm\r\n              </span>\r\n            }\r\n            key=\"1\"\r\n          >\r\n            <CardANTD style={{ border: \"none\" }}>\r\n              <CardANTD.Grid style={gridStyle}>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Form.Item>Tên nhãn hàng</Form.Item>\r\n                  </Col>\r\n                  <Col span={16}>\r\n                    <Form.Item>\r\n                      <Select\r\n                        mode=\"multiple\"\r\n                        optionFilterProp=\"data\"\r\n                        optionLabelProp=\"text\"\r\n                        onChange={handleChangeProduct}\r\n                      >\r\n                        {categoryInPage &&\r\n                          categoryInPage.map((item, index) => (\r\n                            <Option\r\n                              key={item._id}\r\n                              data={item.name}\r\n                              text={item.name}\r\n                            >\r\n                              <div className=\"global-search-item\">\r\n                                <span>{item.name}</span>\r\n                                {/* <span style={{ float: 'right' }}> {index} </span> */}\r\n                              </div>\r\n                            </Option>\r\n                          ))}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </CardANTD.Grid>\r\n            </CardANTD>\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n      </Form>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem />}\r\n        spacing={2}\r\n        sx={{ marginBottom: \"20px\" }}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleSearch}\r\n          startIcon={<SearchIcon />}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Tìm kiếm\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          href=\"/createCategory\"\r\n          color=\"success\"\r\n          startIcon={<AddIcon />}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Thêm mới\r\n        </Button>\r\n      </Stack>\r\n      {/* <Grid container spacing={1}>\r\n                <Grid item xs={12} lg={20}>\r\n                    <Stack spacing={3}>\r\n                        {category.categories && renderCategories(category.categories).map((item) => <SimpleCard item={item} />)}\r\n                    </Stack>\r\n                </Grid>\r\n            </Grid> */}\r\n      <div style={{ display: \"inline-block\" }}>\r\n        <Spin tip=\"Loading...\" spinning={loading}>\r\n          {categoryInPage &&\r\n            categoryInPage.map((item, index) => (\r\n              <SimpleCard item={item} key={index} />\r\n            ))}\r\n        </Spin>\r\n      </div>\r\n    </ComponentSkeleton>\r\n  );\r\n};\r\n\r\nexport default ComponentTypography;\r\n"],"names":["props","TabPane","Tabs","item","card","image","name","value","useSelector","state","category","useState","open","setOpen","type","setType","nameCategory","setNameCategory","fileList","setFileList","setCategoryInPage","setLoading","dispatch","useDispatch","handleOpen","handleClose","handleCancel","setPreviewVisible","previewVisible","previewTitle","previewImage","handleChange","newFileList","useEffect","getDataFilter","then","data","map","index","id","push","url","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","uploadButton","PlusOutlined","marginTop","handleUpdateCategory","console","log","list","pic","originFileObj","link","fetch","method","body","JSON","stringify","headers","response","ok","json","Error","responseJson","_id","categoryImage","updateCategories","notification","message","description","length","display","marginBottom","minWidth","title","disable","imgCat","Modal","onClose","Box","sx","Typography","variant","component","defaultActiveKey","color","fontSize","tab","className","paddingTop","paddingBottom","paddingRight","TextField","required","label","defaultValue","disabled","onChange","e","target","listType","beforeUpload","visible","footer","onCancel","zIndex","alt","src","CardActions","Button","size","onClick","modalProduct","Card","CardMedia","height","objectFit","CardContent","justifyContent","placement","onConfirm","deleteCategories","getAllCategory","okText","cancelText","cursor","startIcon","Delete","Option","Select","categoryInPage","loading","CategoryName","searchModel","setSearchModel","navigate","useNavigate","obj","parse","localStorage","getItem","find","o","screenSlug","ComponentSkeleton","LinearProgress","expandIconPosition","header","span","mode","optionFilterProp","optionLabelProp","text","Stack","direction","divider","Divider","orientation","flexItem","spacing","Search","href","Add","tip","spinning"],"sourceRoot":""}