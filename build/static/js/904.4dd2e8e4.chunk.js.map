{"version":3,"file":"static/js/904.4dd2e8e4.chunk.js","mappings":"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","sources":["pages/dashboard/IncomeAreaChart.js","actions/totalView.js","pages/dashboard/MonthlyBarChart.js","components/cards/statistics/AnalyticEcommerce.js","pages/dashboard/OrdersTable.js","pages/dashboard/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { getTotalViews } from 'actions/totalView';\r\nimport { useDispatch } from 'react-redux';\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 450,\r\n        type: 'area',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 2\r\n    },\r\n    grid: {\r\n        strokeDashArray: 0\r\n    }\r\n};\r\n\r\n// ==============================|| INCOME AREA CHART ||============================== //\r\n\r\nconst IncomeAreaChart = ({ slot }) => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n    const [dataViews, setDataViews] = useState([]);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getTotalViews()).then((data) => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setDataViews(data);\r\n        });\r\n    }, [dispatch]);\r\n\r\n    function parseDate(input) {\r\n        var parts = input.match(/(\\d+)/g);\r\n        // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\r\n        return new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based\r\n    }\r\n    var ListDataView = [];\r\n    var daySub = 8;\r\n    var today = new Date();\r\n    var last = new Date(today.getTime() - (daySub * 24 * 60 * 60 * 1000));\r\n    last.setHours(0,0,0);\r\n    today.setHours(0,0,0);\r\n    dataViews.map((item) => {\r\n        var date = parseDate(item.createdTime)\r\n        date.setHours(0,0,1);\r\n        if(date.getTime() >= last.getTime() && date.getTime() <= today.getTime()) {\r\n            ListDataView.push(item);\r\n        }\r\n    })\r\n    \r\n    var total = []\r\n    for(let i = 0; i<ListDataView.length-1; i++) {\r\n        var valueView = 0;\r\n        valueView = ListDataView[i+1].view - ListDataView[i].view;\r\n        total.push(valueView)\r\n    }\r\n    // console.log(total)\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.primary.main, theme.palette.primary[700]],\r\n            xaxis: {\r\n                categories: ['7 Ngày trước', '6 Ngày trước', '5 Ngày trước', '4 Ngày trước', '3 Ngày trước', '2 Ngày trước', 'Hôm qua'],\r\n                labels: {\r\n                    style: {\r\n                        colors: [\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary\r\n                        ]\r\n                    }\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: line\r\n                },\r\n                tickAmount: slot === 'month' ? 11 : 7\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, theme, slot]);\r\n\r\n    const series = [\r\n        // {\r\n        //     name: 'Tuần trước',\r\n        //     // data: total\r\n        // },\r\n        {\r\n            name: 'Tuần này',\r\n            data: total\r\n        }\r\n    ]\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\r\n};\r\n\r\nIncomeAreaChart.propTypes = {\r\n    slot: PropTypes.string\r\n};\r\n\r\nexport default IncomeAreaChart;\r\n","import axios from '../helpers/axios';\r\nimport { totalViewConstants } from './constants';\r\n\r\nexport var addTotalView = (form) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post('totalView/createTotalView', form);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nexport var getTotalViews = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({ type: totalViewConstants.GET_ALL_VIEW_REQUEST });\r\n            const res = await axios.post('totalView/getTotalViews');\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n                const { total } = res.data;\r\n                total.map((item, index) => (item.id = index + 1));\r\n                dispatch({\r\n                    type: totalViewConstants.GET_ALL_VIEW_SUCCESS,\r\n                    payload: { total }\r\n                });\r\n                console.log(total);\r\n                return total;\r\n            } else {\r\n                dispatch({ type: totalViewConstants.GET_ALL_VIEW_FAILURE });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { getDataOrdersSales } from 'actions/order';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { template } from 'lodash';\r\n// chart options\r\nconst barChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 365,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            columnWidth: '45%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    xaxis: {\r\n        categories: ['Sản phẩm bán chạy trong tuần'],\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false\r\n    },\r\n    grid: {\r\n        show: false\r\n    }\r\n};\r\n\r\n// ==============================|| MONTHLY BAR CHART ||============================== //\r\n\r\nconst MonthlyBarChart = (props) => {\r\n    const theme = useTheme();\r\n    const [dataSales, setDataSales] = useState([]);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getDataOrdersSales()).then((data) => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setDataSales(data);\r\n        });\r\n        \r\n    }, [dispatch]);\r\n    const { primary, secondary } = theme.palette.text;\r\n    const info = theme.palette.info.light;\r\n    // console.log(props);\r\n    function parseDate(input) {\r\n        var parts = input.match(/(\\d+)/g);\r\n        // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\r\n        return new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based\r\n    }\r\n    var startTime = new Date(props.startTime);\r\n    var endTime = new Date(props.endTime);\r\n    var resultDataSales = []\r\n    if(props.keyOpen === '') {\r\n        var ListSalesTemp = [];\r\n        var ListSales = [];\r\n        dataSales.map((item) => {\r\n            item.items.map((data) => {\r\n                ListSalesTemp.push(data);\r\n            })\r\n        })\r\n        ListSalesTemp.reduce(function(res, value) {\r\n            if (!res[value.productId._id]) {\r\n              res[value.productId._id] = { productId: value.productId, purchasedQty: 0 };\r\n              ListSales.push(res[value.productId._id])\r\n            }\r\n            res[value.productId._id].purchasedQty += value.purchasedQty;\r\n            return res;\r\n        }, {});\r\n        resultDataSales = ListSales\r\n    } else {\r\n        if(props.startTime !== props.endTime) {\r\n            var ListSalesTemp = [];\r\n            var ListSales = [];\r\n            dataSales?.map((item) => {\r\n                var date = parseDate(item.orderStatus[3].date);\r\n                date.setHours(0, 0, 1);\r\n                if((date.getTime() >= startTime.getTime()) && (date.getTime() <= endTime.getTime())) {\r\n                    item.items.map((data) => {\r\n                        ListSalesTemp.push(data);\r\n                    })\r\n                }\r\n            })\r\n            ListSalesTemp.reduce(function(res, value) {\r\n                if (!res[value.productId._id]) {\r\n                  res[value.productId._id] = { productId: value.productId, purchasedQty: 0 };\r\n                  ListSales.push(res[value.productId._id])\r\n                }\r\n                res[value.productId._id].purchasedQty += value.purchasedQty;\r\n                return res;\r\n            }, {});\r\n            resultDataSales = ListSales\r\n        } else {\r\n            var ListSalesTemp = [];\r\n            var ListSales = [];\r\n            dataSales?.map((item) => {\r\n                var date = parseDate(item.orderStatus[3].date);\r\n                date.setHours(0, 0, 1);\r\n                var dateStart = startTime;\r\n                if(date.getTime() <= endTime.getTime() && date.getTime() >= dateStart.getTime()) {\r\n                    item.items.map((data) => {\r\n                        ListSalesTemp.push(data);\r\n                    })\r\n                }\r\n            })\r\n            ListSalesTemp.reduce(function(res, value) {\r\n                if (!res[value.productId._id]) {\r\n                  res[value.productId._id] = { productId: value.productId, purchasedQty: 0 };\r\n                  ListSales.push(res[value.productId._id])\r\n                }\r\n                res[value.productId._id].purchasedQty += value.purchasedQty;\r\n                return res;\r\n            }, {});\r\n            // console.log(ListSales)\r\n            resultDataSales = ListSales\r\n        }\r\n    }\r\n    var dataColumn = [];\r\n    var dataValueColumn = [];\r\n    resultDataSales.map(e => {\r\n        dataColumn.push(e.purchasedQty)\r\n        dataValueColumn.push(e.productId.name)\r\n    })\r\n    const series = [\r\n        {\r\n            name: dataValueColumn,\r\n            data: dataColumn\r\n        }\r\n    ]\r\n    const [options, setOptions] = useState(barChartOptions);\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [info],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [primary, info, secondary]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={365} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthlyBarChart;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Box, Chip, Grid, Stack, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\n\r\n// assets\r\nimport { RiseOutlined, FallOutlined } from '@ant-design/icons';\r\n\r\n// ==============================|| STATISTICS - ECOMMERCE CARD  ||============================== //\r\n\r\nconst AnalyticEcommerce = ({ color, title, count, percentage, isLoss, extra }) => (\r\n    <MainCard contentSX={{ p: 2.25 }}>\r\n        <Stack spacing={0.5}>\r\n            <Typography variant=\"h6\" color=\"textSecondary\">\r\n                {title}\r\n            </Typography>\r\n            <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                    <Typography variant=\"h4\" color=\"inherit\">\r\n                        {count}\r\n                    </Typography>\r\n                </Grid>\r\n                {percentage && (\r\n                    <Grid item>\r\n                        <Chip\r\n                            variant=\"combined\"\r\n                            color={color}\r\n                            icon={\r\n                                <>\r\n                                    {!isLoss && <RiseOutlined style={{ fontSize: '0.75rem', color: 'inherit' }} />}\r\n                                    {isLoss && <FallOutlined style={{ fontSize: '0.75rem', color: 'inherit' }} />}\r\n                                </>\r\n                            }\r\n                            label={`${percentage}%`}\r\n                            sx={{ ml: 1.25, pl: 1 }}\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Stack>\r\n        <Box sx={{ pt: 2.25 }}>\r\n            <Typography variant=\"caption\" color=\"textSecondary\">\r\n                {/* Tăng hơn{' '} */}\r\n                <Typography component=\"span\" variant=\"caption\" sx={{ color: `${color || 'primary'}.main` }}>\r\n                    {extra}\r\n                </Typography>{' '}\r\n                {/* so với năm trước */}\r\n            </Typography>\r\n        </Box>\r\n    </MainCard>\r\n);\r\n\r\nAnalyticEcommerce.propTypes = {\r\n    color: PropTypes.string,\r\n    title: PropTypes.string,\r\n    count: PropTypes.string,\r\n    percentage: PropTypes.number,\r\n    isLoss: PropTypes.bool,\r\n    extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\r\n};\r\n\r\nAnalyticEcommerce.defaultProps = {\r\n    color: 'primary'\r\n};\r\n\r\nexport default AnalyticEcommerce;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from 'actions/product';\r\nimport { getDataOrdersSales } from 'actions/order';\r\n// material-ui\r\nimport { Box, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// project import\r\nimport Dot from 'components/@extended/Dot';\r\n\r\n// ==============================|| ORDER TABLE - HEADER CELL ||============================== //\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'productId',\r\n        align: 'left',\r\n        disablePadding: false,\r\n        label: 'Mã sản phẩm'\r\n    },\r\n    {\r\n        id: 'productName',\r\n        align: 'left',\r\n        disablePadding: true,\r\n        label: 'Tên sản phẩm'\r\n    },\r\n    {\r\n        id: 'quantity',\r\n        align: 'right',\r\n        disablePadding: false,\r\n        label: 'Số lượng đã bán'\r\n    },\r\n    {\r\n        id: 'view',\r\n        align: 'right',\r\n        disablePadding: false,\r\n        label: 'Số lượt xem'\r\n    }\r\n];\r\n\r\n// ==============================|| ORDER TABLE - HEADER ||============================== //\r\n\r\nfunction ProductTableHead({ product, productBy }) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={productBy === headCell.id ? product : false}\r\n                    >\r\n                        {headCell.label}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nProductTableHead.propTypes = {\r\n    product: PropTypes.string,\r\n    productBy: PropTypes.string\r\n};\r\n\r\n// ==============================|| PRODUCT TABLE ||============================== //\r\n\r\nconst ProductTable = (props) => {\r\n    const {filterProduct} =props\r\n    const [productInPage, setProductInPage] = useState([]);\r\n    const [productBy, setProductBy] = useState('view');\r\n    const [dataSales, setDataSales] = useState([]);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getProducts()).then((data) => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setProductInPage(data);\r\n        });\r\n        dispatch(getDataOrdersSales()).then((data) => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setDataSales(data);\r\n        });\r\n        \r\n    }, [dispatch, filterProduct]);\r\n    function descendingComparator(a, b, productBy) {\r\n        if (b[productBy] < a[productBy]) {\r\n            return -1;\r\n        }\r\n        if (b[productBy] > a[productBy]) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    function getComparator(product, productBy) {\r\n        return product === 'desc' ? (a, b) => descendingComparator(a, b, productBy) : (a, b) => -descendingComparator(a, b, productBy);\r\n    }\r\n    \r\n    function stableSort(array, comparator) {\r\n        const stabilizedThis = array.map((el, index) => [el, index]);\r\n        stabilizedThis.sort((a, b) => {\r\n            const product = comparator(a[0], b[0]);\r\n            if (product !== 0) {\r\n                return product;\r\n            }\r\n            return a[1] - b[1];\r\n        });\r\n        return stabilizedThis.map((el) => el[0]);\r\n    }\r\n    const [product] = useState('desc');\r\n    const [selected] = useState([]);\r\n    const isSelected = (productId) => selected.indexOf(productId) !== -1;\r\n    // var rows = [];\r\n    var ListSalesTemp = [];\r\n    var ListSales = [];\r\n    dataSales.map((item) => {\r\n        item.items.map((data) => {\r\n            ListSalesTemp.push(data);\r\n        })\r\n    })\r\n    ListSalesTemp.reduce(function(res, value) {\r\n        if (!res[value.productId._id]) {\r\n            res[value.productId._id] = { productId: value.productId, purchasedQty: 0 };\r\n            ListSales.push(res[value.productId._id])\r\n        }\r\n        res[value.productId._id].purchasedQty += value.purchasedQty;\r\n        return res;\r\n    }, {});\r\n    if(filterProduct === 'view') {\r\n        var rows = [];\r\n        const tempList = stableSort(productInPage, getComparator(product, 'view'))\r\n        tempList.map((item) => {\r\n            if(rows.length < 10)\r\n                rows.push(item);\r\n        })\r\n        return (\r\n            <Box>\r\n                <TableContainer\r\n                    sx={{\r\n                        width: '100%',\r\n                        overflowX: 'auto',\r\n                        position: 'relative',\r\n                        display: 'block',\r\n                        maxWidth: '100%',\r\n                        '& td, & th': { whiteSpace: 'nowrap' }\r\n                    }}\r\n                >\r\n                    <Table\r\n                        aria-labelledby=\"tableTitle\"\r\n                        sx={{\r\n                            '& .MuiTableCell-root:first-child': {\r\n                                pl: 2\r\n                            },\r\n                            '& .MuiTableCell-root:last-child': {\r\n                                pr: 3\r\n                            }\r\n                        }}\r\n                    >\r\n                        <ProductTableHead product={product} productBy={productBy} />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(product, productBy)).map((row, index) => {\r\n                                const isItemSelected = isSelected(row._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n    \r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        sx={{ '&:last-child td, &:last-child th': { bproduct: 0 } }}\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={row._id}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"left\">\r\n                                            <Link color=\"secondary\" component={RouterLink} to=\"/product\">\r\n                                                {row._id}\r\n                                            </Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">{row.name}</TableCell>\r\n                                        <TableCell align=\"center\">{row.quantitySold}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.view}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n        );\r\n    } else {\r\n        var rows = [];\r\n        const tempList = stableSort(ListSales, getComparator(product, 'purchasedQty'))\r\n        tempList.map((item) => {\r\n            if(rows.length < 10)\r\n                rows.push(item);\r\n        })\r\n        return (\r\n            <Box>\r\n                <TableContainer\r\n                    sx={{\r\n                        width: '100%',\r\n                        overflowX: 'auto',\r\n                        position: 'relative',\r\n                        display: 'block',\r\n                        maxWidth: '100%',\r\n                        '& td, & th': { whiteSpace: 'nowrap' }\r\n                    }}\r\n                >\r\n                    <Table\r\n                        aria-labelledby=\"tableTitle\"\r\n                        sx={{\r\n                            '& .MuiTableCell-root:first-child': {\r\n                                pl: 2\r\n                            },\r\n                            '& .MuiTableCell-root:last-child': {\r\n                                pr: 3\r\n                            }\r\n                        }}\r\n                    >\r\n                        <ProductTableHead product={product} productBy='purchasedQty' />\r\n                        <TableBody>\r\n                            {stableSort(rows, getComparator(product, 'purchasedQty')).map((row, index) => {\r\n                                const isItemSelected = isSelected(row.productId._id);\r\n                                const labelId = `enhanced-table-checkbox-${index}`;\r\n    \r\n                                return (\r\n                                    <TableRow\r\n                                        hover\r\n                                        role=\"checkbox\"\r\n                                        sx={{ '&:last-child td, &:last-child th': { bproduct: 0 } }}\r\n                                        aria-checked={isItemSelected}\r\n                                        tabIndex={-1}\r\n                                        key={row.productId._id}\r\n                                        selected={isItemSelected}\r\n                                    >\r\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"left\">\r\n                                            <Link color=\"secondary\" component={RouterLink} to=\"/product\">\r\n                                                {row.productId._id}\r\n                                            </Link>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">{row.productId.name}</TableCell>\r\n                                        <TableCell align=\"center\">{row.purchasedQty}</TableCell>\r\n                                        <TableCell align=\"center\">\r\n                                            {row.productId.view}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n        );\r\n    }\r\n    \r\n\r\n    \r\n};\r\n\r\nexport default ProductTable;\r\n\r\n","import { useState } from 'react';\r\n// material-ui\r\nimport {\r\n    Avatar,\r\n    AvatarGroup,\r\n    Box,\r\n    Button,\r\n    Grid,\r\n    List,\r\n    ListItemAvatar,\r\n    ListItemButton,\r\n    ListItemSecondaryAction,\r\n    ListItemText,\r\n    MenuItem,\r\n    Stack,\r\n    TextField,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// project import\r\nimport IncomeAreaChart from './IncomeAreaChart';\r\nimport MonthlyBarChart from './MonthlyBarChart';\r\nimport ReportAreaChart from './ReportAreaChart';\r\nimport SalesColumnChart from './SalesColumnChart';\r\nimport formatThousand from 'util/formatThousans';\r\nimport MainCard from 'components/MainCard';\r\n\r\nimport moment from 'moment';\r\nimport { DatePicker, Space } from 'antd';\r\n\r\nimport AnalyticEcommerce from 'components/cards/statistics/AnalyticEcommerce';\r\n\r\n// assets\r\nimport { GiftOutlined, MessageOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport avatar1 from 'assets/images/users/avatar-1.png';\r\nimport avatar2 from 'assets/images/users/avatar-2.png';\r\nimport avatar3 from 'assets/images/users/avatar-3.png';\r\nimport avatar4 from 'assets/images/users/avatar-4.png';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProducts } from 'actions/product';\r\nimport { getOrders, getDataOrdersSales } from 'actions/order';\r\nimport { getUsers } from 'actions/auth';\r\nimport order from 'reducers/order';\r\nimport ProductTable from './OrdersTable';\r\n\r\n// avatar style\r\nconst avatarSX = {\r\n    width: 36,\r\n    height: 36,\r\n    fontSize: '1rem'\r\n};\r\n\r\n// action style\r\nconst actionSX = {\r\n    mt: 0.75,\r\n    ml: 1,\r\n    top: 'auto',\r\n    right: 'auto',\r\n    alignSelf: 'flex-start',\r\n    transform: 'none'\r\n};\r\n\r\n// sales report status\r\nconst status = [\r\n    {\r\n        value: 'today',\r\n        label: 'Hôm nay'\r\n    },\r\n    {\r\n        value: 'month',\r\n        label: 'Tháng này'\r\n    },\r\n    {\r\n        value: 'year',\r\n        label: 'Năm này'\r\n    }\r\n];\r\n\r\n// ==============================|| DASHBOARD - DEFAULT ||============================== //\r\n\r\nexport const DashboardDefault = () => {\r\n    const { RangePicker } = DatePicker;\r\n    const [value, setValue] = useState('today');\r\n    const [slot, setSlot] = useState('week');\r\n    const [filterProduct, setFilterProduct] = useState('view');\r\n    const [productInPage, setProductInPage] = useState([]);\r\n    const [orderInPage, setOrderInPage] = useState([]);\r\n    const [userInPage, setUserInPage] = useState([]);\r\n    const [dataSales, setDataSales] = useState([]);\r\n    const [startTime, setStartTime] = useState(new Date(Date.now() - 1000 * 60 * 60 * 7));\r\n    const [endTime, setEndTime] = useState(new Date(Date.now() - 1000 * 60 * 60 * 7));\r\n    const [keyOpen, setKeyOpen] = useState('');\r\n    var totalSales = 0;\r\n    var totalValueProduct = 0;\r\n    var quantityOrder = 0;\r\n    var numberView = 0;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getProducts()).then(data => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setProductInPage(data);\r\n        });\r\n        dispatch(getOrders()).then(data => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setOrderInPage(data);\r\n        });\r\n        dispatch(getUsers()).then(data => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setUserInPage(data);\r\n        });\r\n        dispatch(getDataOrdersSales()).then(data => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setDataSales(data);\r\n        });\r\n    }, [dispatch, totalSales, quantityOrder]);\r\n    const setDataProduct = () => {\r\n        dispatch(getProducts()).then(data => {\r\n            data.map((item, index) => (item.id = index + 1));\r\n            setProductInPage(data);\r\n        });\r\n    }\r\n\r\n    function convertTZ(date, tzString) {\r\n        return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \r\n    }\r\n    console.log(startTime, 'Start')\r\n    console.log(endTime, 'End')\r\n\r\n    // setInterval(setDataProduct, 60000)\r\n    var quantityUser = [];\r\n    userInPage.map((item) => {\r\n        if(item.role._id === '63604156b949802220aa04c9')\r\n            quantityUser.push(item)\r\n    })\r\n    //Tong so view\r\n    \r\n    for(const e of productInPage) {\r\n        numberView += e.view;\r\n    }\r\n    //List order\r\n    var tempOrderInPage = [];\r\n    orderInPage?.map((item) => {\r\n        if(item.orderStatus[3].isCompleted === true)\r\n            tempOrderInPage.push(item);\r\n    })\r\n    \r\n    //Dinh dang lai ngay thang nam\r\n    function parseDate(input) {\r\n        var parts = input.match(/(\\d+)/g);\r\n        // new Date(year, month [, date [, hours[, minutes[, seconds[, ms]]]]])\r\n        return new Date(parts[0], parts[1]-1, parts[2]); // months are 0-based\r\n    }\r\n    const onChange = (dates) => {\r\n        if(dates) {\r\n            new Date(dates[0]._d - 1000 * 60 * 60 * 7)\r\n            new Date(dates[1]._d - 1000 * 60 * 60 * 7)\r\n            // dates[0]._d.setHours(0,0,0)\r\n            // dates[1]._d.setHours(0,0,0)\r\n            setStartTime(dates[0]._d);\r\n            setEndTime(dates[1]._d);\r\n            setKeyOpen('Open');\r\n        }\r\n        else {\r\n            setKeyOpen('');\r\n        }\r\n        \r\n    };\r\n    //Tong so don hang\r\n    var tempListOrder = [];\r\n    // console.log(startTime)\r\n    if(keyOpen === '') {\r\n        quantityOrder = tempOrderInPage.length;\r\n        for(const e of tempOrderInPage) {\r\n            totalSales += e.totalAmount;\r\n            totalValueProduct +=(e.totalAmount - e.shipAmount);\r\n        }\r\n    } else {\r\n        if(startTime.getTime() !== endTime.getTime()) {\r\n            tempOrderInPage?.map((item) => {\r\n                var date = parseDate(item.orderStatus[3].date);\r\n                // console.log(date)\r\n                date.setHours(0, 0, 1);\r\n                var dateStart = startTime;\r\n                dateStart.setHours(0, 0, 0);\r\n                if(date.getTime() >= dateStart.getTime() && date.getTime() <= endTime.getTime()) {\r\n                    tempListOrder.push(item);\r\n                }\r\n            })\r\n            \r\n            quantityOrder = tempListOrder.length;\r\n            for(const e of tempListOrder) {\r\n                totalSales += e.totalAmount;\r\n                totalValueProduct +=(e.totalAmount - e.shipAmount);\r\n            }\r\n        } else {\r\n            tempOrderInPage?.map((item) => {\r\n                var date = parseDate(item.orderStatus[3].date);\r\n                date.setHours(0, 0, 1);\r\n                var dateStart = startTime;\r\n                dateStart.setHours(0, 0, 0);\r\n                if(date.getTime() <= endTime.getTime() && date.getTime() >= dateStart.getTime()) {\r\n                    tempListOrder.push(item);\r\n                }\r\n            })\r\n            quantityOrder = tempListOrder.length;\r\n            for(const e of tempListOrder) {\r\n                totalSales += e.totalAmount;\r\n                totalValueProduct +=(e.totalAmount - e.shipAmount);\r\n            }\r\n        }\r\n    }\r\n    //Bieu do view\r\n    const data = {\r\n        totalView: numberView\r\n    }\r\n    return (\r\n        <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n            {/* row 1 */}\r\n            <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Trang chủ</Typography>\r\n                    </Grid>\r\n                    {/* date */}\r\n                    <Space direction=\"vertical\" size={12}>\r\n                        <RangePicker\r\n                        ranges={{\r\n                            'Hôm nay': [moment(), moment()],\r\n                            'Tháng này': [moment().startOf('month'), moment().endOf('month')],\r\n                        }}\r\n                        onChange={onChange}\r\n                        />\r\n                    </Space>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Tổng số lượt xem\" count={numberView} percentage='' extra='' />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Tổng số người dùng\" count={quantityUser.length} percentage='' extra='' />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Tổng số đơn hàng\" count={quantityOrder} percentage='' isLoss color=\"success\" extra='' />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Tổng số doanh thu\" count={formatThousand(totalSales) + ' Vnđ'} percentage='' isLoss color=\"success\" extra='' />\r\n            </Grid>\r\n\r\n            <Grid item md={8} sx={{ display: { sm: 'none', md: 'block', lg: 'none' } }} />\r\n            \r\n            {/* row 2 temp*/}\r\n            <Grid item xs={12} md={7} lg={8}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Biểu đồ lượt xem</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <MainCard content={false} sx={{ mt: 1.5 }}>\r\n                    <Box sx={{ pt: 1, pr: 2 }}>\r\n                        <IncomeAreaChart slot={slot} />\r\n                    </Box>\r\n                </MainCard>\r\n            </Grid>\r\n            <Grid item xs={12} md={5} lg={4}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Tổng quan doanh thu</Typography>\r\n                    </Grid>\r\n                    <Grid item />\r\n                </Grid>\r\n                <MainCard sx={{ mt: 2 }} content={false}>\r\n                    <Box sx={{ p: 3, pb: 0 }}>\r\n                        <Stack spacing={2}>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">\r\n                                Doanh số\r\n                            </Typography>\r\n                            <Typography variant=\"h3\">{formatThousand(totalValueProduct)} Vnđ</Typography>\r\n                        </Stack>\r\n                    </Box>\r\n                    <MonthlyBarChart startTime={startTime.getTime()} endTime={endTime.getTime()} keyOpen={keyOpen}/>\r\n                </MainCard>\r\n            </Grid>\r\n\r\n            {/* row 3 */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                    <Grid item>\r\n                        <Typography variant=\"h5\">Sản phẩm nổi bật</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={0}>\r\n                            <Button\r\n                                size=\"small\"\r\n                                onClick={() => setFilterProduct('quantity')}\r\n                                color={filterProduct === 'quantity' ? 'primary' : 'secondary'}\r\n                                variant={filterProduct === 'quantity' ? 'outlined' : 'text'}\r\n                            >\r\n                                Số lượng bán\r\n                            </Button>\r\n                            <Button\r\n                                size=\"small\"\r\n                                onClick={() => setFilterProduct('view')}\r\n                                color={filterProduct === 'view' ? 'primary' : 'secondary'}\r\n                                variant={filterProduct === 'view' ? 'outlined' : 'text'}\r\n                            >\r\n                                Lượt xem\r\n                            </Button>\r\n                        </Stack>\r\n                    </Grid>\r\n                    {/* <Grid item /> */}\r\n                </Grid>\r\n                <MainCard sx={{ mt: 2, mb: 4 }} content={false}>\r\n                    <ProductTable item xs={12} md={7} lg={8} filterProduct={filterProduct}/>\r\n                </MainCard>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default DashboardDefault;\r\n"],"names":["areaChartOptions","chart","height","type","toolbar","show","dataLabels","enabled","stroke","curve","width","grid","strokeDashArray","slot","theme","useTheme","palette","text","primary","secondary","line","divider","useState","options","setOptions","dataViews","setDataViews","dispatch","useDispatch","useEffect","totalViewConstants","axios","res","console","log","status","total","data","map","item","index","id","payload","then","ListDataView","today","Date","last","getTime","daySub","setHours","date","input","parts","match","parseDate","createdTime","push","i","length","valueView","view","prevState","colors","main","xaxis","categories","labels","style","axisBorder","color","tickAmount","yaxis","borderColor","tooltip","series","name","barChartOptions","plotOptions","bar","columnWidth","borderRadius","axisTicks","props","dataSales","setDataSales","getDataOrdersSales","info","light","startTime","endTime","resultDataSales","keyOpen","ListSalesTemp","ListSales","items","reduce","value","productId","_id","purchasedQty","orderStatus","dateStart","dataColumn","dataValueColumn","e","AnalyticEcommerce","title","count","percentage","isLoss","extra","MainCard","contentSX","p","Stack","spacing","Typography","variant","Grid","container","alignItems","Chip","icon","RiseOutlined","fontSize","FallOutlined","label","sx","ml","pl","size","pt","component","defaultProps","headCells","align","disablePadding","ProductTableHead","product","productBy","TableHead","TableRow","headCell","TableCell","padding","sortDirection","filterProduct","productInPage","setProductInPage","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","getProducts","selected","isSelected","indexOf","rows","TableContainer","overflowX","position","display","maxWidth","whiteSpace","Table","pr","TableBody","row","isItemSelected","labelId","hover","role","bproduct","tabIndex","scope","Link","RouterLink","to","quantitySold","DashboardDefault","RangePicker","DatePicker","setFilterProduct","orderInPage","setOrderInPage","userInPage","setUserInPage","now","setStartTime","setEndTime","setKeyOpen","totalSales","totalValueProduct","quantityOrder","numberView","getOrders","getUsers","quantityUser","tempOrderInPage","isCompleted","tempListOrder","totalAmount","shipAmount","rowSpacing","columnSpacing","xs","mb","justifyContent","direction","ranges","moment","startOf","endOf","onChange","dates","_d","sm","md","lg","formatThousand","content","mt","pb","Button","onClick"],"sourceRoot":""}