{"version":3,"sources":["components/@extended/Dot.js","pages/dashboard/OrdersTable.js","pages/components/OrderPage.js"],"names":["Dot","main","color","size","theme","useTheme","palette","secondary","error","warning","info","success","primary","Box","sx","width","height","borderRadius","bgcolor","createData","trackingNo","name","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","align","disablePadding","label","OrderTableHead","TableHead","TableRow","headCell","TableCell","padding","sortDirection","OrderStatus","title","status","Stack","direction","spacing","alignItems","Typography","OrderTable","useState","selected","TableContainer","overflowX","position","display","maxWidth","whiteSpace","Table","pl","pr","TableBody","row","isItemSelected","indexOf","labelId","hover","role","border","tabIndex","component","scope","Link","RouterLink","to","value","displayType","thousandSeparator","prefix","ComponentShadow","dispatch","useDispatch","useSelector","state","useEffect","getCustomerOrders","notification","message","description","config","placement","top","duration","rtl","container","mt","content","columns","field","headerName","type","sortable","pageSize","rowsPerPageOptions","checkboxSelection","loading"],"mappings":"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","file":"static/js/12.01a8a870.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst Dot = ({ color, size }) => {\r\n    const theme = useTheme();\r\n    let main;\r\n    switch (color) {\r\n        case 'secondary':\r\n            main = theme.palette.secondary.main;\r\n            break;\r\n        case 'error':\r\n            main = theme.palette.error.main;\r\n            break;\r\n        case 'warning':\r\n            main = theme.palette.warning.main;\r\n            break;\r\n        case 'info':\r\n            main = theme.palette.info.main;\r\n            break;\r\n        case 'success':\r\n            main = theme.palette.success.main;\r\n            break;\r\n        case 'primary':\r\n        default:\r\n            main = theme.palette.primary.main;\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: size || 8,\r\n                height: size || 8,\r\n                borderRadius: '50%',\r\n                bgcolor: main\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nDot.propTypes = {\r\n    color: PropTypes.string,\r\n    size: PropTypes.number\r\n};\r\n\r\nexport default Dot;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { Box, Link, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material';\r\n\r\n// third-party\r\nimport NumberFormat from 'react-number-format';\r\n\r\n// project import\r\nimport Dot from 'components/@extended/Dot';\r\n\r\nfunction createData(trackingNo, name, fat, carbs, protein) {\r\n    return { trackingNo, name, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n    createData(84564564, 'Camera Lens', 40, 2, 40570),\r\n    createData(98764564, 'Laptop', 300, 0, 180139),\r\n    createData(98756325, 'Mobile', 355, 1, 90989),\r\n    createData(98652366, 'Handset', 50, 1, 10239),\r\n    createData(13286564, 'Computer Accessories', 100, 1, 83348),\r\n    createData(86739658, 'TV', 99, 0, 410780),\r\n    createData(13256498, 'Keyboard', 125, 2, 70999),\r\n    createData(98753263, 'Mouse', 89, 2, 10570),\r\n    createData(98753275, 'Desktop', 185, 1, 98063),\r\n    createData(98753291, 'Chair', 100, 0, 14001)\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// ==============================|| ORDER TABLE - HEADER CELL ||============================== //\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'trackingNo',\r\n        align: 'left',\r\n        disablePadding: false,\r\n        label: 'Mã đơn hàng'\r\n    },\r\n    {\r\n        id: 'name',\r\n        align: 'left',\r\n        disablePadding: true,\r\n        label: 'Tên sản phẩm'\r\n    },\r\n    {\r\n        id: 'fat',\r\n        align: 'right',\r\n        disablePadding: false,\r\n        label: 'Số đơn hàng'\r\n    },\r\n    {\r\n        id: 'carbs',\r\n        align: 'left',\r\n        disablePadding: false,\r\n\r\n        label: 'Trạng thái'\r\n    },\r\n    {\r\n        id: 'protein',\r\n        align: 'right',\r\n        disablePadding: false,\r\n        label: 'Tổng số tiền'\r\n    }\r\n];\r\n\r\n// ==============================|| ORDER TABLE - HEADER ||============================== //\r\n\r\nfunction OrderTableHead({ order, orderBy }) {\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.align}\r\n                        padding={headCell.disablePadding ? 'none' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        {headCell.label}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nOrderTableHead.propTypes = {\r\n    order: PropTypes.string,\r\n    orderBy: PropTypes.string\r\n};\r\n\r\n// ==============================|| ORDER TABLE - STATUS ||============================== //\r\n\r\nconst OrderStatus = ({ status }) => {\r\n    let color;\r\n    let title;\r\n\r\n    switch (status) {\r\n        case 0:\r\n            color = 'warning';\r\n            title = 'Pending';\r\n            break;\r\n        case 1:\r\n            color = 'success';\r\n            title = 'Approved';\r\n            break;\r\n        case 2:\r\n            color = 'error';\r\n            title = 'Rejected';\r\n            break;\r\n        default:\r\n            color = 'primary';\r\n            title = 'None';\r\n    }\r\n\r\n    return (\r\n        <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n            <Dot color={color} />\r\n            <Typography>{title}</Typography>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nOrderStatus.propTypes = {\r\n    status: PropTypes.number\r\n};\r\n\r\n// ==============================|| ORDER TABLE ||============================== //\r\n\r\nexport default function OrderTable() {\r\n    const [order] = useState('asc');\r\n    const [orderBy] = useState('trackingNo');\r\n    const [selected] = useState([]);\r\n\r\n    const isSelected = (trackingNo) => selected.indexOf(trackingNo) !== -1;\r\n\r\n    return (\r\n        <Box>\r\n            <TableContainer\r\n                sx={{\r\n                    width: '100%',\r\n                    overflowX: 'auto',\r\n                    position: 'relative',\r\n                    display: 'block',\r\n                    maxWidth: '100%',\r\n                    '& td, & th': { whiteSpace: 'nowrap' }\r\n                }}\r\n            >\r\n                <Table\r\n                    aria-labelledby=\"tableTitle\"\r\n                    sx={{\r\n                        '& .MuiTableCell-root:first-child': {\r\n                            pl: 2\r\n                        },\r\n                        '& .MuiTableCell-root:last-child': {\r\n                            pr: 3\r\n                        }\r\n                    }}\r\n                >\r\n                    <OrderTableHead order={order} orderBy={orderBy} />\r\n                    <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy)).map((row, index) => {\r\n                            const isItemSelected = isSelected(row.trackingNo);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    role=\"checkbox\"\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row.trackingNo}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"left\">\r\n                                        <Link color=\"secondary\" component={RouterLink} to=\"\">\r\n                                            {row.trackingNo}\r\n                                        </Link>\r\n                                    </TableCell>\r\n                                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                                    <TableCell align=\"left\">\r\n                                        <OrderStatus status={row.carbs} />\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <NumberFormat value={row.protein} displayType=\"text\" thousandSeparator prefix=\"$\" />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Box>\r\n    );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { Grid, Stack, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport MainCard from 'components/MainCard';\r\nimport ComponentSkeleton from './ComponentSkeleton';\r\nimport OrderTable from 'pages/dashboard/OrdersTable';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { notification, Space, Popconfirm } from 'antd';\r\nimport { getCustomerOrders } from 'actions/order';\r\n// ===============================|| SHADOW BOX ||=============================== //\r\n\r\nfunction ShadowBox({ shadow }) {\r\n    return (\r\n        <MainCard border={false} sx={{ boxShadow: shadow }}>\r\n            <Stack spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n                <Typography variant=\"h6\">boxShadow</Typography>\r\n                <Typography variant=\"subtitle1\">{shadow}</Typography>\r\n            </Stack>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\nShadowBox.propTypes = {\r\n    shadow: PropTypes.string.isRequired\r\n};\r\n\r\n// ===============================|| CUSTOM - SHADOW BOX ||=============================== //\r\n\r\nfunction CustomShadowBox({ shadow, label, color, bgcolor }) {\r\n    return (\r\n        <MainCard border={false} sx={{ bgcolor: bgcolor || 'inherit', boxShadow: shadow }}>\r\n            <Stack spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n                <Typography variant=\"subtitle1\" color={color}>\r\n                    {label}\r\n                </Typography>\r\n            </Stack>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\nCustomShadowBox.propTypes = {\r\n    shadow: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    bgcolor: PropTypes.string.isRequired\r\n};\r\n\r\n// ============================|| COMPONENT - SHADOW ||============================ //\r\n\r\nconst ComponentShadow = () => {\r\n    const dispatch = useDispatch();\r\n    const order = useSelector((state) => state.order);\r\n    useEffect(() => {\r\n        dispatch(getCustomerOrders());\r\n    }, []);\r\n    useEffect(() => {\r\n        if (order.error) {\r\n            notification['error']({\r\n                message: 'Đơn hàng',\r\n                description: 'Vui lòng đăng nhập.'\r\n            });\r\n        }\r\n    }, [order.error]);\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'Mã sản phẩm', width: 100 },\r\n        { field: 'name', headerName: 'Tên sản phẩm', width: 300 },\r\n        { field: 'category.name', headerName: 'Hãng', width: 130 },\r\n        { field: 'salePrice', headerName: 'Giá tiền', width: 130 },\r\n        {\r\n            field: 'quantity',\r\n            headerName: 'Số lượng',\r\n            type: 'number',\r\n            width: 90\r\n        },\r\n        {\r\n            field: 'description',\r\n            headerName: 'Mô tả',\r\n            description: 'This column has a value getter and is not sortable.',\r\n            sortable: false,\r\n            width: 160\r\n            // valueGetter: (params) => `${params.row.firstName || ''} ${params.row.lastName || ''}`\r\n        }\r\n    ];\r\n    notification.config({\r\n        placement: 'topRight',\r\n        top: 80,\r\n        duration: 3,\r\n        rtl: false\r\n    });\r\n    const handleView = () => {\r\n        if (selectedRows.length === 0) {\r\n            notification['warning']({\r\n                message: 'Xem sản phẩm',\r\n                description: 'Vui lòng chọn sản phẩm bạn muốn xem.'\r\n            });\r\n        } else if (selectedRows.length >= 2) {\r\n            notification['warning']({\r\n                message: 'Xem sản phẩm',\r\n                description: 'Vui lòng chỉ chọn một sản phẩm.'\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <ComponentSkeleton>\r\n            <Grid container spacing={3}>\r\n                <MainCard sx={{ mt: 2 }} content={false}>\r\n                    <DataGrid\r\n                        rows={[]}\r\n                        columns={columns}\r\n                        pageSize={8}\r\n                        rowsPerPageOptions={[8]}\r\n                        checkboxSelection\r\n                        // onRowClick={(newSelection) => {\r\n                        //     setArraySelect((arraySelect) => [...arraySelect, newSelection]);\r\n                        //     console.log(arraySelect);\r\n                        // }}\r\n                        // onSelectionModelChange={(ids) => {\r\n                        //     const selectedIDs = new Set(ids);\r\n                        //     const selectedRows = product.products.filter((row) => selectedIDs.has(row.id));\r\n\r\n                        //     setSelectedRows(selectedRows);\r\n                        // }}\r\n                        loading={order.loading}\r\n                        // onCellClick={(value) => console.log(value)}\r\n                    />\r\n                </MainCard>\r\n            </Grid>\r\n        </ComponentSkeleton>\r\n    );\r\n};\r\n\r\nexport default ComponentShadow;\r\n"],"sourceRoot":""}