{"version":3,"sources":["../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/material/Table/Tablelvl2Context.js","../node_modules/@mui/material/Table/TableContext.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/@mui/x-data-grid/constants/envConstants.js","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js","../node_modules/@mui/material/TableCell/tableCellClasses.js","../node_modules/@mui/material/TableCell/TableCell.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/utils/warning.js","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/components/containers/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/ErrorBoundary.js","../node_modules/@mui/x-data-grid/components/base/GridErrorHandler.js","../node_modules/@mui/x-data-grid/components/base/GridHeaderPlaceholder.js","../node_modules/@mui/x-data-grid/lib/createDetectElementResize/index.js","../node_modules/@mui/x-data-grid/components/GridAutoSizer.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridBody.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/EventManager.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridErrorHandler.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/components/icons/index.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/material/node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/models/gridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/models/gridFeatureMode.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPageSize.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPage.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/gridEditRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.old.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.old.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridCellEditing.new.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridRowEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/editRows/useGridEditing.new.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelection.js","../node_modules/@mui/x-data-grid/hooks/features/selection/useGridSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/material/Switch/switchClasses.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/material/Switch/Switch.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridFilterMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/HideGridColMenuItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/SortGridMenuItems.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/components/ErrorOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/DataGridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeadersInner.js","../node_modules/@mui/x-data-grid/components/DataGridColumnHeaders.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/utils/esm/chainPropTypes.js"],"names":["isNumber","value","isFunction","localStorageAvailable","key","window","localStorage","setItem","removeItem","err","escapeRegExp","replace","clamp","min","max","Math","isDeepEqual","a","b","constructor","Array","isArray","length","i","Map","size","entriesA","from","entries","has","entryA","get","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","Object","prototype","toString","keys","hasOwnProperty","call","Tablelvl2Context","React","TableContext","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","experimentalEnabled","process","GRID_EXPERIMENTAL_ENABLED","getItem","createSvgIcon","d","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","indeterminate","color","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","main","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","inProps","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","getFormControlLabelUtilityClasses","formControlLabelClasses","FormControlLabelRoot","label","labelPlacement","display","alignItems","verticalAlign","WebkitTapHighlightColor","flexDirection","FormControlLabel","componentsProps","control","disableTypography","labelProp","controlProps","forEach","fcs","formControlState","states","error","Typography","typography","getTableCellUtilityClass","tableCellClasses","TableCellRoot","variant","align","stickyHeader","body2","borderBottom","TableCell","border","mode","lighten","divider","darken","textAlign","lineHeight","pxToRem","fontWeight","fontWeightMedium","paddingCheckbox","background","componentProp","paddingProp","scopeProp","scope","sizeProp","sortDirection","variantProp","table","tablelvl2","isHeadCell","ariaSort","as","getDataGridUtilityClass","gridClasses","GridRootStyles","autoHeight","editBooleanCell","cell","cellContent","cellCheckbox","checkboxInput","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIcon","menuIconButton","menuOpen","menuList","row","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorder","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","flex","boxSizing","shape","outline","borderBottomColor","outlineWidth","outlineOffset","justifyContent","iconButtonContainer","visibility","transition","transitions","create","duration","shorter","minWidth","whiteSpace","overflowX","columnHeaderTitleContainerContent","overflow","hover","right","touchAction","pointerEvents","breakInside","selectedOpacity","textOverflow","boxShadow","shadows","paper","booleanCell","actionsCell","gridGap","spacing","disabledOpacity","rowReorderCellContainer","borderRight","alignSelf","groupingCriteriaCell","groupingCriteriaCellToggle","buildWarning","message","gravity","alreadyWarned","cleanMessage","join","console","warn","wrapWithWarningOnCall","method","cacheContainer","cache","createSelector","args","selector","selectorArgs","stateOrApiRef","instanceId","isApiRef","current","cacheKey","newSelector","reselectCreateSelector","set","acceptsApiRef","gridColumnsSelector","columns","gridColumnFieldsSelector","columnsState","all","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","map","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridColumnPositionsSelector","visibleColumns","positions","currentPosition","push","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","reduce","acc","gridColumnsMetaSelector","totalWidth","useGridSelector","apiRef","isOutputSelector","GridApiContext","useGridApiContext","Error","GridRootPropsContext","useGridRootProps","contextValue","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","idRowsLookup","gridRowsIdToIdLookupSelector","idToIdLookup","gridRowTreeSelector","tree","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthSelector","treeDepth","gridRowIdsSelector","ids","gridDensitySelector","density","gridDensityValueSelector","gridDensityRowHeightSelector","rowHeight","gridDensityHeaderHeightSelector","headerHeight","gridDensityFactorSelector","factor","GridRoot","rootProps","densityValue","rootContainerRef","handleRef","useForkRef","rootElementRef","mountedState","setMountedState","useEnhancedEffect","unstable_updateGridDimensionsRef","disableMultipleSelection","useGridLogger","logger","newLogger","getLogger","GridMainContainerRoot","flexGrow","GridMainContainer","ErrorBoundary","errorInfo","this","api","logError","showError","_this$state","hasError","render","componentProps","GridErrorHandler","errorProps","_rootProps$components","components","ErrorOverlay","errorOverlay","GridHeaderPlaceholder","headerRef","Header","header","createDetectElementResize","nonce","hostWindow","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","offsetWidth","offsetHeight","scrollListener","e","indexOf","__resizeRAF__","cancelAnimationFrame","requestAnimationFrame","__resizeLast__","checkTriggers","__resizeListeners__","fn","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","document","createElement","animationName","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","head","getElementsByTagName","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","removeResizeListener","splice","removeEventListener","removeChild","GridAutoSizer","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","setState","rootRef","parentElement","handleResize","useEventCallback","computedStyle","ownerWindow","paddingLeft","parseInt","paddingRight","newHeight","paddingTop","paddingBottom","newWidth","_parentElement$curren","win","detectElementResize","outerStyle","childParams","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","model","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","index","sort","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridVisibleRowsLookupSelector","quickFilterValues","visibleRowsLookup","gridFilteredRowsLookupSelector","filteredRowsLookup","gridVisibleSortedRowEntriesSelector","filteredDescendantCountLookup","gridVisibleSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridVisibleSortedTopLevelRowEntriesSelector","visibleSortedRows","rowTree","rowTreeDepth","_rowTree$row$id","depth","gridVisibleRowCountSelector","gridVisibleTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","columnLookup","_filterModel$items","items","item","_column$filterOperato","_item$value","columnField","filterOperators","filterOperator","find","operator","operatorValue","InputComponent","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","GridOverlayWrapper","_viewportInnerSize$he","_viewportInnerSize$wi","_apiRef$current$getRo","_apiRef$current$getRo2","getRootDimensions","viewportInnerSize","setViewportInnerSize","handleViewportSizeChange","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","bottom","GridOverlays","_rootProps$components2","_rootProps$components3","visibleRowCount","showNoResultsOverlay","overlay","NoRowsOverlay","noRowsOverlay","NoResultsOverlay","noResultsOverlay","LoadingOverlay","loadingOverlay","GridBody","VirtualScrollerComponent","ColumnHeadersComponent","disableVirtualization","isVirtualizationDisabled","setIsVirtualizationDisabled","enableVirtualization","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","publishEvent","innerRef","marginTop","GridFooterPlaceholder","footerRef","hideFooter","Footer","footer","GridContextProvider","Provider","forceDebug","noop","noopLogger","debug","info","LOG_LEVELS","getAppender","logLevel","appender","minLogLevelIdx","loggerObj","idx","useGridApiMethod","apiMethods","apiName","apiMethodsRef","apiMethodsNames","installMethods","methodName","GridSignature","CLEANUP_TIMER_LOOP_MILLIS","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","clearTimeout","unregister","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","register","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","params","details","_handlerRef$current","defaultMuiPrevented","_subscription$current","_handlerRef$current2","_subscription$current2","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","EventManager","maxListeners","warnOnce","events","listener","collection","highPriority","regular","highPriorityListeners","regularListeners","apply","that","on","oneTimeListener","removeListener","isSyntheticEvent","isPropagationStopped","globalId","_toPropertyKey","arg","hint","prim","Symbol","toPrimitive","TypeError","String","Number","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","useGridInitialization","inputApiRef","unstable_eventManager","unstable_caches","signature","DataGridPro","emit","useGridApiInitialization","useGridLoggerFactory","handleError","useGridErrorHandler","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","others","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","unstable_updateControlState","unstable_registerControlState","useGridStateInitialization","processorsCache","runAppliers","groupCache","values","appliers","callback","registerPipeProcessor","group","processor","processors","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","applyPipeProcessors","context","preProcessor","unstable_registerPipeProcessor","unstable_registerPipeApplier","unstable_requestPipeProcessorsApplication","unstable_applyPipeProcessors","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","unstable_getActiveStrategy","applyStrategyProcessor","activeStrategy","getActiveStrategy","strategyGroup","_availableStrategyEnt","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","unstable_registerStrategyProcessor","unstable_applyStrategyProcessor","unstable_setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","writeToClipboardPolyfill","data","span","userSelect","textContent","body","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","useGridClipboard","copySelectedRowsToClipboard","includeHeaders","getSelectedRows","getDataAsCsv","delimiter","navigator","clipboard","writeText","catch","handleKeydown","_window$getSelection","isModifierKeyPressed","ctrlKey","metaKey","altKey","fromCharCode","keyCode","unstable_copySelectedRowsToClipboard","added","setAdded","wrapHandler","targetElement","boundElem","useGridNativeEventListener","gridColumnMenuSelector","columnMenu","columnMenuStateInitializer","open","useFirstRender","isFirstRender","useGridRegisterPipeProcessor","round","random","registerPreProcessor","useGridRegisterPipeApplier","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","getValueFromOption","option","getValueFromValueOptions","valueOptions","result","optionValue","renderSingleSelectOptions","OptionComponent","valueFormatter","isOptionTypeObject","formattedValue","content","GridFilterInputValue","_baseSelectProps$nati","applyValue","focusElementRef","filterTimeout","filterValueState","setFilterValueState","applying","setIsApplying","useId","isSelectNative","baseSelect","native","singleSelectProps","select","SelectProps","getColumn","MenuItem","onFilterChange","columnValueOptions","_item$value2","itemValue","InputProps","endAdornment","BaseTextField","placeholder","InputLabelProps","shrink","baseTextField","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","_rootProps$experiment","colDef","hasFocus","debounceMs","experimentalFeatures","newEditingApi","isProcessingProps","onValueChange","valueState","setValueState","handleChange","newValue","setEditCellValue","focus","fullWidth","sortModelDisableMultiColumnsSortingWarning","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","stripDiacritics","string","normalize","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","inputValue","getOptionLabel","filteredOptions","candidate","slice","findIndex","array","comp","defaultFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","groupBy","handleHomeEndKeys","idProp","includeInputInList","inputValueProp","isOptionEqualToValue","onClose","onHighlightChange","onInputChange","onOpen","openProp","openOnFocus","selectOnFocus","valueProp","optionLabel","ignoreFocus","firstFocus","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setInputValueState","focused","setFocused","resetInputValue","newInputValue","prevValue","valueChange","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","listboxAvailable","focusTag","tagToFocus","querySelector","setHighlightedIndex","removeAttribute","prev","classList","remove","listboxNode","add","clientHeight","scrollBottom","elementBottom","offsetTop","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","every","isTouch","selectNewValue","reasonProp","origin","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","activeElement","handleInputChange","handleOptionMouseOver","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","handleInputMouseDown","dirty","groupedOptions","getRootProps","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getListSubheaderUtilityClass","ListSubheaderRoot","disableGutters","gutters","inset","disableSticky","sticky","listStyle","fontFamily","ListSubheader","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","AutocompleteRoot","hasClearIcon","hasPopupIcon","inputFocused","tag","inputRoot","clearIndicator","maxWidth","flexWrap","inputClasses","inputBaseClasses","sizeSmall","outlinedInputClasses","filledInputClasses","hiddenLabel","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","AutocompleteLoading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","breakpoints","up","focusVisible","focusOpacity","AutocompleteGroupLabel","groupLabel","AutocompleteGroupUl","groupUl","Autocomplete","_componentsProps$clea","_componentsProps$popu","_componentsProps$popp","_componentsProps$pape","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","Chip","props2","renderListOption","optionProps","title","clientWidth","option2","index2","GridFilterInputMultipleValue","helperText","TextFieldProps","GRID_STRING_COL_DEF","Infinity","hide","hideable","sortable","resizable","groupable","pinnable","editable","sortComparator","compare","disableTrim","getApplyFilterFn","filterItemValue","filterRegex","test","sensitivity","usage","filterValue","getGridStringOperators","renderEditCell","getApplyQuickFilterFn","columnValue","parseNumericValue","getGridNumericOperators","isNaN","InputComponentProps","includes","GRID_NUMERIC_COL_DEF","headerAlign","valueParser","toLocaleString","GridFilterInputDate","dateRegex","dateTimeRegex","buildApplyFilterFn","compareFn","showTime","keepHours","match","year","month","day","hour","minute","time","Date","getTime","valueAsDate","timeToCompare","setHours","getHours","getMinutes","getGridDateOperators","GridEditDateCell","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","toISOString","substr","parsed","formatted","newFormattedDate","newParsedDate","date","setFullYear","hours","minutes","_valueTransformed$par","_state$parsed","renderEditDateCell","GRID_DATE_COL_DEF","toLocaleDateString","GRID_DATETIME_COL_DEF","GridBooleanCell","Icon","BooleanCellTrueIcon","BooleanCellFalseIcon","titleAccess","GridEditBooleanCell","BaseCheckbox","baseCheckbox","GridFilterInputBoolean","displayEmpty","GridEditModes","GridCellModes","GridRowModes","GRID_BOOLEAN_COL_DEF","renderCell","rowNode","isAutoGenerated","valueAsBoolean","isEscapeKey","isEnterKey","isTabKey","isSpaceKey","isDeleteKeys","isPrintableKey","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isCellExitEditModeKeys","isCellEditCommitKeys","isNavigationKey","isHomeOrEndKeys","isArrowKeys","isPageKeys","isKeyboardEvent","isHideMenuKey","GridEditSingleSelectCell","valueOptionsFormatted","editMode","setOpen","formattedTargetValue","isValid","Row","Promise","resolve","commitCellChange","setCellMode","getCellParams","BaseSelect","MenuProps","_rootProps$experiment2","stopCellEditMode","ignoreModifications","GridFilterInputSingleSelect","currentColumn","currentValueOptions","_itemValue","GridFilterInputMultipleSingleSelect","resolvedColumn","resolvedValueOptions","resolvedFormattedValueOptions","filterValueOptionFormatter","filterValues","formattedElement","formatedOption","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","potentialValues","iterableColumnValues","GridMenuRoot","menu","transformOrigin","GridMenu","onClickAway","onExited","prevTarget","prevOpen","BasePopper","placement","basePopper","popperOnExited","TransitionProps","ClickAwayListener","mouseEvent","Grow","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","stop","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","hideMenu","handleTouchRippleRef","instance","handleButtonClick","button","touchRippleRef","MoreActionsIcon","MenuList","autoFocusItem","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","number","dateTime","boolean","singleSelect","COLUMNS_DIMENSION_PROPERTIES","computeColumnTypes","customColumnTypes","mergedColumnTypes","colType","colTypeDef","extendType","GridPreferencePanelsValue","hydrateColumnsWidth","rawState","viewportInnerWidth","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","newColumn","initialFreeSpace","computedColumnWidths","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","createColumnsState","_apiRef$current","columnsStateWithoutColumnVisibilityModel","columnsToUpsert","initialState","columnTypes","currentColumnVisibilityModel","shouldRegenColumnVisibilityModelFromColumns","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","getGridColDef","hasBeenResized","columnsLookupBeforePreProcessing","columnsStateWithPreProcessing","hasModelChanged","newColumnVisibilityModel","isVisibleBefore","isVisibleAfter","columnsStateWithPortableColumns","orderedFields","dimensions","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","mergeColumnsState","getFirstNonSpannedColumnToRender","firstColumnToRender","firstRowToRender","lastRowToRender","visibleRows","firstNonSpannedColumnToRender","rowId","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstColumnIndexToRender","firstColumnIndex","minColumnIndex","columnBuffer","GridDensityTypes","columnsStateInitializer","_props$initialState","_props$initialState$c","_props$initialState2","_props$columnVisibili","_props$initialState3","_props$initialState3$","isUsingColumnVisibilityModel","columnsTypes","getUpdatedDensityState","newDensity","newHeaderHeight","newRowHeight","Compact","floor","Comfortable","densityStateInitializer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","getCellElement","_checkboxElement$curr","shiftKey","isSelectable","isRowSelectable","GridCellCheckboxRenderer","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridPaginationSelector","pagination","gridPageSelector","page","gridPageSizeSelector","pageSize","gridPaginationRowRangeSelector","pageCount","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","getRow","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","isIndeterminate","getColumnHeaderElement","handleSelectionChange","p","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","serializeCellValue","delimiterCharacter","buildCSV","rowIds","CSVBody","cellParams","serializeRow","CSVHead","GridLinkOperator","getColumnsToExport","fields","allColumns","defaultGetRowsToExport","filteredSortedRowIds","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","_options$getRowsToExp","_options$includeHeade","exportedColumns","getRowsToExport","exportedRowIds","csv","blob","extension","filename","fullName","HTMLAnchorElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","_options$csvOptions","csvOptions","disableToolbarButton","gridRowsMetaSelector","rowsMeta","GridFeatureModeConstant","getDefaultGridFilterModel","linkOperator","And","quickFilterLogicOperator","useGridRegisterStrategyProcessor","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","buildAggregatedFilterApplier","isRowMatchingFilterItems","parsedValue","_filterItem$value","parser","x","newFilterItem","applyFilterOnRow","shouldApplyFilter","filteredAppliers","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","columnsFields","appliersPerColumnField","sanitizedQuickFilterValues","usedCellParams","columnsFieldsToFilter","_appliersPerColumnFie","_appliersPerColumnFie2","_appliersPerColumnFie3","_appliersPerColumnFie4","buildAggregatedQuickFilterApplier","filterStateInitializer","_props$filterModel","_props$initialState$f","getVisibleRows","paginationMode","useGridVisibleRows","response","focusStateInitializer","GRID_DETAIL_PANEL_TOGGLE_FIELD","defaultPageSize","autoPageSize","mergeStateWithPageSize","getPageCount","rowCount","ceil","applyValidPage","paginationState","mergeStateWithPage","paginationStateInitializer","_props$initialState$p","_props$page","_props$initialState2$","_props$rowCount","_props$rowCount2","useGridPagination","onPageSizeChange","setPageSize","stateExportPreProcessing","prevState","pageSizeToExport","stateRestorePreProcessing","_context$stateToResto","stateToRestore","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","useGridPageSize","onPageChange","setPage","pageToExport","_context$stateToResto2","scrollToIndexes","rowIndex","useGridPage","gridPreferencePanelStateSelector","preferencePanel","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","isPromise","promise","then","GridCellEditStartReasons","GridCellEditStopReasons","editingStateInitializer","useGridEditing","_props$experimentalFe2","buildCallback","Cell","getCellMode","newEditRowsState","Edit","getCellValue","editRowsState","View","_props$experimentalFe","unstable_runPendingEditCellValueMutation","getEditRowsModel","editCellProps","preventCommitWhileValidating","cellProps","isValidating","commitParams","preProcessEditCellProps","newEditCellProps","unstable_setEditCellProps","setCellEditingEditCellValue","unstable_parseValue","newEditCellPropsProcessed","unstable_setCellEditingEditCellValue","handleCellKeyDown","cellMode","isEditable","isEditMode","handleCellDoubleClick","commitPropsAndExit","handleCellFocusOut","handleColumnHeaderDragStart","handleCellEditStart","handleCellEditStop","setCellFocus","handleCellEditCommit","rowUpdate","valueSetter","updateRows","handleEditCellPropsChange","onCellEditCommit","onCellEditStart","onCellEditStop","useCellEditing","_props$experimentalFe4","focusTimeout","nextFocusedCell","setRowMode","getRowMode","commitRowChange","editRowProps","fieldsWithValidator","validatorErrors","errors","setRowEditingEditCellValue","editRow","unstable_setRowEditingEditCellValue","rowParams","_props$experimentalFe3","handleRowEditStart","handleRowEditStop","handleRowEditCommit","handleCellFocusIn","_nextFocusedCell$curr","onRowEditCommit","onRowEditStart","onRowEditStop","useGridRowEditing","debounceMap","editRowsModel","onEditRowsModelChange","isCellEditable","maybeDebounce","runPendingEditCellValueMutation","debouncedField","newParams","parseValue","setEditCellProps","editProps","setEditRowsModel","preventTextSelection","isMoreThanOneClick","detail","onEditCellPropsChange","GridRowEditStartReasons","GridRowEditStopReasons","_excluded2","missingOnProcessRowUpdateErrorWarning","cellModesModel","setCellModesModel","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","throwIfNotInMode","cellDoubleClick","cellFocusOut","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","deleteKeyDown","startCellEditModeParams","deleteValue","startCellEditMode","cellToFocusAfter","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_cellModesModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","updateStateToStopCellEditMode","finishCellEditMode","unstable_moveFocusToRelativeCell","unstable_getRowWithUpdatedValuesFromCellEditing","errorThrown","finalRowUpdate","hasChanged","getRowWithUpdatedValuesFromCellEditing","copyOfPrevCellModes","_copyOfPrevCellModes$","_copyOfPrevCellModes$2","_idToIdLookup$id","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","prevRowModesModel","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","rowFocusOut","columnFields","startRowEditModeParams","fieldToFocus","startRowEditMode","fieldProps","stopRowEditMode","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","shouldDeleteValue","updateStateToStopRowEditMode","focusedField","finishRowEditMode","unstable_getRowWithUpdatedValuesFromRowEditing","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","getRowWithUpdatedValuesFromRowEditing","copyOfPrevRowModesModel","_copyOfPrevRowModesMo","isCellEditableProp","debounces","runCallback","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getRowWithUpdatedValues","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","JSON","checkGridRowIdIsValid","createRowsInternalCache","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","getRowsStateFromCache","previousTree","rowCountProp","loadingProp","_apiRef$current$unsta","cacheForGrouping","groupingResponse","processedGroupingResponse","dataTopLevelRowCount","parent","groupingResponseBeforeRowHydration","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","_tree$parentId","validDescendants","child","childNode","rowsStateInitializer","useGridRows","currentPage","lastUpdateMs","now","throttledRowsChange","newCache","throttle","run","throttleRemainingTimeMs","throttleRowsMs","setRows","updates","DataGrid","uniqUpdates","update","deletedRowIds","prevCache","partialRow","_action","getRowModels","allRows","getRowsCount","getAllRowIds","getRowIndexRelativeToVisibleRows","setRowChildrenExpansion","isExpanded","currentNode","getRowNode","newNode","childrenExpanded","_gridRowTreeSelector$","getRowGroupChildren","groupId","applySorting","applyFiltering","groupNode","sortedRowIds","startIndex","childId","rowApi","setRowIndex","targetIndex","oldIndex","updatedRows","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","flatRowTreeCreationMethod","groupingKey","groupingField","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElement","useGridParamsApi","getColumnHeaderParams","getCellValueWithDeprecationWarning","getAllColumns","getValue","getBaseCellParams","cellFocus","cellTabIndex","getGridColumnHeaderElement","getRowElement","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","selectionStateInitializer","_getSelectionModelPro","selectionModel","useGridSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","sortingStateInitializer","_props$sortModel","_props$initialState$s","scrollIntoView","rowsMetaStateInitializer","currentPageTotalHeight","useDataGridComponent","useGridRowsPreProcessors","editingStateInitializer_new","editingStateInitializer_old","goToCell","colIndex","_visibleSortedRows$ro","closestColumnToUse","nextCellColSpanInfo","rightVisibleCellIndex","getVisibleColumns","goToHeader","setColumnHeaderFocus","handleCellNavigationKeyDown","viewportPageSize","unstable_getViewportPageSize","colIndexBefore","getColumnIndex","rowIndexBefore","firstRowIndexInPage","lastRowIndexInPage","lastColIndex","shouldPreventDefault","nextRowIndex","handleColumnHeaderKeyDown","_currentPage$range$fi","_currentPage$range","_currentPage$range$la","_currentPage$range2","headerTitleNode","toggleColumnMenu","useGridKeyboardNavigation","propSelectionModel","lastRowToggled","onSelectionModelChange","disableSelectionOnClick","canHaveMultipleSelection","expandMouseRowRangeSelection","_lastRowToggled$curre","endId","startId","isSelected","isRowSelected","endIndex","selectRowRange","setSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","selectionLookup","allPagesRowIds","start","end","rowsBetweenStartAndEnd","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleCellClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","previousRowIndex","isStateControlled","currentPageRowsLookup","firstSelectableRow","useGridSelection","_props$componentsProp2","previousColumnsProp","previousColumnTypesProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnsMeta","getColumnPosition","setColumnVisibilityModel","updateColumns","updateColumn","setColumnVisibility","isVisible","_columnVisibilityMode","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","setColumnWidth","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","_props$componentsProp","ColumnsPanel","columnsPanel","prevInnerWidth","onColumnVisibilityChange","hydrateColumns","useGridColumns","setCellColSpanInfo","columnIndex","sizes","getCellColSpanInfo","_lookup$current$rowId","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","colSpan","j","nextColumnIndex","calculateColSpan","minFirstColumn","maxLastColumn","unstable_calculateColSpan","handleColumnReorderChange","useGridColumnSpanning","useGridEditing_new","useGridEditing_old","lastClickedCell","focusedCell","moveFocusToRelativeCell","columnIndexToFocus","rowIndexToFocus","rowToFocus","columnToFocus","handleColumnHeaderFocus","handleCellMouseUp","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","filteringResult","applyFilters","upsertFilterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","newFilterItems","filterItemsWithValue","filters","hideFilterPanel","setFilterLinkOperator","setQuickFilterValues","unstable_applyFilters","getVisibleRowModels","filterModelToExport","callbacks","FilterPanel","filterPanel","flatFilteringMethod","handleColumnsChange","filterableColumnsLookup","useGridFilter","onSortModelChange","upsertSortModel","existingIdx","c","newSortModel","createSortItem","directionOverride","_col$sortingOrder2","existing","_col$sortingOrder","nextSort","sortingMode","sortRowList","comparatorList","comparator","getSortCellParams","parseSortItem","rowList","parsedSortItems","row1Params","row2Params","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRows","getSortedRowIds","getRowIndex","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","handleColumnHeaderClick","latestColumns","useGridSorting","setDensity","currentDensityState","newDensityState","useGridDensity","getRowHeightProp","getRowHeight","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","rowHeightFromDensity","hydrateRowsMeta","densityFactor","base","isResized","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","estimatedRowHeight","initialHeights","_spacing$top","_spacing$bottom","indexRelativeToCurrentPage","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","acc2","setRowHeight","debouncedHydrateRowsMeta","debounce","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","_rowsHeightLookup$cur2","getLastMeasuredRowIndex","setLastMeasuredRowIndex","unstable_getLastMeasuredRowIndex","unstable_setLastMeasuredRowIndex","unstable_rowHasAutoHeight","unstable_getRowHeight","unstable_getRowInternalSizes","_rowsHeightLookup$cur","unstable_setRowHeight","unstable_storeRowHeightMeasurement","useGridRowsMeta","colRef","scrollCoordinates","cellWidth","columnPositions","_visibleSortedRows$pa","elementIndex","targetOffsetHeight","scroll","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","relatedTarget","columnMenuLostFocus","columnMenuItemLostFocus","useGridColumnMenu","previousGridState","previousColumnVisibility","updateGridColumnsForPrint","exportedColumnFields","buildPrintWindow","iframeEl","src","location","handlePrintWindowLoad","printWindow","_printWindow$contentW","_querySelector","_querySelector2","normalizeOptions","copyStyles","hideToolbar","onload","printDoc","contentDocument","contentWindow","gridRootElement","gridClone","cloneNode","gridCloneViewport","virtualScroller","columnHeaders","columnHeadersInner","_gridClone$querySelec","_gridClone$querySelec2","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","defaultPageStyle","pageStyle","styleElement","bodyClassName","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","attributes","attr","nodeName","nodeValue","print","handlePrintWindowAfterPrint","_previousGridState$cu","_previousGridState$cu2","restoreState","exportState","onafterprint","_options$printOptions","printOptions","useGridPrintExport","errorShown","rootDimensionsRef","fullDimensionsRef","updateGridDimensionsRef","_apiRef$current$rootE","rootElement","columnsTotalWidth","scrollBarSize","viewportOuterSize","hasScrollX","hasScrollY","scrollbarSize","scrollDiv","scrollInformation","container","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","hasScroll","newFullDimensions","prevDimensions","resize","getViewportPageSize","renderContext","unstable_getRenderContext","debounceResize","isFirstSizing","isJSDOM","userAgent","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onColumnOrderChange","onCellClick","onCellDoubleClick","onCellKeyDown","onCellFocusOut","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onError","onStateChange","useGridEvents","useGridStatePersistence","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelLinkOperator","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","getSwitchUtilityClass","cachedSupportsPreventScroll","switchClasses","SwitchRoot","flexShrink","colorAdjust","thumb","switchBase","SwitchSwitchBase","Switch","defaultColor","common","white","grey","shortest","defaultDisabledColor","track","switchTrackDisabled","SwitchTrack","onBackground","black","switchTrack","SwitchThumb","sx","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnMenuContainer","labelledby","handleListKeyDown","GridColumnsMenuItem","showColumns","disableColumnSelector","GridFilterMenuItem","showFilter","disableColumnFilter","HideGridColMenuItem","timeoutRef","toggleColumn","SortGridMenuItems","onSortMenuItemClick","GridColumnMenu","defaultButtons","preProcessedButtons","GridRowCountRoot","GridRowCount","GridSelectedRowCountRoot","selectedRowCount","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","borderTop","GridFooterContainer","GridFooter","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","paginationElement","hideFooterPagination","Pagination","GridHeader","PreferencesPanel","preferencesPanel","Toolbar","toolbar","GridPreferencesPanel","_preferencePanelState","panelContent","Panel","panel","getCircularProgressUtilityClass","_t","_t2","_t3","_t4","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","thickness","circleStyle","rootStyle","circumference","PI","toFixed","viewBox","cx","cy","r","fill","strokeWidth","GridOverlayRoot","GridOverlay","GridLoadingOverlay","GridNoRowsOverlay","TablePaginationActions","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","rowsPerPage","showFirstButton","showLastButton","useTheme","LastPageIcon","FirstPageIcon","KeyboardArrowRight","KeyboardArrowLeft","getTablePaginationUtilityClass","_InputBase","tablePaginationClasses","TablePaginationRoot","TablePaginationToolbar","actions","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","to","defaultGetAriaLabel","TablePagination","ActionsComponent","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","MenuItemComponent","selectId","labelId","rowsPerPageOption","_createElement","isHostComponent","GridPaginationRoot","GridPagination","_rootProps$rowsPerPag","lastPage","handlePageSizeChange","newPageSize","handlePageChange","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","TrapFocus","disableEnforceFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","FormControl","_","filterFormDeleteIcon","marginBottom","FilterFormLinkOperatorInput","filterFormLinkOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getLinkOperatorLocaleKey","Or","getColumnLabel","GridFilterForm","_rootProps$components4","_rootProps$components5","_currentColumn$filter2","hasMultipleFilters","deleteFilter","applyFilterChanges","multiFilterOperator","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","linkOperators","columnsSort","deleteIconProps","linkOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","linkOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","hasLinkOperatorColumn","baseFormControlProps","baseFormControl","isBaseSelectNative","valueInputPropsOther","sortedFilterableColumns","currentOperator","_currentColumn$filter","changeColumn","newOperator","eraseItemValue","changeOperator","changeLinkOperator","_valueRef$current","BaseFormControl","FilterPanelDeleteIcon","InputLabel","GridFilterPanel","lastFilterRef","filterFormProps","applyFilter","applyFilterLinkOperator","getDefaultItem","firstColumnWithOperator","_colDef$filterOperato","defaultItem","shouldCloseFilterPanel","BaseButton","startIcon","baseButton","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridColumnsPanelRoot","GridColumnsPanelRowRoot","columnsPanelRow","GridIconButtonRoot","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","_apiRef$current$colum","isPlaced","setIsPlaced","handleClickAway","modifiers","enabled","phase","effect","elevation","EmptyCell","GridColumnUnsortedIcon","ColumnSortedAscendingIcon","ColumnSortedDescendingIcon","defaultLabel","GridNoResultsOverlay","DEFAULT_GRID_ICON_SLOTS_COMPONENTS","ColumnMenuIcon","OpenFilterButtonIcon","ColumnFilteredIcon","ColumnSelectorIcon","ColumnUnsortedIcon","ColumnResizeIcon","DensityCompactIcon","DensityStandardIcon","DensityComfortableIcon","ExportIcon","TreeDataCollapseIcon","TreeDataExpandIcon","GroupingCriteriaCollapseIcon","GroupingCriteriaExpandIcon","DetailPanelExpandIcon","DetailPanelCollapseIcon","RowReorderIcon","QuickFilterIcon","QuickFilterClearIcon","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","MUICheckbox","MUITextField","MUIFormControl","MUISelect","BaseSwitch","MUISwitch","MUIButton","BaseTooltip","MUITooltip","MUIPopper","showRightBorder","disableDragEvents","onDoubleClick","onMouseUp","onDragEnter","onDragOver","valueToRender","cellRef","publishMouseUp","publish","propHandler","focusableElement","elementToFocus","preventScroll","scrollPosition","managesOwnFocus","draggableEventHandlers","ColumnHeaderFilterIconButton","counter","toggleFilter","iconButton","enterDelay","baseTooltip","Badge","badgeContent","ColumnMenu","searchInputRef","searchValue","setSearchValue","toggleAllColumns","fromEntries","handleSearchValueChange","currentColumns","searchValueToCheck","baseSwitch","disableColumnReorder","draggable","styleProp","renderedColumns","containerWidth","onMouseEnter","onMouseLeave","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","nodeType","publishClick","rowSpacingType","rowClassName","getRowClassName","cells","indexRelativeToAllColumns","isLastColumn","disableExtendRowFullWidth","showCellRightBorder","classNames","rowReordering","_rootProps$classes","editCellState","_rootProps$classes2","updatedRow","getCellClassName","emptyCellWidth","DATA_GRID_FORCED_PROPS","disableColumnResize","DATA_GRID_PROPS_DEFAULT_VALUES","rowBuffer","columnThreshold","rowThreshold","Standard","disableDensitySelector","showColumnRightBorder","VirtualScrollerRoot","GridVirtualScroller","VirtualScrollerContentRoot","virtualScrollerContent","GridVirtualScrollerContent","overflowedContent","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","binarySearch","offset","sliceStart","sliceEnd","pivot","itemOffset","getRenderableIndexes","firstIndex","lastIndex","buffer","minFirstIndex","maxLastIndex","useGridVirtualScroller","onRenderZonePositioning","renderZoneMinColumnIndex","renderZoneMaxColumnIndex","getRowProps","selectedRowsLookup","renderZoneRef","setRenderContext","prevRenderContext","setContainerWidth","prevTotalWidth","getNearestIndexToRender","lastMeasuredIndex","interval","exponentialSearch","computeRenderContext","lastColumnIndex","updateRenderZonePosition","nextRenderContext","updateRenderContext","initialRenderContext","handleScroll","topRowsScrolledSincePreviousRender","bottomRowsScrolledSincePreviousRender","topColumnsScrolledSincePreviousRender","bottomColumnsScrolledSincePreviousRender","shouldSetState","ReactDOM","handleWheel","handleTouchMove","needsHorizontalScrollbar","contentSize","shouldExtendContent","overflowY","getRenderContext","getRows","availableSpace","ignoreAutoHeight","renderedRows","initialFirstColumnToRender","lastColumnToRender","lastVisibleRowIndex","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","DataGridVirtualScroller","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderSortIcon","GridColumnHeaderTitleRoot","columnHeaderTitle","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","columnWidth","titleRef","tooltip","setTooltip","isOver","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","side","Right","resizing","stopClick","GridColumnHeaderSeparator","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","GridColumnHeaderMenu","ContentComponent","contentComponentProps","GridColumnHeaderItem","_column$sortingOrder","_column$headerName","columnMenuOpen","isResizing","filterItemsCounter","extendRowFullWidth","separatorSide","headerCellRef","showColumnMenuIcon","setShowColumnMenuIcon","isDraggable","headerComponent","mouseEventsHandlers","onMouseOut","onDragStart","onDragEnd","isDragging","isColumnSorted","isColumnFiltered","isColumnNumeric","draggableContainer","titleContainer","titleContainerContent","handleExited","columnMenuIconButton","columnTitleIconButtons","columnHeaderFilterIconButton","hideSortIcons","columnMenuState","GridScrollAreaRawRoot","scrollArea","GridScrollAreaRaw","scrollDirection","dragging","setDragging","handleScrolling","newScrollPosition","handleDragOver","clientX","getBoundingClientRect","toggleDragging","prevDragging","GridScrollArea","GridColumnHeadersRoot","borderTopLeftRadius","borderTopRightRadius","GridColumnHeaders","GridColumnHeadersInnerRoot","columnHeaderDropZone","GridColumnHeadersInner","DataGridColumnHeaders","innerRefProp","dragCol","setDragCol","resizeCol","setResizeCol","cellTabIndexState","columnHeaderFocus","filterColumnLookup","sortColumnLookup","handleInnerRef","prevScrollLeft","getFirstColumnIndexToRenderRef","defaultMemoize","equalityCheck","updateInnerPosition","_prevRenderContext$cu","_prevRenderContext$cu2","canUpdateInnerPosition","isUIEvent","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumns","isFirstColumn","hasTabbableElement","getInnerProps","useGridColumnHeaders","DataGridRaw","themedProps","overrides","mergedComponents","defaultComponent","useDataGridProps","propTypes","PropTypes","bool","isRequired","oneOf","any","warnIfFocusStateIsNotSynced","arrayOf","oneOfType","func","getDetailPanelContent"],"mappings":"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","file":"static/js/0.e92a73da.chunk.js","sourcesContent":["export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object';\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import { localStorageAvailable } from '../utils/utils'; // A guide to feature toggling.\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nlet experimentalEnabled = false;\n\nif (typeof process !== 'undefined' && process.env.GRID_EXPERIMENTAL_ENABLED !== undefined && localStorageAvailable() && window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED')) {\n  experimentalEnabled = window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED') === 'true';\n} else if (typeof process !== 'undefined') {\n  experimentalEnabled = process.env.GRID_EXPERIMENTAL_ENABLED === 'true';\n}\n\nexport const GRID_EXPERIMENTAL_ENABLED = experimentalEnabled;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { darken, alpha, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport tableCellClasses, { getTableCellUtilityClass } from './tableCellClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\n\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body2, {\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16\n}, ownerState.variant === 'head' && {\n  color: (theme.vars || theme).palette.text.primary,\n  lineHeight: theme.typography.pxToRem(24),\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.variant === 'body' && {\n  color: (theme.vars || theme).palette.text.primary\n}, ownerState.variant === 'footer' && {\n  color: (theme.vars || theme).palette.text.secondary,\n  lineHeight: theme.typography.pxToRem(21),\n  fontSize: theme.typography.pxToRem(12)\n}, ownerState.size === 'small' && {\n  padding: '6px 16px',\n  [`&.${tableCellClasses.paddingCheckbox}`]: {\n    width: 24,\n    // prevent the checkbox column from growing\n    padding: '0 12px 0 16px',\n    '& > *': {\n      padding: 0\n    }\n  }\n}, ownerState.padding === 'checkbox' && {\n  width: 48,\n  // prevent the checkbox column from growing\n  padding: '0 0 0 4px'\n}, ownerState.padding === 'none' && {\n  padding: 0\n}, ownerState.align === 'left' && {\n  textAlign: 'left'\n}, ownerState.align === 'center' && {\n  textAlign: 'center'\n}, ownerState.align === 'right' && {\n  textAlign: 'right',\n  flexDirection: 'row-reverse'\n}, ownerState.align === 'justify' && {\n  textAlign: 'justify'\n}, ownerState.stickyHeader && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 2,\n  backgroundColor: (theme.vars || theme).palette.background.default\n}));\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n\n  let scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n\n  const ownerState = _extends({}, props, {\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/_jsx(TableCellRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default TableCell;","import { generateUtilityClasses, generateUtilityClass } from '@mui/material';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'autoHeight', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--withRenderer', 'cell', 'cellContent', 'cellCheckbox', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderDropZone', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeaders', 'columnHeadersInner', 'columnHeadersInner--scrollable', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsPanel', 'columnsPanelRow', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filterForm', 'filterFormDeleteIcon', 'filterFormLinkOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'iconButtonContainer', 'iconSeparator', 'main', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'row', 'row--editable', 'row--editing', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'pinnedColumns--left', 'pinnedColumns--right', 'pinnedColumnHeaders', 'pinnedColumnHeaders--left', 'pinnedColumnHeaders--right', 'withBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { darken, lighten, alpha, styled } from '@mui/material/styles';\nimport { gridClasses } from '../../constants/gridClasses';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.autoHeight}`]: styles.autoHeight\n  }, {\n    [`& .${gridClasses.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${gridClasses['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${gridClasses['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${gridClasses['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${gridClasses['cell--textRight']}`]: styles['cell--textRight']\n  }, // TODO v6: Remove\n  {\n    [`& .${gridClasses['cell--withRenderer']}`]: styles['cell--withRenderer']\n  }, {\n    [`& .${gridClasses.cell}`]: styles.cell\n  }, {\n    [`& .${gridClasses.cellContent}`]: styles.cellContent\n  }, {\n    [`& .${gridClasses.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${gridClasses.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${gridClasses['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${gridClasses['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${gridClasses['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${gridClasses['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${gridClasses['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${gridClasses['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${gridClasses['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${gridClasses['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${gridClasses.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${gridClasses.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${gridClasses['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${gridClasses['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${gridClasses.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${gridClasses.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${gridClasses.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${gridClasses.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${gridClasses.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${gridClasses.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${gridClasses.menuList}`]: styles.menuList\n  }, {\n    [`& .${gridClasses['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${gridClasses['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${gridClasses['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${gridClasses.row}`]: styles.row\n  }, {\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${gridClasses.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${gridClasses.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${gridClasses.withBorder}`]: styles.withBorder\n  }, {\n    [`& .${gridClasses.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${gridClasses.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${gridClasses['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n\n  const gridStyle = _extends({\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    border: `1px solid ${borderColor}`,\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.text.primary\n  }, theme.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    [`&.${gridClasses.autoHeight}`]: {\n      height: 'auto',\n      [`& .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n        borderBottomColor: 'transparent'\n      }\n    },\n    [`& .${gridClasses['virtualScrollerContent--overflowed']} .${gridClasses['row--lastVisible']} .${gridClasses.cell}`]: {\n      borderBottomColor: 'transparent'\n    },\n    [`& .${gridClasses.columnHeader}, & .${gridClasses.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${gridClasses.columnHeader}:focus-within, & .${gridClasses.cell}:focus-within`]: {\n      outline: `solid ${alpha(theme.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${gridClasses.columnHeader}:focus, & .${gridClasses.cell}:focus`]: {\n      outline: `solid ${theme.palette.primary.main} 1px`\n    },\n    [`& .${gridClasses.columnHeaderCheckbox}, & .${gridClasses.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses['columnHeader--sorted']} .${gridClasses.iconButtonContainer}, & .${gridClasses['columnHeader--filtered']} .${gridClasses.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}) .${gridClasses.sortIcon}`]: {\n      opacity: 0,\n      transition: theme.transitions.create(['opacity'], {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n    [`& .${gridClasses.columnHeader}:not(.${gridClasses['columnHeader--sorted']}):hover .${gridClasses.sortIcon}`]: {\n      opacity: 0.5\n    },\n    [`& .${gridClasses.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflowX: 'hidden'\n    },\n    [`& .${gridClasses.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.sortIcon}, & .${gridClasses.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${gridClasses['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderDraggableContainer}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${gridClasses['columnHeader--alignCenter']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}, & .${gridClasses['columnHeader--alignRight']} .${gridClasses.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${gridClasses['columnHeader--moving']}`]: {\n      backgroundColor: theme.palette.action.hover\n    },\n    [`& .${gridClasses.columnSeparator}`]: {\n      position: 'absolute',\n      zIndex: 100,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${gridClasses['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${gridClasses['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${gridClasses['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: theme.palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${gridClasses['columnSeparator--resizing']}`]: {\n        color: theme.palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${gridClasses.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${gridClasses.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${gridClasses.columnHeader}:hover`]: {\n      [`& .${gridClasses.iconButtonContainer}`]: {\n        visibility: 'visible',\n        width: 'auto'\n      },\n      [`& .${gridClasses.menuIcon}`]: {\n        width: 'auto',\n        visibility: 'visible'\n      }\n    },\n    [`.${gridClasses.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${gridClasses.row}`]: {\n      display: 'flex',\n      width: 'fit-content',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n      '&:hover, &.Mui-hovered': {\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n        '&:hover, &.Mui-hovered': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n          }\n        }\n      }\n    },\n    [`& .${gridClasses.cell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      borderBottom: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses.row}:not(.${gridClasses['row--dynamicHeight']}) > .${gridClasses.cell}`]: {\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    },\n    [`& .${gridClasses.cellContent}`]: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    [`& .${gridClasses.cell}.${gridClasses['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: theme.shadows[2],\n      backgroundColor: theme.palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${theme.palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${gridClasses['row--editing']}`]: {\n      boxShadow: theme.shadows[2]\n    },\n    [`& .${gridClasses['row--editing']} .${gridClasses.cell}`]: {\n      boxShadow: theme.shadows[0],\n      backgroundColor: theme.palette.background.paper\n    },\n    [`& .${gridClasses.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"true\"]`]: {\n      color: theme.palette.text.secondary\n    },\n    [`& .${gridClasses.booleanCell}[data-value=\"false\"]`]: {\n      color: theme.palette.text.disabled\n    },\n    [`& .${gridClasses.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: theme.spacing(1)\n    },\n    [`& .${gridClasses.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${gridClasses.rowReorderCellContainer}`]: {\n      padding: 0,\n      alignItems: 'stretch'\n    },\n    [`& .${gridClasses.withBorder}`]: {\n      borderRight: `1px solid ${borderColor}`\n    },\n    [`& .${gridClasses['cell--textLeft']}`]: {\n      justifyContent: 'flex-start'\n    },\n    [`& .${gridClasses['cell--textRight']}`]: {\n      justifyContent: 'flex-end'\n    },\n    [`& .${gridClasses['cell--textCenter']}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${gridClasses.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%'\n    },\n    [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${gridClasses['columnHeader--dragging']}, & .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity\n    },\n    [`& .${gridClasses['row--dragging']}`]: {\n      background: theme.palette.background.paper,\n      padding: '0 12px',\n      borderRadius: theme.shape.borderRadius,\n      opacity: theme.palette.action.disabledOpacity,\n      [`& .${gridClasses.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${gridClasses.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    },\n    [`& .${gridClasses.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${gridClasses.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: theme.spacing(2)\n    }\n  });\n\n  return gridStyle;\n});","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: null\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  if (cacheContainer.cache === null) {\n    cacheContainer.cache = {};\n  }\n\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cacheContainer.cache === null) {\n      cacheContainer.cache = {};\n    }\n\n    const {\n      cache\n    } = cacheContainer;\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.acceptsApiRef = true;\n  return selector;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = null;\n};","import { createSelector } from '../../../utils/createSelector';\nimport { wrapWithWarningOnCall } from '../../../utils/warning';\n/**\n * @category Columns\n * @deprecated Use the selector returning exactly the value you are looking for.\n * @ignore - do not document.\n * TODO v6: Rename `gridColumnsStateSelector`\n */\n\nexport const gridColumnsSelector = state => state.columns;\n/**\n * Get the field of each column.\n * @category Columns\n */\n\nexport const gridColumnFieldsSelector = createSelector(gridColumnsSelector, columnsState => columnsState.all);\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridColumnLookupSelector = createSelector(gridColumnsSelector, columnsState => columnsState.lookup);\n/**\n * Get the columns as an array.\n * @category Columns\n */\n\nexport const gridColumnDefinitionsSelector = createSelector(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\n\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsSelector, columnsState => columnsState.columnVisibilityModel);\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\n\nexport const gridVisibleColumnFieldsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\n\nexport const gridColumnPositionsSelector = createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n\n  return positions;\n});\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\n\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n\n  if (colCount === 0) {\n    return 0;\n  }\n\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\n\nexport const gridFilterableColumnDefinitionsSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\n\nexport const gridFilterableColumnLookupSelector = createSelector(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n\n  return acc;\n}, {}));\n/**\n * @category Columns\n * @deprecated Use `gridColumnFieldsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsFieldsSelector = wrapWithWarningOnCall(gridColumnFieldsSelector, ['MUI: The method allGridColumnsFieldsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnFieldsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const allGridColumnsSelector = wrapWithWarningOnCall(gridColumnDefinitionsSelector, ['MUI: The method allGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridColumnDefinitionsSelector instead']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsSelector = wrapWithWarningOnCall(gridVisibleColumnDefinitionsSelector, ['MUI: The method visibleGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridVisibleColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsSelector = wrapWithWarningOnCall(gridFilterableColumnDefinitionsSelector, ['MUI: The method filterableGridColumnsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead']);\n/**\n * @category Columns\n * @deprecated Use `gridFilterableColumnLookupSelector` instead (not the same return format).\n * @ignore - do not document.\n */\n\nexport const filterableGridColumnsIdsSelector = wrapWithWarningOnCall(createSelector(gridFilterableColumnDefinitionsSelector, columns => columns.map(col => col.field)), ['MUI: The method filterableGridColumnsIdsSelector is deprecated and will be removed in the next major version.', 'Use gridFilterableColumnDefinitionsSelector instead.', 'The return format is now a lookup, if you want to get the same output as before, use the following code:', '', 'const lookup = gridFilterableColumnLookupSelector(apiRef);', 'const fields = gridColumnFieldsSelector(apiRef).filter(field => lookup[field]);']);\n/**\n * Get the amount of visible columns.\n * @category Visible Columns\n * @deprecated Use the length of the array returned by `gridVisibleColumnDefinitionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const visibleGridColumnsLengthSelector = wrapWithWarningOnCall(createSelector(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.length), ['MUI: The method visibleGridColumnsLengthSelector is deprecated and will be removed in the next major version.', 'Use the length of the array returned by gridVisibleColumnDefinitionsSelector instead.']);\n/**\n * @category Visible Columns\n * @deprecated Use `gridColumnsTotalWidthSelector` or `gridColumnPositionsSelector` instead.\n * @ignore - do not document.\n */\n\nexport const gridColumnsMetaSelector = wrapWithWarningOnCall(createSelector(gridColumnPositionsSelector, gridColumnsTotalWidthSelector, (positions, totalWidth) => ({\n  totalWidth,\n  positions\n})), ['MUI: The method gridColumnsMetaSelector is deprecated and will be removed in the next major version.', 'Use gridColumnsTotalWidthSelector or gridColumnPositionsSelector instead']);","import { buildWarning } from '../../utils/warning';\n\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n\nconst stateNotInitializedWarning = buildWarning(['MUI: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nexport const useGridSelector = (apiRef, selector) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n\n  return selector(apiRef.current.state);\n};","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from '../../components/GridApiContext';\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n\n  if (apiRef === undefined) {\n    throw new Error(['MUI: Could not find the data grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n\n  return apiRef;\n}","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\n\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\n\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from '../../context/GridRootPropsContext';\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n\n  if (!contextValue) {\n    throw new Error('MUI: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n\n  return contextValue;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idRowsLookup);\nexport const gridRowsIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.idToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepth);\nexport const gridRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.ids);","import { createSelector } from '../../../utils/createSelector';\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityValueSelector = createSelector(gridDensitySelector, density => density.value);\nexport const gridDensityRowHeightSelector = createSelector(gridDensitySelector, density => density.rowHeight);\nexport const gridDensityHeaderHeightSelector = createSelector(gridDensitySelector, density => density.headerHeight);\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => density.factor);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import * as React from 'react';\nexport function useGridLogger(apiRef, name) {\n  const logger = React.useRef(null);\n\n  if (logger.current) {\n    return logger.current;\n  }\n\n  const newLogger = apiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMainContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})(() => ({\n  position: 'relative',\n  flexGrow: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'hidden'\n}));\nexport function GridMainContainer(props) {\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridMainContainerRoot, {\n    className: classes.root,\n    children: props.children\n  });\n}","import * as React from 'react';\nexport class ErrorBoundary extends React.Component {\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    if (this.props.api.current) {\n      this.logError(error); // Allows to trigger the Error event and all listener can run on Error\n\n      this.props.api.current.showError({\n        error,\n        errorInfo\n      });\n    }\n  }\n\n  logError(error, errorInfo) {\n    this.props.logger.error(`An unexpected error occurred. Error: ${error && error.message}. `, error, errorInfo);\n  }\n\n  render() {\n    var _this$state;\n\n    if (this.props.hasError || (_this$state = this.state) != null && _this$state.hasError) {\n      // You can render any custom fallback UI\n      return this.props.render(this.props.componentProps || this.state);\n    }\n\n    return this.props.children;\n  }\n\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridLogger } from '../../hooks/utils/useGridLogger';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { ErrorBoundary } from '../ErrorBoundary';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridErrorHandler(props) {\n  const {\n    children\n  } = props;\n  const apiRef = useGridApiContext();\n  const logger = useGridLogger(apiRef, 'GridErrorHandler');\n  const rootProps = useGridRootProps();\n  const error = apiRef.current.state.error;\n  return /*#__PURE__*/_jsx(ErrorBoundary, {\n    hasError: error != null,\n    componentProps: error,\n    api: apiRef,\n    logger: logger,\n    render: errorProps => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(GridMainContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.components.ErrorOverlay, _extends({}, errorProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.errorOverlay))\n      });\n    },\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridErrorHandler.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node\n} : void 0;\nexport { GridErrorHandler };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridHeaderPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerRef = React.useRef(null);\n  apiRef.current.headerRef = headerRef;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: headerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Header, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.header))\n  });\n}","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n *\n * TODO replace with https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n * once browser support allows it.\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  var resetTriggers = function resetTriggers(element) {\n    var triggers = element.__resizeTriggers__,\n        expand = triggers.firstElementChild,\n        contract = triggers.lastElementChild,\n        expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = expand.offsetWidth + 1 + 'px';\n    expandChild.style.height = expand.offsetHeight + 1 + 'px';\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n\n  var checkTriggers = function checkTriggers(element) {\n    return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n  };\n\n  var scrollListener = function scrollListener(e) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n      return;\n    }\n\n    var element = this;\n    resetTriggers(this);\n\n    if (this.__resizeRAF__) {\n      hostWindow.cancelAnimationFrame(this.__resizeRAF__);\n    }\n\n    this.__resizeRAF__ = hostWindow.requestAnimationFrame(function () {\n      if (checkTriggers(element)) {\n        element.__resizeLast__.width = element.offsetWidth;\n        element.__resizeLast__.height = element.offsetHeight;\n\n        element.__resizeListeners__.forEach(function (fn) {\n          fn.call(element, e);\n        });\n      }\n    });\n  };\n  /* Detect CSS Animations support to detect element display/re-attach */\n\n\n  var animation = false,\n      keyframeprefix = '',\n      animationstartevent = 'animationstart',\n      domPrefixes = 'Webkit Moz O ms'.split(' '),\n      startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n      pfx = '';\n  {\n    var elm = document.createElement('fakeelement');\n\n    if (elm.style.animationName !== undefined) {\n      animation = true;\n    }\n\n    if (animation === false) {\n      for (var i = 0; i < domPrefixes.length; i++) {\n        if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n          pfx = domPrefixes[i];\n          keyframeprefix = '-' + pfx.toLowerCase() + '-';\n          animationstartevent = startEvents[i];\n          animation = true;\n          break;\n        }\n      }\n    }\n  }\n  var animationName = 'resizeanim';\n  var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n  var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('muiDetectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.Mui-resizeTriggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.Mui-resizeTriggers, .Mui-resizeTriggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .Mui-resizeTriggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'muiDetectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (!element.__resizeTriggers__) {\n      var doc = element.ownerDocument;\n      var elementStyle = hostWindow.getComputedStyle(element);\n\n      if (elementStyle && elementStyle.position == 'static') {\n        element.style.position = 'relative';\n      }\n\n      createStyles(doc);\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className = 'Mui-resizeTriggers';\n      element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n      /* Listen for a css animation to detect element display/re-attach */\n\n      if (animationstartevent) {\n        element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n          if (e.animationName == animationName) {\n            resetTriggers(element);\n          }\n        };\n\n        element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n      }\n    }\n\n    element.__resizeListeners__.push(fn);\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n\n      try {\n        element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n      } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n\n  return {\n    addResizeListener,\n    removeResizeListener\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"defaultHeight\", \"defaultWidth\", \"disableHeight\", \"disableWidth\", \"nonce\", \"onResize\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForkRef, ownerWindow, useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport createDetectElementResize from '../lib/createDetectElementResize'; // TODO replace with https://caniuse.com/resizeobserver.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridAutoSizer = /*#__PURE__*/React.forwardRef(function AutoSizer(props, ref) {\n  const {\n    children,\n    defaultHeight = null,\n    defaultWidth = null,\n    disableHeight = false,\n    disableWidth = false,\n    nonce,\n    onResize,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [state, setState] = React.useState({\n    height: defaultHeight,\n    width: defaultWidth\n  });\n  const rootRef = React.useRef(null);\n  const parentElement = React.useRef(null);\n  const handleResize = useEventCallback(() => {\n    // Guard against AutoSizer component being removed from the DOM immediately after being added.\n    // This can result in invalid style values which can result in NaN values if we don't handle them.\n    // See issue #150 for more context.\n    if (parentElement.current) {\n      const height = parentElement.current.offsetHeight || 0;\n      const width = parentElement.current.offsetWidth || 0;\n      const win = ownerWindow(parentElement.current);\n      const computedStyle = win.getComputedStyle(parentElement.current);\n      const paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;\n      const paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (!disableHeight && state.height !== newHeight || !disableWidth && state.width !== newWidth) {\n        setState({\n          height: newHeight,\n          width: newWidth\n        });\n\n        if (onResize) {\n          onResize({\n            height: newHeight,\n            width: newWidth\n          });\n        }\n      }\n    }\n  });\n  useEnhancedEffect(() => {\n    var _parentElement$curren;\n\n    parentElement.current = rootRef.current.parentElement;\n\n    if (!parentElement) {\n      return undefined;\n    }\n\n    const win = ownerWindow((_parentElement$curren = parentElement.current) != null ? _parentElement$curren : undefined);\n    const detectElementResize = createDetectElementResize(nonce, win);\n    detectElementResize.addResizeListener(parentElement.current, handleResize);\n    handleResize();\n    return () => {\n      detectElementResize.removeResizeListener(parentElement.current, handleResize);\n    };\n  }, [nonce, handleResize]); // Outer div should not force width/height since that may prevent containers from shrinking.\n  // Inner component should overflow and use calculated width/height.\n  // See issue #68 for more information.\n\n  const outerStyle = {\n    overflow: 'visible'\n  };\n  const childParams = {};\n\n  if (!disableHeight) {\n    outerStyle.height = 0;\n    childParams.height = state.height;\n  }\n\n  if (!disableWidth) {\n    outerStyle.width = 0;\n    childParams.width = state.width;\n  }\n\n  const handleRef = useForkRef(rootRef, ref);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    style: _extends({}, outerStyle, style)\n  }, other, {\n    children: state.height === null && state.width === null ? null : children(childParams)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridAutoSizer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Default height to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultHeight: PropTypes.number,\n\n  /**\n   * Default width to use for initial render; useful for SSR.\n   * @default null\n   */\n  defaultWidth: PropTypes.number,\n\n  /**\n   * If `true`, disable dynamic :height property.\n   * @default false\n   */\n  disableHeight: PropTypes.bool,\n\n  /**\n   * If `true`, disable dynamic :width property.\n   * @default false\n   */\n  disableWidth: PropTypes.bool,\n\n  /**\n   * Nonce of the inlined stylesheet for Content Security Policy.\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback to be invoked on-resize.\n   * @param {AutoSizerSize} size The grid's size.\n   */\n  onResize: PropTypes.func\n} : void 0;\nexport { GridAutoSizer };","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n/**\n * @category Sorting\n * @ignore - do not document.\n */\n\nexport const gridSortingStateSelector = state => state.sorting;\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\n\nexport const gridSortedRowEntriesSelector = createSelector(gridSortedRowIdsSelector, gridRowsLookupSelector, (sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id]\n})));\n/**\n * Get the current sorting model.\n * @category Sorting\n */\n\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelector(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Filtering\n */\n\nexport const gridFilterStateSelector = state => state.filter;\n/**\n * Get the current filter model.\n * @category Filtering\n */\n\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\n\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridVisibleRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.visibleRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowEntriesSelector = createSelector(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\n\nexport const gridVisibleSortedRowIdsSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowEntriesSelector = createSelector(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\n\nexport const gridFilteredSortedRowIdsSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n/**\n * @category Filtering\n * @deprecated Use `gridVisibleSortedRowIdsSelector` instead\n * @ignore - do not document.\n * TODO: Add deprecation warning once we have the new selectors without the \"visible\" keyword.\n */\n\nexport const gridVisibleRowsSelector = gridVisibleSortedRowIdsSelector;\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleSortedTopLevelRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridRowTreeSelector, gridRowTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n\n  return visibleSortedRows.filter(row => {\n    var _rowTree$row$id;\n\n    return ((_rowTree$row$id = rowTree[row.id]) == null ? void 0 : _rowTree$row$id.depth) === 0;\n  });\n});\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleRowCountSelector = createSelector(gridVisibleSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\n\nexport const gridVisibleTopLevelRowCountSelector = createSelector(gridVisibleSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n/**\n * @category Filtering\n * @ignore - do not document.\n */\n\nexport const gridFilterActiveItemsSelector = createSelector(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => {\n  var _filterModel$items;\n\n  return (_filterModel$items = filterModel.items) == null ? void 0 : _filterModel$items.filter(item => {\n    var _column$filterOperato, _item$value;\n\n    if (!item.columnField) {\n      return false;\n    }\n\n    const column = columnLookup[item.columnField];\n\n    if (!(column != null && column.filterOperators) || (column == null ? void 0 : (_column$filterOperato = column.filterOperators) == null ? void 0 : _column$filterOperato.length) === 0) {\n      return false;\n    }\n\n    const filterOperator = column.filterOperators.find(operator => operator.value === item.operatorValue);\n\n    if (!filterOperator) {\n      return false;\n    }\n\n    return !filterOperator.InputComponent || item.value != null && ((_item$value = item.value) == null ? void 0 : _item$value.toString()) !== '';\n  });\n});\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelector(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.columnField]) {\n      res[filterItem.columnField] = [filterItem];\n    } else {\n      res[filterItem.columnField].push(filterItem);\n    }\n\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent('viewportInnerSizeChange', handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: headerHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent('resize', size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const footerRef = React.useRef(null);\n  apiRef.current.footerRef = footerRef;\n\n  if (rootProps.hideFooter) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: footerRef,\n    children: /*#__PURE__*/_jsx(rootProps.components.Footer, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.footer))\n  });\n}","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridContextProvider = ({\n  apiRef,\n  props,\n  children\n}) => {\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n      value: apiRef,\n      children: children\n    })\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\n\nconst noop = () => {};\n\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\n\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI: Log level ${logLevel} not recognized.`);\n  }\n\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n\n    return loggerObj;\n  }, {});\n  return logger;\n}\n\nexport const useGridLoggerFactory = (apiRef, props) => {\n  apiRef.current.getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n};","import * as React from 'react';\nexport function useGridApiMethod(apiRef, apiMethods, // TODO: Remove `apiName\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\napiName) {\n  const apiMethodsRef = React.useRef(apiMethods);\n  const [apiMethodsNames] = React.useState(Object.keys(apiMethods));\n  const installMethods = React.useCallback(() => {\n    if (!apiRef.current) {\n      return;\n    }\n\n    apiMethodsNames.forEach(methodName => {\n      if (!apiRef.current.hasOwnProperty(methodName)) {\n        apiRef.current[methodName] = (...args) => apiMethodsRef.current[methodName](...args);\n      }\n    });\n  }, [apiMethodsNames, apiRef]);\n  React.useEffect(() => {\n    apiMethodsRef.current = apiMethods;\n  }, [apiMethods]);\n  React.useEffect(() => {\n    installMethods();\n  }, [installMethods]);\n  installMethods();\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature;\n\n(function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n})(GridSignature || (GridSignature = {}));\n\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {} // Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\n\n\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          var _handlerRef$current;\n\n          (_handlerRef$current = handlerRef.current) == null ? void 0 : _handlerRef$current.call(handlerRef, params, event, details);\n        }\n      };\n\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact, // The callback below will be called once this reference stops being retained\n      () => {\n        var _subscription$current;\n\n        (_subscription$current = subscription.current) == null ? void 0 : _subscription$current.call(subscription);\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            var _handlerRef$current2;\n\n            (_handlerRef$current2 = handlerRef.current) == null ? void 0 : _handlerRef$current2.call(handlerRef, params, event, details);\n          }\n        };\n\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n\n      return () => {\n        var _subscription$current2;\n\n        (_subscription$current2 = subscription.current) == null ? void 0 : _subscription$current2.call(subscription);\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n}; // TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport const unstable_resetCleanupTracking = () => {\n  var _registryContainer$re;\n\n  (_registryContainer$re = registryContainer.registry) == null ? void 0 : _registryContainer$re.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  reset() {}\n\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 10;\n    this.warnOnce = false;\n    this.events = {};\n  }\n\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`, `Use emitter.setMaxListeners() to increase limit.`].join('\\n'));\n      }\n    }\n  }\n\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n\n  removeAllListeners() {\n    this.events = {};\n  }\n\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n\n    if (!collection) {\n      return;\n    }\n\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\n\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\n\nlet globalId = 0;\nexport function useGridApiInitialization(inputApiRef, props) {\n  const apiRef = React.useRef();\n\n  if (!apiRef.current) {\n    apiRef.current = {\n      unstable_eventManager: new EventManager(),\n      unstable_caches: {},\n      state: {},\n      instanceId: globalId\n    };\n    globalId += 1;\n  }\n\n  React.useImperativeHandle(inputApiRef, () => apiRef.current, [apiRef]);\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: apiRef.current\n    } : {};\n    apiRef.current.unstable_eventManager.emit(name, params, event, details);\n  }, [apiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    apiRef.current.unstable_eventManager.on(event, handler, options);\n    const api = apiRef.current;\n    return () => {\n      api.unstable_eventManager.removeListener(event, handler);\n    };\n  }, [apiRef]);\n  const showError = React.useCallback(args => {\n    apiRef.current.publishEvent('componentError', args);\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    subscribeEvent,\n    publishEvent,\n    showError\n  }, 'GridCoreApi');\n  React.useEffect(() => {\n    const api = apiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [apiRef]);\n  return apiRef;\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n\n    return props.localeText[key];\n  }, [props.localeText]);\n  const localeTextApi = {\n    getLocaleText\n  };\n  useGridApiMethod(apiRef, localeTextApi, 'LocaleTextApi');\n};","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.unstable_requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.unstable_requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n            otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPipeProcessor: registerPipeProcessor,\n    unstable_registerPipeApplier: registerPipeApplier,\n    unstable_requestPipeProcessorsApplication: requestPipeProcessorsApplication,\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPipeProcessingApi');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree'\n};\n\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.unstable_setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.unstable_applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n\n    if (strategyName === apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.unstable_getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n\n    const groupCache = strategiesCache.current[processorName];\n\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    var _availableStrategyEnt;\n\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n\n      return strategy.isAvailable();\n    });\n    return (_availableStrategyEnt = availableStrategyEntry == null ? void 0 : availableStrategyEntry[0]) != null ? _availableStrategyEnt : GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    unstable_registerStrategyProcessor: registerStrategyProcessor,\n    unstable_applyStrategyProcessor: applyStrategyProcessor,\n    unstable_getActiveStrategy: getActiveStrategy,\n    unstable_setStrategyAvailability: setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'GridStrategyProcessing');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n      stateId\n    } = controlStateItem,\n          others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n\n    let ignoreSetState = false; // Apply the control state constraints\n\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (newSubState === oldSubState) {\n        return;\n      }\n\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      }); // The state is controlled, the prop should always win\n\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const stateApi = {\n    setState,\n    forceUpdate,\n    unstable_updateControlState: updateControlState,\n    unstable_registerControlState: registerControlState\n  };\n  useGridApiMethod(apiRef, stateApi, 'GridStateApi');\n};","import { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridErrorHandler } from './useGridErrorHandler';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\n\nexport const useGridInitialization = (inputApiRef, props) => {\n  const apiRef = useGridApiInitialization(inputApiRef, props);\n  useGridLoggerFactory(apiRef, props);\n  useGridErrorHandler(apiRef, props);\n  useGridStateInitialization(apiRef, props);\n  useGridPipeProcessing(apiRef);\n  useGridStrategyProcessing(apiRef);\n  useGridLocaleText(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../utils/useGridApiEventHandler';\nexport function useGridErrorHandler(apiRef, props) {\n  const handleError = React.useCallback(args => {\n    // We are handling error here, to set up the handler as early as possible and be able to catch error thrown at init time.\n    apiRef.current.setState(state => _extends({}, state, {\n      error: args\n    }));\n  }, [apiRef]);\n  React.useEffect(() => {\n    handleError(props.error);\n  }, [handleError, props.error]);\n  useGridApiEventHandler(apiRef, 'componentError', handleError);\n}","import * as React from 'react';\nexport const useGridInitializeState = (initializer, apiRef, props) => {\n  const isInitialized = React.useRef(false);\n\n  if (!isInitialized.current) {\n    apiRef.current.state = initializer(apiRef.current.state, props, apiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nimport { useGridApiMethod, useGridNativeEventListener } from '../../utils';\n\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\n\n\nexport const useGridClipboard = apiRef => {\n  const copySelectedRowsToClipboard = React.useCallback((includeHeaders = false) => {\n    if (apiRef.current.getSelectedRows().size === 0) {\n      return;\n    }\n\n    const data = apiRef.current.getDataAsCsv({\n      includeHeaders,\n      delimiter: '\\t'\n    });\n\n    if (navigator.clipboard) {\n      navigator.clipboard.writeText(data).catch(() => {\n        writeToClipboardPolyfill(data);\n      });\n    } else {\n      writeToClipboardPolyfill(data);\n    }\n  }, [apiRef]);\n  const handleKeydown = React.useCallback(event => {\n    var _window$getSelection;\n\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey; // event.key === 'c' is not enough as alt+c can lead to ©, ç, or other characters on macOS.\n    // event.code === 'KeyC' is not enough as event.code assume a QWERTY keyboard layout which would\n    // be wrong with a Dvorak keyboard (as if pressing J).\n\n    if (String.fromCharCode(event.keyCode) !== 'C' || !isModifierKeyPressed) {\n      return;\n    } // Do nothing if there's a native selection\n\n\n    if (((_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.toString()) !== '') {\n      return;\n    }\n\n    apiRef.current.unstable_copySelectedRowsToClipboard(event.altKey);\n  }, [apiRef]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleKeydown);\n  const clipboardApi = {\n    unstable_copySelectedRowsToClipboard: copySelectedRowsToClipboard\n  };\n  useGridApiMethod(apiRef, clipboardApi, 'GridClipboardApi');\n};","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(args => {\n    return handlerRef.current && handlerRef.current(args);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n\n    if (targetElement && wrapHandler && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\n\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n  /**\n   * API METHODS\n   */\n\n  const showColumnMenu = React.useCallback(field => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (state.columnMenu.open && state.columnMenu.field === field) {\n        return state;\n      }\n\n      logger.debug('Opening Column Menu');\n      return _extends({}, state, {\n        columnMenu: {\n          open: true,\n          field\n        }\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const shouldUpdate = apiRef.current.setState(state => {\n      if (!state.columnMenu.open && state.columnMenu.field === undefined) {\n        return state;\n      }\n\n      logger.debug('Hiding Column Menu');\n      return _extends({}, state, {\n        columnMenu: _extends({}, state.columnMenu, {\n          open: false,\n          field: undefined\n        })\n      });\n    });\n\n    if (shouldUpdate) {\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'GridColumnMenuApi');\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderFocus = React.useCallback((params, event) => {\n    // Check if the column menu button received focus\n    if (!event.target.classList.contains(gridClasses.menuIconButton)) {\n      return;\n    } // Check if there's an element which lost focus\n\n\n    if (!event.relatedTarget) {\n      return;\n    } // `true` if the focus was on the column menu itself, not on any item\n\n\n    const columnMenuLostFocus = event.relatedTarget.classList.contains(gridClasses.menuList); // `true` if the focus was on an item from the column menu\n\n    const columnMenuItemLostFocus = event.relatedTarget.getAttribute('role') === 'menuitem';\n\n    if (columnMenuLostFocus || columnMenuItemLostFocus) {\n      apiRef.current.setColumnHeaderFocus(params.field);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.unstable_registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');","export function getValueFromOption(option) {\n  if (typeof option === 'object' && option !== null) {\n    return option.value;\n  }\n\n  return option;\n}\nexport function getValueFromValueOptions(value, valueOptions) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n\n  const result = valueOptions.find(option => {\n    const optionValue = getValueFromOption(option);\n    return String(optionValue) === String(value);\n  });\n  return getValueFromOption(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst warnedOnce = {};\n\nfunction warnDeprecatedTypeSupport(type) {\n  console.warn([`MUI: Using GridFilterInputValue with a \"${type}\" column is deprecated.`, 'Use GridFilterInputSingleSelect instead.'].join('\\n'));\n  warnedOnce[type] = true;\n}\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nexport const SUBMIT_FILTER_STROKE_TIME = 500;\n\nfunction GridFilterInputValue(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production' && ['date', 'datetime-local', 'singleSelect'].includes(type) && !warnedOnce[type]) {\n    warnDeprecatedTypeSupport(type);\n  }\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const singleSelectProps = type === 'singleSelect' ? {\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  } : {};\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    if (type === 'singleSelect') {\n      const column = apiRef.current.getColumn(item.columnField);\n      const columnValueOptions = typeof column.valueOptions === 'function' ? column.valueOptions({\n        field: column.field\n      }) : column.valueOptions;\n      value = getValueFromValueOptions(value, columnValueOptions);\n    }\n\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true); // TODO singleSelect doesn't debounce\n\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_STROKE_TIME);\n  }, [apiRef, applyValue, item, type]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  const InputProps = applying ? {\n    endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n  } : others.InputProps;\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputProps: InputProps,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, singleSelectProps, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridLoadIcon } from '../icons/index';\nimport { SUBMIT_FILTER_STROKE_TIME } from '../panel/filterPanel/GridFilterInputValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\n\nfunction GridEditInputCell(props) {\n  var _rootProps$experiment;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    id,\n    value,\n    field,\n    colDef,\n    hasFocus,\n    debounceMs = (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi ? 200 : SUBMIT_FILTER_STROKE_TIME,\n    isProcessingProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue,\n      debounceMs\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    inputRef: inputRef,\n    className: classes.root,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState != null ? valueState : '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(GridLoadIcon, {}) : undefined\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    sortModelDisableMultiColumnsSortingWarning();\n    return [model[0]];\n  }\n\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\n\nconst isDesc = direction => direction === 'desc';\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\n\n\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n\n  if (!column) {\n    return null;\n  }\n\n  const comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridSortCellParams} row1Params The params of the 1st row for each sort item.\n * @param {GridSortCellParams} row2Params The params of the 2nd row for each sort item.\n */\n\n\nconst compareRows = (parsedSortItems, row1Params, row2Params) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n\n    const sortCellParams1 = row1Params[index];\n    const sortCellParams2 = row2Params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\n\n\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n\n  if (comparatorList.length === 0) {\n    return null;\n  }\n\n  return rowList => rowList.map(value => ({\n    value,\n    params: comparatorList.map(el => el.getSortCellParams(value.id))\n  })).sort((a, b) => compareRows(comparatorList, a.params, b.params)).map(row => row.value.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n\n  return sortingOrder[currentIdx + 1];\n};\n\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n\n  return null;\n};\n\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n\n  if (nillResult !== null) {\n    return nillResult;\n  }\n\n  if (value1 > value2) {\n    return 1;\n  }\n\n  if (value1 < value2) {\n    return -1;\n  }\n\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled: disabledProp,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    isOptionEqualToValue = (option, value) => option === value,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    readOnly = false,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open && !readOnly;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0 && !readOnly;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/WAI/ARIA/apg/example-index/combobox/js/select-only.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        if (inputRef.current && inputRef.current.nodeName === 'TEXTAREA') {\n          console.warn([`A textarea element was provided to ${componentName} where input was expected.`, `This is not a supported scenario but it may work under certain conditions.`, `A textarea keyboard navigation may conflict with Autocomplete controls (e.g. enter and arrow keys).`, `Make sure to test keyboard navigation and add custom event handlers if necessary.`].join('\\n'));\n        } else {\n          console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n        }\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (multiple) {\n      if (value.length === newValue.length && value.every((val, i) => val === newValue[i])) {\n        return;\n      }\n    } else if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    if (inputValue === '') {\n      handleClose(event, 'toggleInput');\n    }\n\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && !readOnly && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : undefined,\n      'aria-expanded': listboxAvailable,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false',\n      role: 'combobox'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => _extends({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1\n    }, !readOnly && {\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\n\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: (theme.vars || theme).palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: (theme.vars || theme).palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: (theme.vars || theme).palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n\n  const {\n    className,\n    color = 'default',\n    component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListSubheader;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea, _componentsProps$popu, _componentsProps$popp, _componentsProps$pape;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, componentsProps.popupIndicator, {\n              className: clsx(classes.popupIndicator, (_componentsProps$popu = componentsProps.popupIndicator) == null ? void 0 : _componentsProps$popu.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true\n    }, componentsProps.popper, {\n      className: clsx(classes.popper, (_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, componentsProps.paper, {\n        className: clsx(classes.paper, (_componentsProps$pape = componentsProps.paper) == null ? void 0 : _componentsProps$pape.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridFilterInputMultipleValue(props) {\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    var _item$value;\n\n    const itemValue = (_item$value = item.value) != null ? _item$value : [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    limitTags: 1,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: type || 'text'\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return ({\n      value\n    }) => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value === '' || value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value !== '' && value != null;\n    };\n  }\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return ({\n      value\n    }) => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hide: false,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { wrapWithWarningOnCall } from '../utils/warning';\n\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n\n  return Number(value);\n};\n\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  label: '=',\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '!=',\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>',\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '>=',\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<',\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  label: '<=',\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      if (value == null) {\n        return false;\n      }\n\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  }\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    return ({\n      value\n    }) => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];\n/**\n * @deprecated Use `getGridNumericOperators` instead.\n */\n\nexport const getGridNumericColumnOperators = wrapWithWarningOnCall(getGridNumericOperators, ['MUI: The method getGridNumericColumnOperators is deprecated and will be removed in the next major version.', 'Use getGridNumericOperators instead.']);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: ({\n    value\n  }) => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { GridLoadIcon } from '../../icons';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const SUBMIT_FILTER_DATE_STROKE_TIME = 500;\n\nfunction GridFilterInputDate(props) {\n  var _item$value, _rootProps$components;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef,\n    InputProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const filterTimeout = React.useRef();\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    clearTimeout(filterTimeout.current);\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.current = setTimeout(() => {\n      applyValue(_extends({}, item, {\n        value\n      }));\n      setIsApplying(false);\n    }, SUBMIT_FILTER_DATE_STROKE_TIME);\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(filterTimeout.current);\n    };\n  }, []);\n  React.useEffect(() => {\n    var _item$value2;\n\n    const itemValue = (_item$value2 = item.value) != null ? _item$value2 : '';\n    setFilterValueState(String(itemValue));\n  }, [item.value]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying ? {\n      endAdornment: /*#__PURE__*/_jsx(GridLoadIcon, {})\n    } : {}, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31'\n      }, InputProps == null ? void 0 : InputProps.inputProps)\n    })\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nconst dateRegex = /(\\d+)-(\\d+)-(\\d+)/;\nconst dateTimeRegex = /(\\d+)-(\\d+)-(\\d+)T(\\d+):(\\d+)/;\n\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n\n  const [year, month, day, hour, minute] = filterItem.value.match(showTime ? dateTimeRegex : dateRegex).slice(1).map(Number);\n  const time = new Date(year, month - 1, day, hour || 0, minute || 0).getTime();\n  return ({\n    value\n  }) => {\n    if (!value) {\n      return false;\n    }\n\n    const valueAsDate = value instanceof Date ? value : new Date(value.toString());\n\n    if (keepHours) {\n      return compareFn(valueAsDate.getTime(), time);\n    } // Make a copy of the date to not reset the hours in the original object\n\n\n    const dateCopy = value instanceof Date ? new Date(valueAsDate) : valueAsDate;\n    const timeToCompare = dateCopy.setHours(showTime ? valueAsDate.getHours() : 0, showTime ? valueAsDate.getMinutes() : 0, 0, 0);\n    return compareFn(timeToCompare, time);\n  };\n}\n\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value == null;\n    };\n  }\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return ({\n      value\n    }) => {\n      return value != null;\n    };\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"getValue\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditDateCell(props) {\n  const {\n    id,\n    value: valueProp,\n    field,\n    colDef,\n    hasFocus,\n    inputProps,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp != null ? valueProp : '').toString());\n    }\n\n    let formattedDate;\n\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    let newParsedDate;\n\n    if (newFormattedDate === '') {\n      newParsedDate = null;\n    } else {\n      const [date, time] = newFormattedDate.split('T');\n      const [year, month, day] = date.split('-');\n      newParsedDate = new Date();\n      newParsedDate.setFullYear(year, Number(month) - 1, day);\n      newParsedDate.setHours(0, 0, 0, 0);\n\n      if (time) {\n        const [hours, minutes] = time.split(':');\n        newParsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n      }\n    }\n\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange]);\n  React.useEffect(() => {\n    setValueState(state => {\n      var _valueTransformed$par, _state$parsed;\n\n      if (valueTransformed.parsed !== state.parsed && ((_valueTransformed$par = valueTransformed.parsed) == null ? void 0 : _valueTransformed$par.getTime()) !== ((_state$parsed = state.parsed) == null ? void 0 : _state$parsed.getTime())) {\n        return valueTransformed;\n      }\n\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(InputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nexport function gridDateFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleDateString();\n  }\n\n  return value != null ? value : '';\n}\nexport function gridDateTimeFormatter({\n  value\n}) {\n  if (value instanceof Date) {\n    return value.toLocaleString();\n  }\n\n  return value != null ? value : '';\n}\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"getValue\"];\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const GridBooleanCell = /*#__PURE__*/React.memo(props => {\n  const {\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.components.BooleanCellTrueIcon : rootProps.components.BooleanCellFalseIcon, [rootProps.components.BooleanCellFalseIcon, rootProps.components.BooleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n});\nexport const renderBooleanCell = params => {\n  if (params.rowNode.isAutoGenerated) {\n    return '';\n  }\n\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    field,\n    className,\n    hasFocus,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridFilterInputBoolean(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isSelectNative ? 'option' : MenuItem;\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  return /*#__PURE__*/_jsxs(rootProps.components.BaseTextField, _extends({\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    select: true,\n    variant: \"standard\",\n    SelectProps: _extends({\n      native: isSelectNative,\n      displayEmpty: true\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: [/*#__PURE__*/_jsx(OptionComponent, {\n      value: \"\",\n      children: apiRef.current.getLocaleText('filterValueAny')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"true\",\n      children: apiRef.current.getLocaleText('filterValueTrue')\n    }), /*#__PURE__*/_jsx(OptionComponent, {\n      value: \"false\",\n      children: apiRef.current.getLocaleText('filterValueFalse')\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\n\nfunction gridBooleanFormatter({\n  value,\n  api\n}) {\n  return value ? api.getLocaleText('booleanCellTrueLabel') : api.getLocaleText('booleanCellFalseLabel');\n}\n\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined\n});","// TODO v6: rename to GridEditingState\nvar GridEditModes;\n\n(function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n})(GridEditModes || (GridEditModes = {}));\n\nvar GridCellModes;\n\n(function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n})(GridCellModes || (GridCellModes = {}));\n\nvar GridRowModes;\n\n(function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n})(GridRowModes || (GridRowModes = {}));\n\nexport { GridEditModes, GridCellModes, GridRowModes };","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n\n    const valueAsBoolean = filterItem.value === 'true';\n    return ({\n      value\n    }) => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace'; // Non printable keys have a name, e.g. \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n\nexport const isPrintableKey = key => key.length === 1;\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = key => isEnterKey(key) || isDeleteKeys(key) || isPrintableKey(key);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = (option, OptionComponent) => {\n  const isOptionTypeObject = typeof option === 'object';\n  const key = isOptionTypeObject ? option.value : option;\n  const value = isOptionTypeObject ? option.value : option;\n  const content = isOptionTypeObject ? option.label : option;\n  return /*#__PURE__*/_jsx(OptionComponent, {\n    value: value,\n    children: content\n  }, key);\n};\n\nfunction GridEditSingleSelectCell(props) {\n  var _rootProps$components, _baseSelectProps$nati, _rootProps$components2;\n\n  const {\n    id,\n    value,\n    api,\n    field,\n    row,\n    colDef,\n    hasFocus,\n    error,\n    onValueChange\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const rootProps = useGridRootProps();\n  const [open, setOpen] = React.useState(rootProps.editMode === 'cell');\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : false;\n  let valueOptionsFormatted;\n\n  if (typeof colDef.valueOptions === 'function') {\n    valueOptionsFormatted = colDef.valueOptions({\n      id,\n      row,\n      field\n    });\n  } else {\n    valueOptionsFormatted = colDef.valueOptions;\n  }\n\n  if (colDef.valueFormatter) {\n    valueOptionsFormatted = valueOptionsFormatted.map(option => {\n      if (typeof option === 'object') {\n        return option;\n      }\n\n      const params = {\n        field,\n        api,\n        value: option\n      };\n      return {\n        value: option,\n        label: String(colDef.valueFormatter(params))\n      };\n    });\n  }\n\n  const handleChange = async event => {\n    var _rootProps$experiment;\n\n    setOpen(false);\n    const target = event.target; // NativeSelect casts the value to a string.\n\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptionsFormatted);\n\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n\n    if ((_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.newEditingApi) {\n      return;\n    } // We use isValid === false because the default return is undefined which evaluates to true with !isValid\n\n\n    if (rootProps.editMode === GridEditModes.Row || isValid === false) {\n      return;\n    }\n\n    const canCommit = await Promise.resolve(apiRef.current.commitCellChange({\n      id,\n      field\n    }, event));\n\n    if (canCommit) {\n      apiRef.current.setCellMode(id, field, 'view');\n\n      if (event.key) {\n        // TODO v6: remove once we stop ignoring events fired from portals\n        const params = apiRef.current.getCellParams(id, field);\n        apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      }\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      var _rootProps$experiment2;\n\n      if ((_rootProps$experiment2 = rootProps.experimentalFeatures) != null && _rootProps$experiment2.newEditingApi) {\n        apiRef.current.stopCellEditMode({\n          id,\n          field,\n          ignoreModifications: true\n        });\n      } else {\n        apiRef.current.setCellMode(id, field, 'view');\n      }\n    }\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: value,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: {\n      onClose: handleClose\n    },\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect, {\n    children: valueOptionsFormatted.map(valueOptions => renderSingleSelectOptions(valueOptions, isSelectNative ? 'option' : MenuItem))\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst renderSingleSelectOptions = ({\n  valueOptions,\n  valueFormatter,\n  field\n}, api, OptionComponent) => {\n  const iterableColumnValues = typeof valueOptions === 'function' ? ['', ...valueOptions({\n    field\n  })] : ['', ...(valueOptions || [])];\n  return iterableColumnValues.map(option => {\n    const isOptionTypeObject = typeof option === 'object';\n    const key = isOptionTypeObject ? option.value : option;\n    const value = isOptionTypeObject ? option.value : option;\n    const formattedValue = valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api\n    }) : option;\n    const content = isOptionTypeObject ? option.label : formattedValue;\n    return /*#__PURE__*/_jsx(OptionComponent, {\n      value: value,\n      children: content\n    }, key);\n  });\n};\n\nfunction GridFilterInputSingleSelect(props) {\n  var _item$value, _rootProps$components, _baseSelectProps$nati, _rootProps$components2, _rootProps$components3;\n\n  const {\n    item,\n    applyValue,\n    type,\n    apiRef,\n    focusElementRef\n  } = props,\n        others = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [filterValueState, setFilterValueState] = React.useState((_item$value = item.value) != null ? _item$value : '');\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const baseSelectProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseSelect) || {};\n  const isSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentValueOptions = React.useMemo(() => {\n    if (currentColumn === null) {\n      return undefined;\n    }\n\n    return typeof currentColumn.valueOptions === 'function' ? currentColumn.valueOptions({\n      field: currentColumn.field\n    }) : currentColumn.valueOptions;\n  }, [currentColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value; // NativeSelect casts the value to a string.\n\n    value = getValueFromValueOptions(value, currentValueOptions);\n    setFilterValueState(String(value));\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item, currentValueOptions]);\n  React.useEffect(() => {\n    var _itemValue;\n\n    let itemValue;\n\n    if (currentValueOptions !== undefined) {\n      // sanitize if valueOptions are provided\n      itemValue = getValueFromValueOptions(item.value, currentValueOptions);\n\n      if (itemValue !== item.value) {\n        applyValue(_extends({}, item, {\n          value: itemValue\n        }));\n        return;\n      }\n    } else {\n      itemValue = item.value;\n    }\n\n    itemValue = (_itemValue = itemValue) != null ? _itemValue : '';\n    setFilterValueState(String(itemValue));\n  }, [item, currentValueOptions, applyValue]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    select: true,\n    SelectProps: _extends({\n      native: isSelectNative\n    }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect)\n  }, others, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseTextField, {\n    children: renderSingleSelectOptions(apiRef.current.getColumn(item.columnField), apiRef.current, isSelectNative ? 'option' : MenuItem)\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport Chip from '@mui/material/Chip';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { getValueFromOption } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst isOptionEqualToValue = (option, value) => getValueFromOption(option) === getValueFromOption(value);\n\nconst filter = createFilterOptions();\n\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n    item,\n    applyValue,\n    apiRef,\n    focusElementRef,\n    color,\n    error,\n    helperText,\n    size,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const resolvedColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const resolvedValueOptions = React.useMemo(() => {\n    if (!(resolvedColumn != null && resolvedColumn.valueOptions)) {\n      return [];\n    }\n\n    if (typeof resolvedColumn.valueOptions === 'function') {\n      return resolvedColumn.valueOptions({\n        field: resolvedColumn.field\n      });\n    }\n\n    return resolvedColumn.valueOptions;\n  }, [resolvedColumn]);\n  const resolvedFormattedValueOptions = React.useMemo(() => {\n    return resolvedValueOptions == null ? void 0 : resolvedValueOptions.map(getValueFromOption);\n  }, [resolvedValueOptions]);\n  const {\n    valueFormatter,\n    field\n  } = apiRef.current.getColumn(item.columnField);\n\n  const filterValueOptionFormatter = option => {\n    if (typeof option === 'object') {\n      return option.label;\n    }\n\n    return valueFormatter && option !== '' ? valueFormatter({\n      value: option,\n      field,\n      api: apiRef.current\n    }) : option;\n  }; // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n\n\n  const filterValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n\n    if (resolvedValueOptions !== undefined) {\n      const itemValueIndexes = item.value.map(element => {\n        // get the index matching between values and valueOptions\n        const formattedElement = getValueFromOption(element);\n        const index = (resolvedFormattedValueOptions == null ? void 0 : resolvedFormattedValueOptions.findIndex(formatedOption => formatedOption === formattedElement)) || 0;\n        return index;\n      });\n      return itemValueIndexes.filter(index => index >= 0).map(index => resolvedValueOptions[index]);\n    }\n\n    return item.value;\n  }, [item.value, resolvedValueOptions, resolvedFormattedValueOptions]);\n  React.useEffect(() => {\n    if (!Array.isArray(item.value) || filterValues.length !== item.value.length) {\n      // update the state if the filter value has been cleaned by the component\n      applyValue(_extends({}, item, {\n        value: filterValues.map(getValueFromOption)\n      }));\n    }\n  }, [item, filterValues, applyValue]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: [...value.map(getValueFromOption)]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    limitTags: 1,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filterValues,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: filterValueOptionFormatter(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => {\n      var _rootProps$components;\n\n      return /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({}, params, {\n        label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n        placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n        InputLabelProps: _extends({}, params.InputLabelProps, {\n          shrink: true\n        }),\n        inputRef: focusElementRef,\n        type: \"singleSelect\"\n      }, TextFieldProps, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField));\n    }\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\n\nconst parseObjectValue = value => {\n  if (value == null || typeof value !== 'object') {\n    return value;\n  }\n\n  return value.value;\n};\n\nexport const getGridSingleSelectQuickFilterFn = (value, column, apiRef) => {\n  if (!value) {\n    return null;\n  }\n\n  const {\n    valueOptions,\n    valueFormatter,\n    field\n  } = column;\n  const potentialValues = [parseObjectValue(value).toString()];\n  const iterableColumnValues = typeof valueOptions === 'function' ? valueOptions({\n    field\n  }) : valueOptions || [];\n\n  if (iterableColumnValues) {\n    iterableColumnValues.forEach(option => {\n      // for each valueOption, check if the formatted value\n      let optionValue;\n      let optionLabel;\n\n      if (typeof option === 'object') {\n        optionValue = option.value;\n        optionLabel = option.label;\n      } else {\n        optionValue = option;\n\n        if (valueFormatter) {\n          optionLabel = valueFormatter({\n            value: option,\n            field,\n            api: apiRef.current\n          });\n        } else {\n          optionLabel = option;\n        }\n      }\n\n      if (optionLabel.slice(0, value.length).toLowerCase() === value.toLowerCase()) {\n        if (!potentialValues.includes(optionValue)) {\n          potentialValues.push(optionValue.toString());\n        }\n      }\n    });\n  }\n\n  return ({\n    value: columnValue\n  }) => {\n    return columnValue != null ? potentialValues.includes(parseObjectValue(columnValue).toString()) : false;\n  };\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n\n    return ({\n      value\n    }) => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return ({\n      value\n    }) => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators, getGridSingleSelectQuickFilterFn } from './gridSingleSelectOperators';\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  getApplyQuickFilterFn: getGridSingleSelectQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClickAway\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { HTMLElementType } from '@mui/utils';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (props, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\n\nconst GridMenu = props => {\n  var _rootProps$components;\n\n  const {\n    open,\n    target,\n    onClickAway,\n    children,\n    position,\n    className,\n    onExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const prevTarget = React.useRef(target);\n  const prevOpen = React.useRef(open);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useEffect(() => {\n    if (prevOpen.current && prevTarget.current) {\n      prevTarget.current.focus();\n    } // Emit menuOpen or menuClose events\n\n\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n    prevOpen.current = open;\n    prevTarget.current = target;\n  }, [apiRef, open, target]);\n\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.components.BasePopper,\n    className: clsx(className, classes.root),\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: onClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps == null ? void 0 : TransitionProps.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  onClickAway: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colDef\", \"id\", \"api\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"getValue\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuList from '@mui/material/MenuList';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst hasActions = colDef => typeof colDef.getActions === 'function';\n\nconst GridActionsCell = props => {\n  const {\n    colDef,\n    id,\n    hasFocus,\n    tabIndex,\n    position = 'bottom-end',\n    focusElementRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref == null ? void 0 : ref.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus();\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        setFocusedButtonIndex(0);\n      }\n    }\n\n  }), []);\n\n  if (!hasActions(colDef)) {\n    throw new Error('MUI: Missing the `getActions` property in the `GridColDef`.');\n  }\n\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n\n  const hideMenu = () => {\n    setOpen(false);\n  };\n\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n\n    let newIndex = focusedButtonIndex;\n\n    if (event.key === 'ArrowRight') {\n      newIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      newIndex -= 1;\n    }\n\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n\n      event.stopPropagation(); // Don't stop propagation for other keys, e.g. ArrowUp\n\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n\n    if (['Tab', 'Enter', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(IconButton, {\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1,\n      children: /*#__PURE__*/_jsx(rootProps.components.MoreActionsIcon, {\n        fontSize: \"small\"\n      })\n    }), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      onClickAway: hideMenu,\n      onClick: hideMenu,\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index\n        }))\n      })\n    })]\n  }));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  width: 100,\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = '__default__';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    [DEFAULT_GRID_COL_TYPE_KEY]: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nexport const computeColumnTypes = (customColumnTypes = {}) => {\n  const mergedColumnTypes = _extends({}, getGridDefaultColumnTypes());\n\n  Object.entries(customColumnTypes).forEach(([colType, colTypeDef]) => {\n    if (mergedColumnTypes[colType]) {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colType], colTypeDef);\n    } else {\n      mergedColumnTypes[colType] = _extends({}, mergedColumnTypes[colTypeDef.extendType || DEFAULT_GRID_COL_TYPE_KEY], colTypeDef);\n    }\n  });\n  return mergedColumnTypes;\n};\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\n\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  }; // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === flexColumns.length) {\n      return;\n    }\n\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0; // 5b: Calculate the remaining free space\n\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        // eslint-disable-next-line no-continue\n        continue;\n      } // 5c: Distribute remaining free space proportional to the flex factors\n\n\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex; // 5d: Fix min/max violations\n\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    } // 5e: Freeze over-flexed items\n\n\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    } // 5f: Return to the start of this loop\n\n\n    loopOverFlexItems();\n  }\n\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\n\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = []; // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n\n  rawState.all.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width, newColumn.minWidth, newColumn.maxWidth);\n      }\n\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0); // Allocate the remaining space to the flex columns\n\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\nlet columnTypeWarnedOnce = false;\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\n\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i]; // Ignores the fields in the initialState that matches no field on the current column state\n\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.all : [...cleanOrderedFields, ...columnsState.all.filter(field => !orderedFieldsLookup[field])];\n\n  const newColumnLookup = _extends({}, columnsState.lookup);\n\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n\n  const newColumnsState = {\n    all: newOrderedFields,\n    lookup: newColumnLookup\n  };\n  return newColumnsState;\n};\n/**\n * @deprecated Should have been internal only, you can inline the logic.\n */\n\nexport const getGridColDef = (columnTypes, type) => {\n  if (!type) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!columnTypeWarnedOnce && !columnTypes[type]) {\n      console.warn([`MUI: The column type \"${type}\" you are using is not supported.`, `Column type \"string\" is being used instead.`].join('\\n'));\n      columnTypeWarnedOnce = true;\n    }\n  }\n\n  if (!columnTypes[type]) {\n    return columnTypes[DEFAULT_GRID_COL_TYPE_KEY];\n  }\n\n  return columnTypes[type];\n};\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnTypes,\n  currentColumnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  shouldRegenColumnVisibilityModelFromColumns,\n  keepOnlyColumnsToUpsert = false\n}) => {\n  var _apiRef$current$getRo, _apiRef$current$getRo2, _apiRef$current, _apiRef$current$getRo3;\n\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsStateWithoutColumnVisibilityModel;\n\n  if (isInsideStateInitializer) {\n    columnsStateWithoutColumnVisibilityModel = {\n      all: [],\n      lookup: {}\n    };\n  } else {\n    const currentState = gridColumnsSelector(apiRef.current.state);\n    columnsStateWithoutColumnVisibilityModel = {\n      all: keepOnlyColumnsToUpsert ? [] : [...currentState.all],\n      lookup: _extends({}, currentState.lookup) // Will be cleaned later if keepOnlyColumnsToUpsert=true\n\n    };\n  }\n\n  let columnsToKeep = {};\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsStateWithoutColumnVisibilityModel.lookup[field];\n\n    if (existingState == null) {\n      // New Column\n      existingState = _extends({}, getGridColDef(columnTypes, newColumn.type), {\n        // TODO v6: Inline `getGridColDef`\n        field,\n        hasBeenResized: false\n      });\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsStateWithoutColumnVisibilityModel.all.push(field);\n    }\n\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsStateWithoutColumnVisibilityModel.lookup[field] = _extends({}, existingState, {\n      hide: newColumn.hide == null ? false : newColumn.hide\n    }, newColumn, {\n      hasBeenResized\n    });\n  });\n\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsStateWithoutColumnVisibilityModel.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsStateWithoutColumnVisibilityModel.lookup[field];\n      }\n    });\n  }\n\n  const columnsLookupBeforePreProcessing = _extends({}, columnsStateWithoutColumnVisibilityModel.lookup);\n\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsStateWithoutColumnVisibilityModel); // TODO v6: remove the sync between the columns `hide` option and the model.\n\n  let columnVisibilityModel = {};\n\n  if (shouldRegenColumnVisibilityModelFromColumns) {\n    let hasModelChanged = false;\n\n    const newColumnVisibilityModel = _extends({}, currentColumnVisibilityModel);\n\n    if (isInsideStateInitializer) {\n      columnsStateWithPreProcessing.all.forEach(field => {\n        newColumnVisibilityModel[field] = !columnsStateWithoutColumnVisibilityModel.lookup[field].hide;\n      });\n    } else if (keepOnlyColumnsToUpsert) {\n      // At this point, `keepOnlyColumnsToUpsert` has a new meaning: keep the columns\n      // passed via `columnToUpsert` + columns added by the pre-processors. We do the following\n      // cleanup because a given column may have been removed from the `columns` prop but it still\n      // exists in the state.\n      Object.keys(newColumnVisibilityModel).forEach(field => {\n        if (!columnsStateWithPreProcessing.lookup[field]) {\n          delete newColumnVisibilityModel[field];\n          hasModelChanged = true;\n        }\n      });\n    }\n\n    columnsStateWithPreProcessing.all.forEach(field => {\n      // If neither the `columnsToUpsert` nor the pre-processors updated the column,\n      // Then we don't want to update the visibility status of the column in the model.\n      if (!columnsToUpsertLookup[field] && columnsLookupBeforePreProcessing[field] === columnsStateWithPreProcessing.lookup[field]) {\n        return;\n      } // We always assume that a column not in the model is visible by default. However, there's an\n      // edge case where the column is not in the model but it also doesn't exist in the `columns`\n      // prop, meaning that the column is being added. In that case, we assume that the column was\n      // not visible before for it be added to the model.\n\n\n      let isVisibleBefore = currentColumnVisibilityModel[field];\n\n      if (isVisibleBefore === undefined) {\n        if (isInsideStateInitializer) {\n          isVisibleBefore = true;\n        } else {\n          const currentState = gridColumnsSelector(apiRef.current.state);\n          isVisibleBefore = !!currentState.lookup[field];\n        }\n      }\n\n      const isVisibleAfter = !columnsStateWithPreProcessing.lookup[field].hide;\n\n      if (isVisibleAfter !== isVisibleBefore) {\n        hasModelChanged = true;\n        newColumnVisibilityModel[field] = isVisibleAfter;\n      }\n    });\n\n    if (hasModelChanged || isInsideStateInitializer) {\n      columnVisibilityModel = newColumnVisibilityModel;\n    } else {\n      columnVisibilityModel = currentColumnVisibilityModel;\n    }\n  } else {\n    columnVisibilityModel = currentColumnVisibilityModel;\n  }\n\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n\n  const columnsState = _extends({}, columnsStateWithPortableColumns, {\n    columnVisibilityModel\n  });\n\n  return hydrateColumnsWidth(columnsState, (_apiRef$current$getRo = (_apiRef$current$getRo2 = (_apiRef$current = apiRef.current).getRootDimensions) == null ? void 0 : (_apiRef$current$getRo3 = _apiRef$current$getRo2.call(_apiRef$current)) == null ? void 0 : _apiRef$current$getRo3.viewportInnerSize.width) != null ? _apiRef$current$getRo : 0);\n};\nexport const mergeColumnsState = columnsState => state => _extends({}, state, {\n  columns: columnsState\n});\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n\n  return firstNonSpannedColumnToRender;\n}\nexport function getFirstColumnIndexToRender({\n  firstColumnIndex,\n  minColumnIndex,\n  columnBuffer,\n  firstRowToRender,\n  lastRowToRender,\n  apiRef,\n  visibleRows\n}) {\n  const initialFirstColumnToRender = Math.max(firstColumnIndex - columnBuffer, minColumnIndex);\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows\n  });\n  return firstColumnToRender;\n}","var GridPreferencePanelsValue;\n\n(function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n})(GridPreferencePanelsValue || (GridPreferencePanelsValue = {}));\n\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsMetaSelector, gridColumnsSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { hydrateColumnsWidth, computeColumnTypes, createColumnsState, mergeColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  var _props$initialState, _props$initialState$c, _props$initialState2, _ref, _props$columnVisibili, _props$initialState3, _props$initialState3$;\n\n  const isUsingColumnVisibilityModel = !!props.columnVisibilityModel || !!((_props$initialState = props.initialState) != null && (_props$initialState$c = _props$initialState.columns) != null && _props$initialState$c.columnVisibilityModel);\n  apiRef.current.unstable_caches.columns = {\n    isUsingColumnVisibilityModel\n  };\n  const columnsTypes = computeColumnTypes(props.columnTypes);\n  const columnsState = createColumnsState({\n    apiRef,\n    columnTypes: columnsTypes,\n    columnsToUpsert: props.columns,\n    initialState: (_props$initialState2 = props.initialState) == null ? void 0 : _props$initialState2.columns,\n    shouldRegenColumnVisibilityModelFromColumns: !isUsingColumnVisibilityModel,\n    currentColumnVisibilityModel: (_ref = (_props$columnVisibili = props.columnVisibilityModel) != null ? _props$columnVisibili : (_props$initialState3 = props.initialState) == null ? void 0 : (_props$initialState3$ = _props$initialState3.columns) == null ? void 0 : _props$initialState3$.columnVisibilityModel) != null ? _ref : {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState\n  });\n};\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\n\nexport function useGridColumns(apiRef, props) {\n  var _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const columnTypes = React.useMemo(() => computeColumnTypes(props.columnTypes), [props.columnTypes]);\n  const previousColumnsProp = React.useRef(props.columns);\n  const previousColumnTypesProp = React.useRef(columnTypes);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('columnsChange', columnsState.all);\n  }, [logger, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnsMeta = React.useCallback(() => gridColumnsMetaSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnTypes,\n          columnsToUpsert: [],\n          initialState: undefined,\n          shouldRegenColumnVisibilityModelFromColumns: false,\n          currentColumnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, columnTypes]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: true,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState, columnTypes]);\n  const updateColumn = React.useCallback(column => apiRef.current.updateColumns([column]), [apiRef]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    // We keep updating the `hide` option of `GridColDef` when not controlling the model to avoid any breaking change.\n    // `updateColumns` take care of updating the model itself if needs be.\n    // TODO v6: stop using the `hide` field even when the model is not defined\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      var _columnVisibilityMode;\n\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const isCurrentlyVisible = (_columnVisibilityMode = columnVisibilityModel[field]) != null ? _columnVisibilityMode : true;\n\n      if (isVisible !== isCurrentlyVisible) {\n        const newModel = _extends({}, columnVisibilityModel, {\n          [field]: isVisible\n        });\n\n        apiRef.current.setColumnVisibilityModel(newModel);\n      }\n    } else {\n      const column = apiRef.current.getColumn(field);\n\n      const newColumn = _extends({}, column, {\n        hide: !isVisible\n      });\n\n      apiRef.current.updateColumns([newColumn]);\n      const params = {\n        field,\n        colDef: newColumn,\n        isVisible\n      };\n      apiRef.current.publishEvent('columnVisibilityChange', params);\n    }\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = allColumns.findIndex(col => col === field);\n\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsSelector(apiRef.current.state), {\n      all: updatedColumns\n    }));\n    const params = {\n      field,\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: apiRef.current.getColumn(field),\n      targetIndex: targetIndexPosition,\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnOrderChange', params);\n  }, [apiRef, logger, setGridColumnsState]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const column = apiRef.current.getColumn(field);\n\n    const newColumn = _extends({}, column, {\n      width\n    });\n\n    apiRef.current.updateColumns([newColumn]);\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnsMeta,\n    updateColumn,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnIndex,\n    setColumnWidth\n  };\n  useGridApiMethod(apiRef, columnApi, 'GridColumnApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const columnsStateToExport = {};\n\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n      const hasHiddenColumns = Object.values(columnVisibilityModelToExport).some(value => value === false);\n\n      if (hasHiddenColumns) {\n        columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n      }\n    }\n\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const columnVisibilityModelToImport = apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel ? (_context$stateToResto = context.stateToRestore.columns) == null ? void 0 : _context$stateToResto.columnVisibilityModel : undefined;\n    const initialState = context.stateToRestore.columns;\n\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      currentColumnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.all);\n    }\n\n    return params;\n  }, [apiRef, columnTypes]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      var _props$componentsProp;\n\n      const ColumnsPanel = props.components.ColumnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.columnsPanel));\n    }\n\n    return initialValue;\n  }, [props.components.ColumnsPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.columnsPanel]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiOptionHandler(apiRef, 'columnVisibilityChange', props.onColumnVisibilityChange);\n  /**\n   * APPLIERS\n   */\n\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      columnsToUpsert: [],\n      initialState: undefined,\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState, columnTypes]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n\n    if (previousColumnsProp.current === props.columns && previousColumnTypesProp.current === columnTypes) {\n      return;\n    }\n\n    const columnsState = createColumnsState({\n      apiRef,\n      columnTypes,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      shouldRegenColumnVisibilityModelFromColumns: !apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel,\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    previousColumnTypesProp.current = columnTypes;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns, columnTypes]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}","/**\n * Available densities.\n */\n\n/**\n * Density enum.\n */\nvar GridDensityTypes;\n\n(function (GridDensityTypes) {\n  GridDensityTypes[\"Compact\"] = \"compact\";\n  GridDensityTypes[\"Standard\"] = \"standard\";\n  GridDensityTypes[\"Comfortable\"] = \"comfortable\";\n})(GridDensityTypes || (GridDensityTypes = {}));\n\nexport { GridDensityTypes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridDensityTypes } from '../../../models/gridDensity';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nimport { isDeepEqual } from '../../../utils/utils';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3; // TODO v6: revise keeping headerHeight and rowHeight in state\n\nconst getUpdatedDensityState = (newDensity, newHeaderHeight, newRowHeight) => {\n  switch (newDensity) {\n    case GridDensityTypes.Compact:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMPACT_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMPACT_DENSITY_FACTOR),\n        factor: COMPACT_DENSITY_FACTOR\n      };\n\n    case GridDensityTypes.Comfortable:\n      return {\n        value: newDensity,\n        headerHeight: Math.floor(newHeaderHeight * COMFORTABLE_DENSITY_FACTOR),\n        rowHeight: Math.floor(newRowHeight * COMFORTABLE_DENSITY_FACTOR),\n        factor: COMFORTABLE_DENSITY_FACTOR\n      };\n\n    default:\n      return {\n        value: newDensity,\n        headerHeight: newHeaderHeight,\n        rowHeight: newRowHeight,\n        factor: 1\n      };\n  }\n};\n\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: getUpdatedDensityState(props.density, props.headerHeight, props.rowHeight)\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  const setDensity = React.useCallback((newDensity, newHeaderHeight = props.headerHeight, newRowHeight = props.rowHeight) => {\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => {\n      const currentDensityState = gridDensitySelector(state);\n      const newDensityState = getUpdatedDensityState(newDensity, newHeaderHeight, newRowHeight);\n\n      if (isDeepEqual(currentDensityState, newDensityState)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        density: newDensityState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef, props.headerHeight, props.rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.setDensity(props.density, props.headerHeight, props.rowHeight);\n  }, [apiRef, props.density, props.rowHeight, props.headerHeight]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'GridDensityApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"getValue\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useForkRef } from '@mui/material/utils';\nimport { isNavigationKey, isSpaceKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  var _rootProps$components;\n\n  const {\n    field,\n    id,\n    value: isChecked,\n    hasFocus,\n    tabIndex\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef();\n  const handleRef = useForkRef(checkboxElement, ref);\n  const element = apiRef.current.getCellElement(id, field);\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [element, tabIndex]);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      var _checkboxElement$curr;\n\n      const input = (_checkboxElement$curr = checkboxElement.current) == null ? void 0 : _checkboxElement$curr.querySelector('input');\n      input == null ? void 0 : input.focus();\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isSpaceKey(event.key)) {\n      event.stopPropagation();\n    }\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props]);\n  const isSelectable = !rootProps.isRowSelectable || rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * GridApi that let you manipulate the grid.\n   * @deprecated Use the `apiRef` returned by `useGridApiContext` or `useGridApiRef` (only available in `@mui/x-data-grid-pro`)\n   */\n  api: PropTypes.any.isRequired,\n\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n\n  /**\n   * Get the cell value of a row and field.\n   * @param {GridRowId} id The row id.\n   * @param {string} field The field.\n   * @returns {any} The cell value.\n   * @deprecated Use `params.row` to directly access the fields you want instead.\n   */\n  getValue: PropTypes.func.isRequired,\n\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.object.isRequired,\n\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n\n  /**\n   * The cell value, but if the column has valueGetter, use getValue.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = /*#__PURE__*/React.memo(GridCellCheckboxForwardRef);","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);","import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { createSelector } from '../../../utils/createSelector';\nimport { gridVisibleSortedRowEntriesSelector, gridVisibleSortedRowIdsSelector, gridVisibleSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n/**\n * @category Pagination\n * @ignore - do not document.\n */\n\nexport const gridPaginationSelector = state => state.pagination;\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSelector = createSelector(gridPaginationSelector, pagination => pagination.page);\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageSizeSelector = createSelector(gridPaginationSelector, pagination => pagination.pageSize);\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\n\nexport const gridPageCountSelector = createSelector(gridPaginationSelector, pagination => pagination.pageCount);\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginationRowRangeSelector = createSelector(gridPaginationSelector, gridRowTreeSelector, gridRowTreeDepthSelector, gridVisibleSortedRowEntriesSelector, gridVisibleSortedTopLevelRowEntriesSelector, (pagination, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(pagination.pageSize * pagination.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + pagination.pageSize - 1, visibleTopLevelRowCount - 1); // The range contains no element\n\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  } // The tree is flat, there is no need to look for children\n\n\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id].depth;\n\n    if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n      lastRowIndex += 1;\n    }\n\n    if (depth === 0) {\n      topLevelRowAdded += 1;\n    }\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelector(gridVisibleSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\n\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelector(gridVisibleSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridSelectionStateSelector } from '../../hooks/features/selection/gridSelectionSelector';\nimport { isNavigationKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridVisibleSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  var _rootProps$components;\n\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridVisibleSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]); // All the rows that could be selected / unselected by toggling this checkbox\n\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds; // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]); // Amount of rows selected and that are visible in the current page\n\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    } // TODO v6 remove columnHeaderNavigationKeyDown events which are not used internally anymore\n\n\n    if (isNavigationKey(event.key) && !event.shiftKey) {\n      apiRef.current.publishEvent('columnHeaderNavigationKeyDown', props, event);\n    }\n  }, [apiRef, props, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('selectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  type: 'checkboxSelection',\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  valueGetter: params => {\n    const selectionLookup = selectedIdsLookupSelector(params.api.state, params.api.instanceId);\n    return selectionLookup[params.id] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\n\nconst serializeCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return `\"${formattedValue}\"`;\n    }\n\n    return formattedValue;\n  }\n\n  return value;\n};\n\nconst objectFormattedValueWarning = buildWarning(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n\nconst serializeRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (String(cellParams.formattedValue) === '[object Object]') {\n      objectFormattedValueWarning();\n    }\n  }\n\n  return serializeCellValue(cellParams.formattedValue, delimiterCharacter);\n});\n\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    getCellParams,\n    delimiterCharacter,\n    includeHeaders\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter)}\\r\\n`, '').trim();\n\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n\n  const CSVHead = `${columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serializeCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter)}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n\n  if (options.fields) {\n    return options.fields.map(field => columns.find(column => column.field === field)).filter(column => !!column);\n  }\n\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n\n  if (selectedRows.size > 0) {\n    return filteredSortedRowIds.filter(id => selectedRows.has(id));\n  }\n\n  return filteredSortedRowIds;\n};","/**\n * Filter item definition interface.\n */\nvar GridLinkOperator;\n\n(function (GridLinkOperator) {\n  GridLinkOperator[\"And\"] = \"and\";\n  GridLinkOperator[\"Or\"] = \"or\";\n})(GridLinkOperator || (GridLinkOperator = {}));\n\nexport { GridLinkOperator };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridCsvExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n    hideMenu,\n    options\n  } = props;\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu == null ? void 0 : hideMenu();\n    },\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  });\n};\nexport const GridPrintExportMenuItem = props => {\n  const apiRef = useGridApiContext();\n  const {\n    hideMenu,\n    options\n  } = props;\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu == null ? void 0 : hideMenu();\n    },\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  });\n};\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n    csvOptions = {},\n    printOptions = {},\n    excelOptions\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridCsvExport = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    var _options$getRowsToExp, _options$includeHeade;\n\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = (_options$getRowsToExp = options.getRowsToExport) != null ? _options$getRowsToExp : defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      getCellParams: apiRef.current.getCellParams,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: (_options$includeHeade = options.includeHeaders) != null ? _options$includeHeade : true\n    });\n  }, [logger, apiRef]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options != null && options.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options == null ? void 0 : options.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'GridCsvExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$csvOptions;\n\n    if ((_options$csvOptions = options.csvOptions) != null && _options$csvOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`; // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob); // Create a new anchor element\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName; // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n\n    a.click(); // https://github.com/eligrey/FileSaver.js/issues/205\n\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n\n  throw new Error('MUI: exportAs not supported');\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","export const GridFeatureModeConstant = {\n  client: 'client',\n  server: 'server'\n};","import { GridLinkOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  linkOperator: GridLinkOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLinkOperator.And\n});","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.unstable_registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLinkOperator } from '../../../models';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector } from '../columns';\n\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operatorValue.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n\n  if (cleanItem.operatorValue == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.columnField];\n    cleanItem.operatorValue = column && column.filterOperators[0].value;\n  }\n\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning(\"MUI: The 'id' field is required on `filterModel.items` when you use multiple filters.\", 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning(['MUI: One of your filtering item have no `operatorValue` provided.', 'This property will become required on `@mui/x-data-grid@6.X`.']);\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operatorValue == null);\n\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedFilterItemsApplier = (filterModel, apiRef) => {\n  const {\n    items,\n    linkOperator = GridLinkOperator.And\n  } = filterModel;\n\n  const getFilterCallbackFromItem = filterItem => {\n    if (!filterItem.columnField || !filterItem.operatorValue) {\n      return null;\n    }\n\n    const column = apiRef.current.getColumn(filterItem.columnField);\n\n    if (!column) {\n      return null;\n    }\n\n    let parsedValue;\n\n    if (column.valueParser) {\n      var _filterItem$value;\n\n      const parser = column.valueParser;\n      parsedValue = Array.isArray(filterItem.value) ? (_filterItem$value = filterItem.value) == null ? void 0 : _filterItem$value.map(x => parser(x)) : parser(filterItem.value);\n    } else {\n      parsedValue = filterItem.value;\n    }\n\n    const newFilterItem = _extends({}, filterItem, {\n      value: parsedValue\n    });\n\n    const filterOperators = column.filterOperators;\n\n    if (!(filterOperators != null && filterOperators.length)) {\n      throw new Error(`MUI: No filter operators found for column '${column.field}'.`);\n    }\n\n    const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operatorValue);\n\n    if (!filterOperator) {\n      throw new Error(`MUI: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operatorValue}'.`);\n    }\n\n    const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n\n    if (typeof applyFilterOnRow !== 'function') {\n      return null;\n    }\n\n    const fn = rowId => {\n      const cellParams = apiRef.current.getCellParams(rowId, newFilterItem.columnField);\n      return applyFilterOnRow(cellParams);\n    };\n\n    return {\n      fn,\n      item: newFilterItem\n    };\n  };\n\n  const appliers = items.map(getFilterCallbackFromItem).filter(callback => !!callback);\n\n  if (appliers.length === 0) {\n    return null;\n  }\n\n  return (rowId, shouldApplyFilter) => {\n    const filteredAppliers = shouldApplyFilter ? appliers.filter(applier => shouldApplyFilter(applier.item.columnField)) : appliers; // Return `false` as soon as we have a failing filter\n\n    if (linkOperator === GridLinkOperator.And) {\n      return filteredAppliers.every(applier => applier.fn(rowId));\n    } // Return `true` as soon as we have a passing filter\n\n\n    return filteredAppliers.some(applier => applier.fn(rowId));\n  };\n};\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} values The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\n\nexport const buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const {\n    quickFilterValues = [],\n    quickFilterLogicOperator = GridLinkOperator.And\n  } = filterModel;\n\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n\n  const columnsFields = gridColumnFieldsSelector(apiRef);\n  const appliersPerColumnField = {};\n  columnsFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column == null ? void 0 : column.getApplyQuickFilterFn;\n\n    if (!getApplyQuickFilterFn) {\n      return;\n    }\n\n    appliersPerColumnField[field] = quickFilterValues.map(value => getApplyQuickFilterFn(value, column, apiRef));\n  }); // If some value does not have an applier we ignore them\n\n  const sanitizedQuickFilterValues = quickFilterValues.filter((value, index) => Object.keys(appliersPerColumnField).some(field => appliersPerColumnField[field][index] != null));\n  return (rowId, shouldApplyFilter) => {\n    const usedCellParams = {};\n    const columnsFieldsToFilter = [];\n    Object.keys(appliersPerColumnField).forEach(columnField => {\n      if (!shouldApplyFilter || shouldApplyFilter(columnField)) {\n        usedCellParams[columnField] = apiRef.current.getCellParams(rowId, columnField);\n        columnsFieldsToFilter.push(columnField);\n      }\n    }); // Return `false` as soon as we have a quick filter value that does not match any column\n\n    if (quickFilterLogicOperator === GridLinkOperator.And) {\n      return sanitizedQuickFilterValues.every((value, index) => columnsFieldsToFilter.some(field => {\n        var _appliersPerColumnFie, _appliersPerColumnFie2;\n\n        if (appliersPerColumnField[field][index] == null) {\n          return false;\n        }\n\n        return (_appliersPerColumnFie = (_appliersPerColumnFie2 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie.call(_appliersPerColumnFie2, usedCellParams[field]);\n      }));\n    } // Return `true` as soon as we have have a quick filter value that match any column\n\n\n    return sanitizedQuickFilterValues.some((value, index) => columnsFieldsToFilter.some(field => {\n      var _appliersPerColumnFie3, _appliersPerColumnFie4;\n\n      if (appliersPerColumnField[field][index] == null) {\n        return false;\n      }\n\n      return (_appliersPerColumnFie3 = (_appliersPerColumnFie4 = appliersPerColumnField[field])[index]) == null ? void 0 : _appliersPerColumnFie3.call(_appliersPerColumnFie4, usedCellParams[field]);\n    }));\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n\n  if (isRowMatchingFilterItems == null && isRowMatchingQuickFilter == null) {\n    return null;\n  }\n\n  if (isRowMatchingFilterItems == null) {\n    return isRowMatchingQuickFilter;\n  }\n\n  if (isRowMatchingQuickFilter == null) {\n    return isRowMatchingFilterItems;\n  }\n\n  return (rowId, shouldApplyFilter) => isRowMatchingFilterItems(rowId, shouldApplyFilter) && isRowMatchingQuickFilter(rowId, shouldApplyFilter);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFilterableColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector, gridVisibleSortedRowEntriesSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowIdsSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  var _ref, _props$filterModel, _props$initialState, _props$initialState$f;\n\n  const filterModel = (_ref = (_props$filterModel = props.filterModel) != null ? _props$filterModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$f = _props$initialState.filter) == null ? void 0 : _props$initialState$f.filterModel) != null ? _ref : getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      visibleRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    }\n  });\n};\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\n\nexport const useGridFilter = (apiRef, props) => {\n  var _props$componentsProp2;\n\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === GridFeatureModeConstant.client ? buildAggregatedFilterApplier(filterModel, apiRef) : null;\n      const filteringResult = apiRef.current.unstable_applyStrategyProcessor('filtering', {\n        isRowMatchingFilters\n      });\n      return _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [props.filterMode, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback(targetColumnField => {\n    logger.debug('Displaying filter panel');\n\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => item.value !== undefined);\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.columnField === targetColumnField);\n\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          columnField: targetColumnField\n        }, apiRef)];\n      }\n\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLinkOperator = React.useCallback(linkOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (filterModel.linkOperator === linkOperator) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      linkOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getVisibleRowModels = React.useCallback(() => {\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    return new Map(visibleSortedRows.map(row => [row.id, row.model]));\n  }, [apiRef]);\n  const filterApi = {\n    setFilterLinkOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    getVisibleRowModels,\n    setQuickFilterValues\n  };\n  useGridApiMethod(apiRef, filterApi, 'GridFilterApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n\n    if (filterModelToExport.items.length === 0 && filterModelToExport.linkOperator === getDefaultGridFilterModel().linkOperator) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const filterModel = (_context$stateToResto = context.stateToRestore.filter) == null ? void 0 : _context$stateToResto.filterModel;\n\n    if (filterModel == null) {\n      return params;\n    }\n\n    apiRef.current.unstable_updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      var _props$componentsProp;\n\n      const FilterPanel = props.components.FilterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, (_props$componentsProp = props.componentsProps) == null ? void 0 : _props$componentsProp.filterPanel));\n    }\n\n    return initialValue;\n  }, [props.components.FilterPanel, (_props$componentsProp2 = props.componentsProps) == null ? void 0 : _props$componentsProp2.filterPanel]);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode === GridFeatureModeConstant.client && params.isRowMatchingFilters) {\n      const rowIds = gridRowIdsSelector(apiRef);\n      const filteredRowsLookup = {};\n\n      for (let i = 0; i < rowIds.length; i += 1) {\n        const rowId = rowIds[i];\n        filteredRowsLookup[rowId] = params.isRowMatchingFilters(rowId);\n      }\n\n      return {\n        filteredRowsLookup,\n        // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` since no row is collapsed.\n        visibleRowsLookup: filteredRowsLookup,\n        filteredDescendantCountLookup: {}\n      };\n    }\n\n    return {\n      visibleRowsLookup: {},\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const filterableColumnsLookup = gridFilterableColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.columnField && filterableColumnsLookup[item.columnField]);\n\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]); // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', apiRef.current.unstable_applyFilters);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridVisibleSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridVisibleSortedRowEntriesSelector(apiRef);\n\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n\n  return {\n    rows,\n    range\n  };\n};\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null\n  }\n});\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\n\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate(); // The row might have been deleted\n\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    let rowIndexToFocus = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n\n      if (rowIndexToFocus < currentPage.rows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPage.rows.length - 1);\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const rowToFocus = currentPage.rows[rowIndexToFocus];\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || isNavigationKey(event.key)) {\n      return;\n    }\n\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseUp = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n\n      return;\n    }\n\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(focusedCell.id)) {\n      return;\n    } // There's a focused cell but another cell was clicked\n    // Publishes an event to notify that the focus was lost\n\n\n    apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(focusedCell.id, focusedCell.field), event);\n\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n\n    const cell = gridFocusCellSelector(apiRef);\n\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef); // If the focused cell is in a row which does not exist anymore, then remove the focus\n\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  useGridApiMethod(apiRef, {\n    setCellFocus,\n    setColumnHeaderFocus,\n    unstable_moveFocusToRelativeCell: moveFocusToRelativeCell\n  }, 'GridFocusApi');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('click', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('click', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseUp', handleCellMouseUp);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler, useGridSelector } from '../../utils';\nimport { gridPageSizeSelector } from './gridPaginationSelector';\nimport { gridDensityRowHeightSelector } from '../density';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\n\nconst mergeStateWithPageSize = pageSize => state => _extends({}, state, {\n  pagination: _extends({}, state.pagination, {\n    pageSize\n  })\n});\n/**\n * @requires useGridDimensions (event) - can be after\n */\n\n\nexport const useGridPageSize = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPageSize');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'pageSize',\n    propModel: props.pageSize,\n    propOnChange: props.onPageSizeChange,\n    stateSelector: gridPageSizeSelector,\n    changeEvent: 'pageSizeChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPageSize = React.useCallback(pageSize => {\n    if (pageSize === gridPageSizeSelector(apiRef)) {\n      return;\n    }\n\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageSizeApi = {\n    setPageSize\n  };\n  useGridApiMethod(apiRef, pageSizeApi, 'GridPageSizeApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageSizeToExport = gridPageSizeSelector(apiRef);\n    const shouldExportPageSize = // Always export if the page size is controlled\n    props.pageSize != null || // Always export if the page size has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null || // Export if the page size value is not equal to the default value\n    pageSizeToExport !== defaultPageSize(props.autoPageSize);\n\n    if (!shouldExportPageSize) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        pageSize: pageSizeToExport\n      })\n    });\n  }, [apiRef, props.pageSize, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.pageSize, props.autoPageSize]);\n  /**\n   * TODO: Add error if `prop.autoHeight = true`\n   */\n\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const pageSize = (_context$stateToResto = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto.pageSize;\n\n    if (pageSize != null) {\n      apiRef.current.setState(mergeStateWithPageSize(pageSize));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!props.autoPageSize || !dimensions) {\n      return;\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.pageSize != null && !props.autoPageSize) {\n      apiRef.current.setPageSize(props.pageSize);\n    }\n  }, [apiRef, props.autoPageSize, props.pageSize]);\n  React.useEffect(() => {\n    handleUpdateAutoPageSize();\n  }, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridVisibleTopLevelRowCountSelector } from '../filter';\nimport { gridPageSelector, gridPageSizeSelector } from './gridPaginationSelector';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { buildWarning } from '../../../utils/warning';\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n\n  return 0;\n};\n\nconst applyValidPage = paginationState => {\n  if (!paginationState.pageCount) {\n    return paginationState;\n  }\n\n  return _extends({}, paginationState, {\n    page: Math.max(Math.min(paginationState.page, paginationState.pageCount - 1), 0)\n  });\n};\n\nconst mergeStateWithPage = page => state => _extends({}, state, {\n  pagination: applyValidPage(_extends({}, state.pagination, {\n    page\n  }))\n});\n\nconst noRowCountInServerMode = buildWarning([\"MUI: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\n/**\n * @requires useGridPageSize (event)\n */\n\nexport const useGridPage = (apiRef, props) => {\n  var _props$initialState2, _props$initialState2$;\n\n  const logger = useGridLogger(apiRef, 'useGridPage');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'page',\n    propModel: props.page,\n    propOnChange: props.onPageChange,\n    stateSelector: gridPageSelector,\n    changeEvent: 'pageChange'\n  });\n  /**\n   * API METHODS\n   */\n\n  const setPage = React.useCallback(page => {\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setState(mergeStateWithPage(page));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n  const pageApi = {\n    setPage\n  };\n  useGridApiMethod(apiRef, pageApi, 'GridPageApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    var _props$initialState, _props$initialState$p;\n\n    const pageToExport = gridPageSelector(apiRef);\n    const shouldExportPage = // Always export if the page is controlled\n    props.page != null || // Always export if the page has been initialized\n    ((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.page) != null || // Export if the page value is not equal to the default value\n    pageToExport !== 0;\n\n    if (!shouldExportPage) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        page: pageToExport\n      })\n    });\n  }, [apiRef, props.page, (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto, _context$stateToResto2;\n\n    // We apply the constraint even if the page did not change in case the pageSize changed.\n    const page = (_context$stateToResto = (_context$stateToResto2 = context.stateToRestore.pagination) == null ? void 0 : _context$stateToResto2.page) != null ? _context$stateToResto : gridPageSelector(apiRef);\n    apiRef.current.setState(mergeStateWithPage(page));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EVENTS\n   */\n\n  const handlePageSizeChange = pageSize => {\n    apiRef.current.setState(state => {\n      const pageCount = getPageCount(state.pagination.rowCount, pageSize);\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          pageCount,\n          page: state.pagination.page\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  };\n\n  const handlePageChange = () => apiRef.current.scrollToIndexes({\n    rowIndex: gridPageSelector(apiRef) * gridPageSizeSelector(apiRef)\n  });\n\n  useGridApiEventHandler(apiRef, 'pageSizeChange', handlePageSizeChange);\n  useGridApiEventHandler(apiRef, 'pageChange', handlePageChange);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const rowCount = props.rowCount !== undefined ? props.rowCount : visibleTopLevelRowCount;\n      const pageCount = getPageCount(rowCount, state.pagination.pageSize);\n      const page = props.page == null ? state.pagination.page : props.page;\n      return _extends({}, state, {\n        pagination: applyValidPage(_extends({}, state.pagination, {\n          page,\n          rowCount,\n          pageCount\n        }))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [visibleTopLevelRowCount, props.rowCount, props.page, props.paginationMode, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => {\n  var _props$initialState$p, _props$initialState;\n\n  return _extends({}, state, {\n    preferencePanel: (_props$initialState$p = (_props$initialState = props.initialState) == null ? void 0 : _props$initialState.preferencePanel) != null ? _props$initialState$p : {\n      open: false\n    }\n  });\n};\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\n\nexport const useGridPreferencesPanel = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n  /**\n   * API METHODS\n   */\n\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]); // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []); // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback(newValue => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'ColumnMenuApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (!preferencePanelToExport.open && !preferencePanelToExport.openedPanelValue) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isPrintableKey, isCellEnterEditModeKeys, isCellExitEditModeKeys, isCellEditCommitKeys, isDeleteKeys } from '../../../utils/keyboardUtils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\n\nfunction isPromise(promise) {\n  return typeof promise.then === 'function';\n}\n\nexport const useCellEditing = (apiRef, props) => {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const setCellMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) === mode) {\n      return;\n    }\n\n    logger.debug(`Switching cell id: ${id} field: ${field} to mode: ${mode}`);\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      newEditRowsState[id] = _extends({}, newEditRowsState[id]);\n\n      if (mode === GridCellModes.Edit) {\n        newEditRowsState[id][field] = {\n          value: apiRef.current.getCellValue(id, field)\n        };\n      } else {\n        delete newEditRowsState[id][field];\n\n        if (!Object.keys(newEditRowsState[id]).length) {\n          delete newEditRowsState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('cellModeChange', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger]);\n  const getCellMode = React.useCallback((id, field) => {\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editRowsState[id] && editRowsState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]); // TODO v6: it should always return a promise\n\n  const commitCellChange = React.useCallback((params, event = {}) => {\n    var _props$experimentalFe;\n\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n    const model = apiRef.current.getEditRowsModel();\n\n    if (!model[id] || !model[id][field]) {\n      throw new Error(`MUI: Cell at id: ${id} and field: ${field} is not in edit mode.`);\n    }\n\n    const editCellProps = model[id][field];\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const cellProps = model[id][field];\n\n      if (cellProps.isValidating || cellProps.error) {\n        return false;\n      }\n    }\n\n    const commitParams = _extends({}, params, {\n      value: editCellProps.value\n    });\n\n    let hasError = !!editCellProps.error;\n\n    if (!hasError && typeof column.preProcessEditCellProps === 'function') {\n      const result = column.preProcessEditCellProps({\n        id,\n        row,\n        props: editCellProps\n      });\n\n      if (isPromise(result)) {\n        return result.then(newEditCellProps => {\n          apiRef.current.unstable_setEditCellProps({\n            id,\n            field,\n            props: newEditCellProps\n          });\n\n          if (newEditCellProps.error) {\n            return false;\n          }\n\n          apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n          return true;\n        });\n      }\n\n      apiRef.current.unstable_setEditCellProps({\n        id,\n        field,\n        props: result\n      });\n      hasError = !!result.error;\n    }\n\n    if (!hasError) {\n      apiRef.current.publishEvent('cellEditCommit', commitParams, event);\n      return true;\n    }\n\n    return false;\n  }, [apiRef, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setCellEditingEditCellValue = React.useCallback(params => {\n    const column = apiRef.current.getColumn(params.field);\n    const row = apiRef.current.getRow(params.id);\n    return new Promise(resolve => {\n      let newEditCellProps = {\n        value: params.value\n      };\n      const model = apiRef.current.getEditRowsModel();\n      const editCellProps = model[params.id][params.field];\n\n      if (typeof column.preProcessEditCellProps !== 'function') {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n        resolve(true);\n        return;\n      } // setEditCellProps runs the value parser and returns the updated props\n\n\n      newEditCellProps = apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: _extends({}, editCellProps, {\n          isValidating: true\n        })\n      }));\n      Promise.resolve(column.preProcessEditCellProps({\n        id: params.id,\n        row,\n        props: _extends({}, newEditCellProps, {\n          value: apiRef.current.unstable_parseValue(params.id, params.field, params.value)\n        })\n      })).then(newEditCellPropsProcessed => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: _extends({}, newEditCellPropsProcessed, {\n            isValidating: false\n          })\n        }));\n        resolve(!newEditCellPropsProcessed.error);\n      });\n    });\n  }, [apiRef]);\n  const cellEditingApi = {\n    setCellMode,\n    getCellMode,\n    commitCellChange,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, cellEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      id,\n      field,\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const isModifierKeyPressed = event.ctrlKey || event.metaKey || event.altKey;\n\n    if (!isEditMode && isCellEnterEditModeKeys(event.key) && !isModifierKeyPressed && !(event.key === ' ' && event.shiftKey)) {\n      apiRef.current.publishEvent('cellEditStart', params, event);\n    }\n\n    if (!isEditMode && isDeleteKeys(event.key)) {\n      apiRef.current.setEditCellValue({\n        id,\n        field,\n        value: ''\n      });\n      apiRef.current.commitCellChange({\n        id,\n        field\n      }, event);\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n\n    if (isEditMode && isCellEditCommitKeys(event.key)) {\n      const commitParams = {\n        id,\n        field\n      };\n      const isValid = await apiRef.current.commitCellChange(commitParams, event);\n\n      if (!isValid) {\n        return;\n      }\n    }\n\n    if (isEditMode && isCellExitEditModeKeys(event.key)) {\n      apiRef.current.publishEvent('cellEditStop', params, event);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.publishEvent('cellEditStart', params, event);\n  }, [apiRef]);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    await apiRef.current.commitCellChange(params, event);\n    apiRef.current.publishEvent('cellEditStop', params, event);\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  const handleCellEditStart = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.Edit);\n\n    if (isKeyboardEvent(event) && isPrintableKey(event.key)) {\n      apiRef.current.unstable_setEditCellProps({\n        id: params.id,\n        field: params.field,\n        props: {\n          value: ''\n        }\n      });\n    }\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback((params, event) => {\n    apiRef.current.setCellMode(params.id, params.field, GridCellModes.View);\n\n    if (!isKeyboardEvent(event)) {\n      return;\n    }\n\n    if (isCellEditCommitKeys(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n      return;\n    }\n\n    if (event.key === 'Escape' || isDeleteKeys(event.key)) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleCellEditCommit = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params;\n    const model = apiRef.current.getEditRowsModel();\n    const {\n      value\n    } = model[id][field];\n    logger.debug(`Setting cell id: ${id} field: ${field} to value: ${value == null ? void 0 : value.toString()}`);\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      const column = apiRef.current.getColumn(params.field);\n\n      let rowUpdate = _extends({}, row, {\n        [field]: value\n      });\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          row,\n          value\n        });\n      }\n\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef, logger]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const column = apiRef.current.getColumn(params.field);\n    const editCellProps = column.preProcessEditCellProps ? column.preProcessEditCellProps({\n      id: params.id,\n      row,\n      props: params.props\n    }) : params.props;\n\n    if (isPromise(editCellProps)) {\n      editCellProps.then(newEditCellProps => {\n        apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n          props: newEditCellProps\n        }));\n      });\n    } else {\n      apiRef.current.unstable_setEditCellProps(_extends({}, params, {\n        props: editCellProps\n      }));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiEventHandler(apiRef, 'cellEditStart', buildCallback(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', buildCallback(handleCellEditStop));\n  useGridApiEventHandler(apiRef, 'cellEditCommit', buildCallback(handleCellEditCommit));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiOptionHandler(apiRef, 'cellEditCommit', props.onCellEditCommit);\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n};","// TODO v6 - remove\n\n/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\n// TODO v6 - remove\n// TODO v6 - remove\nvar GridCellEditStartReasons;\n/**\n * Params passed to the `cellEditStart` event.\n */\n\n(function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridCellEditStartReasons || (GridCellEditStartReasons = {}));\n\nvar GridCellEditStopReasons;\n/**\n * Params passed to the `cellEditStop event.\n */\n\n(function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridCellEditStopReasons || (GridCellEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { useCellEditing } from './useGridCellEditing.old';\nimport { useGridRowEditing } from './useGridRowEditing.old';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\n/**\n * @requires useGridFocus - can be after, async only\n * @requires useGridParamsApi (method)\n * @requires useGridColumns (state)\n */\n\nexport function useGridEditing(apiRef, props) {\n  var _props$experimentalFe2;\n\n  const logger = useGridLogger(apiRef, 'useGridEditRows');\n  useCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  apiRef.current.unstable_registerControlState({\n    stateId: 'editRows',\n    propModel: props.editRowsModel,\n    propOnChange: props.onEditRowsModelChange,\n    stateSelector: gridEditRowsStateSelector,\n    changeEvent: 'editRowsModelChange'\n  });\n  const isCellEditable = React.useCallback(params => !params.rowNode.isAutoGenerated && !!params.colDef.editable && !!params.colDef.renderEditCell && (!props.isCellEditable || props.isCellEditable(params)), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [props.isCellEditable]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    const callbackToRunImmediately = () => {\n      callback();\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, callbackToRunImmediately];\n  };\n\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, callback] = debounceMap.current[id][debouncedField];\n        callback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, callback] = debounceMap.current[id][field];\n      callback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback((params, event = {}) => {\n    maybeDebounce(params.id, params.field, params.debounceMs, () => {\n      var _props$experimentalFe;\n\n      if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n        if (props.editMode === 'row') {\n          return apiRef.current.unstable_setRowEditingEditCellValue(params);\n        }\n\n        return apiRef.current.unstable_setCellEditingEditCellValue(params);\n      }\n\n      const newParams = {\n        id: params.id,\n        field: params.field,\n        props: {\n          value: params.value\n        }\n      };\n      return apiRef.current.publishEvent('editCellPropsChange', newParams, event);\n    });\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const parseValue = React.useCallback((id, field, value) => {\n    const column = apiRef.current.getColumn(field);\n    return column.valueParser ? column.valueParser(value, apiRef.current.getCellParams(id, field)) : value;\n  }, [apiRef]);\n  const setEditCellProps = React.useCallback(params => {\n    const {\n      id,\n      field,\n      props: editProps\n    } = params;\n    logger.debug(`Setting cell props on id: ${id} field: ${field}`);\n    apiRef.current.setState(state => {\n      const editRowsModel = _extends({}, state.editRows);\n\n      editRowsModel[id] = _extends({}, state.editRows[id]);\n      editRowsModel[id][field] = _extends({}, editProps, {\n        value: parseValue(id, field, editProps.value)\n      });\n      return _extends({}, state, {\n        editRows: editRowsModel\n      });\n    });\n    apiRef.current.forceUpdate();\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id][field];\n  }, [apiRef, logger, parseValue]);\n  const setEditRowsModel = React.useCallback(model => {\n    const currentModel = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting editRows model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        editRows: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const getEditRowsModel = React.useCallback(() => gridEditRowsStateSelector(apiRef.current.state), [apiRef]);\n  const preventTextSelection = React.useCallback((params, event) => {\n    const isMoreThanOneClick = event.detail > 1;\n\n    if (params.isEditable && params.cellMode === GridCellModes.View && isMoreThanOneClick) {\n      // If we click more than one time, then we prevent the default behavior of selecting the text cell.\n      event.preventDefault();\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventTextSelection);\n  useGridApiOptionHandler(apiRef, 'editCellPropsChange', props.onEditCellPropsChange); // TODO v6: remove, use `preProcessEditCellProps` instead\n\n  const editingSharedApi = {\n    isCellEditable,\n    setEditRowsModel,\n    getEditRowsModel,\n    setEditCellValue,\n    unstable_setEditCellProps: setEditCellProps,\n    unstable_parseValue: parseValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditRowApi');\n  React.useEffect(() => {\n    if (props.editRowsModel !== undefined) {\n      apiRef.current.setEditRowsModel(props.editRowsModel);\n    }\n  }, [apiRef, props.editRowsModel]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useEventCallback } from '@mui/material/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridRowModes, GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridApiOptionHandler, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nexport const useGridRowEditing = (apiRef, props) => {\n  var _props$experimentalFe2, _props$experimentalFe4;\n\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n\n  const buildCallback = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const setRowMode = React.useCallback((id, mode) => {\n    if (mode === apiRef.current.getRowMode(id)) {\n      return;\n    }\n\n    apiRef.current.setState(state => {\n      const newEditRowsState = _extends({}, state.editRows);\n\n      if (mode === GridRowModes.Edit) {\n        newEditRowsState[id] = {};\n        columns.forEach(column => {\n          const cellParams = apiRef.current.getCellParams(id, column.field);\n\n          if (cellParams.isEditable) {\n            newEditRowsState[id][column.field] = {\n              value: cellParams.value\n            };\n          }\n        });\n      } else {\n        delete newEditRowsState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditRowsState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, columns]);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    return editRowsState[id] ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const commitRowChange = React.useCallback((id, event = {}) => {\n    var _props$experimentalFe;\n\n    if (props.editMode === GridEditModes.Cell) {\n      throw new Error(`MUI: You can't commit changes when the edit mode is 'cell'.`);\n    }\n\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRowProps = model[id];\n\n    if (!editRowProps) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    if ((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.preventCommitWhileValidating) {\n      const isValid = Object.keys(editRowProps).reduce((acc, field) => {\n        return acc && !editRowProps[field].isValidating && !editRowProps[field].error;\n      }, true);\n\n      if (!isValid) {\n        return false;\n      }\n    }\n\n    const hasFieldWithError = Object.values(editRowProps).some(value => !!value.error);\n\n    if (hasFieldWithError) {\n      return false;\n    }\n\n    const fieldsWithValidator = Object.keys(editRowProps).filter(field => {\n      const column = apiRef.current.getColumn(field);\n      return typeof column.preProcessEditCellProps === 'function';\n    });\n\n    if (fieldsWithValidator.length > 0) {\n      const row = apiRef.current.getRow(id);\n      const validatorErrors = fieldsWithValidator.map(async field => {\n        const column = apiRef.current.getColumn(field);\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: editRowProps[field]\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id,\n          field,\n          props: newEditCellProps\n        });\n        return newEditCellProps.error;\n      });\n      return Promise.all(validatorErrors).then(errors => {\n        if (errors.some(error => !!error)) {\n          return false;\n        }\n\n        apiRef.current.publishEvent('rowEditCommit', id, event);\n        return true;\n      });\n    }\n\n    apiRef.current.publishEvent('rowEditCommit', id, event);\n    return true;\n  }, [apiRef, props.editMode, (_props$experimentalFe2 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe2.preventCommitWhileValidating]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    const row = apiRef.current.getRow(params.id);\n    let isValid = true;\n    return new Promise(resolve => {\n      Object.keys(editRow).forEach(async field => {\n        const column = apiRef.current.getColumn(field);\n        let editCellProps = field === params.field ? {\n          value: params.value\n        } : editRow[field]; // setEditCellProps runs the value parser and returns the updated props\n\n        editCellProps = apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: true\n          })\n        });\n\n        if (column.preProcessEditCellProps) {\n          editCellProps = await Promise.resolve(column.preProcessEditCellProps({\n            id: params.id,\n            row,\n            props: _extends({}, editCellProps, {\n              value: field === params.field ? apiRef.current.unstable_parseValue(params.id, field, params.value) : editCellProps.value\n            })\n          }));\n        }\n\n        if (editCellProps.error) {\n          isValid = false;\n        }\n\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: _extends({}, editCellProps, {\n            isValidating: false\n          })\n        });\n      });\n      resolve(isValid);\n    });\n  }, [apiRef]);\n  const rowEditingApi = {\n    setRowMode,\n    getRowMode,\n    commitRowChange,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue\n  };\n  useGridApiMethod(apiRef, rowEditingApi, 'EditRowApi');\n  const handleCellKeyDown = React.useCallback(async (params, event) => {\n    // Wait until IME is settled for Asian languages like Japanese and Chinese\n    // TODO: `event.which` is depricated but this is a temporary workaround\n    if (event.which === 229) {\n      return;\n    }\n\n    const {\n      cellMode,\n      isEditable\n    } = params;\n\n    if (!isEditable) {\n      return;\n    }\n\n    const isEditMode = cellMode === GridCellModes.Edit;\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    if (isEditMode) {\n      if (event.key === 'Enter') {\n        var _props$experimentalFe3;\n\n        // TODO: check the return before firing 'rowEditStop'\n        // On cell editing, it won't exits the edit mode with error\n        const isValid = await apiRef.current.commitRowChange(params.id);\n\n        if (!isValid && (_props$experimentalFe3 = props.experimentalFeatures) != null && _props$experimentalFe3.preventCommitWhileValidating) {\n          return;\n        }\n\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      } else if (event.key === 'Escape') {\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    } else if (event.key === 'Enter') {\n      apiRef.current.publishEvent('rowEditStart', rowParams, event);\n    }\n  }, [apiRef, (_props$experimentalFe4 = props.experimentalFeatures) == null ? void 0 : _props$experimentalFe4.preventCommitWhileValidating]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n    apiRef.current.publishEvent('rowEditStart', rowParams, event);\n  }, [apiRef]);\n  const handleEditCellPropsChange = React.useCallback(params => {\n    const row = apiRef.current.getRow(params.id);\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[params.id];\n    Object.keys(editRow).forEach(async field => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.preProcessEditCellProps) {\n        const editCellProps = field === params.field ? params.props : editRow[field];\n        const newEditCellProps = await Promise.resolve(column.preProcessEditCellProps({\n          id: params.id,\n          row,\n          props: editCellProps\n        }));\n        apiRef.current.unstable_setEditCellProps({\n          id: params.id,\n          field,\n          props: newEditCellProps\n        });\n      } else if (field === params.field) {\n        apiRef.current.unstable_setEditCellProps(params);\n      }\n    });\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    apiRef.current.setRowMode(params.id, GridRowModes.Edit);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback((params, event) => {\n    apiRef.current.setRowMode(params.id, GridRowModes.View);\n\n    if (event.key === 'Enter') {\n      apiRef.current.publishEvent('cellNavigationKeyDown', params, event);\n    }\n  }, [apiRef]);\n  const handleRowEditCommit = React.useCallback(id => {\n    const model = apiRef.current.getEditRowsModel();\n    const editRow = model[id];\n\n    if (!editRow) {\n      throw new Error(`MUI: Row at id: ${id} is not being edited.`);\n    }\n\n    const row = apiRef.current.getRow(id);\n\n    if (row) {\n      let rowUpdate = _extends({}, row);\n\n      Object.keys(editRow).forEach(field => {\n        const column = apiRef.current.getColumn(field);\n        const value = editRow[field].value;\n\n        if (column.valueSetter) {\n          rowUpdate = column.valueSetter({\n            row: rowUpdate,\n            value\n          });\n        } else {\n          rowUpdate[field] = value;\n        }\n      });\n      apiRef.current.updateRows([rowUpdate]);\n    }\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n\n  const commitPropsAndExit = async (params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(async () => {\n      var _nextFocusedCell$curr;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        await apiRef.current.commitRowChange(params.id, event);\n        const rowParams = apiRef.current.getRowParams(params.id);\n        apiRef.current.publishEvent('rowEditStop', rowParams, event);\n      }\n    });\n  };\n\n  const handleCellFocusOut = useEventCallback((params, event) => {\n    commitPropsAndExit(params, event);\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    if (!cell) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(cell.id, cell.field);\n    commitPropsAndExit(params, {});\n  });\n  useGridApiEventHandler(apiRef, 'cellKeyDown', buildCallback(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', buildCallback(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'editCellPropsChange', buildCallback(handleEditCellPropsChange));\n  useGridApiEventHandler(apiRef, 'rowEditStart', buildCallback(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', buildCallback(handleRowEditStop));\n  useGridApiEventHandler(apiRef, 'rowEditCommit', buildCallback(handleRowEditCommit));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', buildCallback(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', buildCallback(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', buildCallback(handleColumnHeaderDragStart));\n  useGridApiOptionHandler(apiRef, 'rowEditCommit', props.onRowEditCommit);\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n      _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (isPrintableKey(event.key)) {\n        if (event.shiftKey || event.ctrlKey || event.metaKey || event.altKey) {\n          return;\n        }\n\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n\n    if (reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.printableKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    let cellToFocusAfter;\n\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (editingState[id][field].isProcessingProps) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications.\n      ignoreModifications = true;\n    }\n\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = React.useCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onCellModesModelChange(newModel, details);\n    }\n\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setCellModesModel(newModel);\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  }, [apiRef, onCellModesModelChange, props.cellModesModel, signature]);\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    const newModel = _extends({}, cellModesModel);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _cellModesModel$id = cellModesModel[id],\n            otherFields = _objectWithoutPropertiesLoose(_cellModesModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n\n\n      newModel[id] = otherFields;\n\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n\n    updateCellModesModel(newModel);\n  }, [cellModesModel, updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue\n    } = params;\n    const newProps = {\n      value: deleteValue ? '' : apiRef.current.getCellValue(id, field),\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef, updateOrDeleteFieldState]);\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n      id,\n      field\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.unstable_runPendingEditCellValueMutation(id, field);\n\n    const finishCellEditMode = () => {\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n    };\n\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  }, [apiRef, onProcessRowUpdateError, processRowUpdate, throwIfNotInMode, updateFieldInCellModesModel, updateOrDeleteFieldState]);\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue\n    });\n\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    } // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n\n\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    }); // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id][field].error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      value\n    } = editingState[id][field];\n    const row = apiRef.current.getRow(id);\n    return column.valueSetter ? column.valueSetter({\n      value,\n      row\n    }) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode,\n    unstable_setCellEditingEditCellValue: setCellEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromCellEditing: getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopCellEditMode may change it later\n\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = cellModesModel;\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        var _copyOfPrevCellModes$, _copyOfPrevCellModes$2, _idToIdLookup$id;\n\n        const prevMode = ((_copyOfPrevCellModes$ = copyOfPrevCellModes[id]) == null ? void 0 : (_copyOfPrevCellModes$2 = _copyOfPrevCellModes$[field]) == null ? void 0 : _copyOfPrevCellModes$2.mode) || GridCellModes.View;\n        const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n */\n\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n */\n\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons;\n/**\n * Params passed to the `rowEditStart` event.\n */\n\n(function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n})(GridRowEditStartReasons || (GridRowEditStartReasons = {}));\n\nvar GridRowEditStopReasons;\n\n(function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n})(GridRowEditStopReasons || (GridRowEditStopReasons = {}));\n\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n      _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiOptionHandler, GridSignature } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditRowsSelector';\nimport { isPrintableKey } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, e.g. `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see http://mui.com/components/data-grid/editing/#persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(null);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange,\n    signature\n  } = props;\n\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n\n    const rowParams = apiRef.current.getRowParams(params.id);\n\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    } // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n\n\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      var _nextFocusedCell$curr;\n\n      focusTimeout.current = null;\n\n      if (((_nextFocusedCell$curr = nextFocusedCell.current) == null ? void 0 : _nextFocusedCell$curr.id) !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is depricated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n\n      let reason;\n\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridColumnFieldsSelector(apiRef).filter(field => apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field)));\n\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        if (reason) {\n          event.preventDefault(); // Prevent going to the next element in the tab sequence\n        }\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          reason,\n          field: params.field\n        });\n\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n\n      if (isPrintableKey(event.key)) {\n        if (event.shiftKey || event.ctrlKey || event.metaKey || event.altKey) {\n          return;\n        }\n\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n\n    if (reason === GridRowEditStartReasons.deleteKeyDown || reason === GridRowEditStartReasons.printableKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n\n    let ignoreModifications = reason === 'escapeKeyDown';\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    if (!ignoreModifications) {\n      // The user wants to stop editing the cell but we can't wait for the props to be processed.\n      // In this case, discard the modifications if any field is processing its props.\n      ignoreModifications = Object.values(editingState[id]).some(fieldProps => {\n        return fieldProps.isProcessingProps;\n      });\n    }\n\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = React.useCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      const details = signature === GridSignature.DataGridPro ? {\n        api: apiRef.current\n      } : {};\n      onRowModesModelChange(newModel, details);\n    }\n\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n\n    setRowModesModel(newModel);\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  }, [apiRef, onRowModesModelChange, props.rowModesModel, signature]);\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModel);\n\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n\n    updateRowModesModel(newModel);\n  }, [rowModesModel, updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded);\n\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = React.useCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n\n      const shouldDeleteValue = deleteValue && fieldToFocus === field;\n      acc[field] = {\n        value: shouldDeleteValue ? '' : apiRef.current.getCellValue(id, field),\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  }, [apiRef, updateOrDeleteRowState]);\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n      id\n    } = params,\n          other = _objectWithoutPropertiesLoose(params, _excluded2);\n\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = React.useCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.unstable_runPendingEditCellValueMutation(id);\n\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.unstable_moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n\n    const hasSomeFieldWithError = Object.values(editingState[id]).some(fieldProps => fieldProps.error);\n\n    if (hasSomeFieldWithError) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n\n    const rowUpdate = apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  }, [apiRef, onProcessRowUpdateError, processRowUpdate, updateOrDeleteRowState, updateRowInRowModesModel]);\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n\n    if (column.valueParser) {\n      parsedValue = column.valueParser(value, apiRef.current.getCellParams(id, field));\n    }\n\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue\n    });\n\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n\n    return new Promise(resolve => {\n      const promises = [];\n\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n\n        const _editingState$id = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          }); // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n\n        const fieldColumn = apiRef.current.getColumn(thisField);\n\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n\n        const _editingState$id2 = editingState[id],\n              otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n\n    let rowUpdate = _extends({}, row);\n\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter({\n          value: fieldProps.value,\n          row: rowUpdate\n        });\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode,\n    unstable_setRowEditingEditCellValue: setRowEditingEditCellValue,\n    unstable_getRowWithUpdatedValuesFromRowEditing: getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'EditingApi');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n  React.useEffect(() => {\n    const idToIdLookup = gridRowsIdToIdLookupSelector(apiRef); // Update the ref here because updateStateToStopRowEditMode may change it later\n\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = rowModesModel;\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      var _copyOfPrevRowModesMo, _idToIdLookup$id;\n\n      const prevMode = ((_copyOfPrevRowModesMo = copyOfPrevRowModesModel[id]) == null ? void 0 : _copyOfPrevRowModesMo.mode) || GridRowModes.View;\n      const originalId = (_idToIdLookup$id = idToIdLookup[id]) != null ? _idToIdLookup$id : id;\n\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing.new';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing.new';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (params.rowNode.isAutoGenerated) {\n      return false;\n    }\n\n    if (!params.colDef.editable) {\n      return false;\n    }\n\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n\n    return true;\n  }, [isCellEditableProp]);\n\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    } // To run the callback immediatelly without waiting the timeout\n\n\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.unstable_setRowEditingEditCellValue : apiRef.current.unstable_setCellEditingEditCellValue; // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.unstable_getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.unstable_getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    unstable_runPendingEditCellValueMutation: runPendingEditCellValueMutation,\n    unstable_getRowWithUpdatedValues: getRowWithUpdatedValues\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'EditingApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsBeforePartialUpdates\"];\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading\n}) => {\n  const cache = {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    idRowsLookup: {},\n    idToIdLookup: {},\n    ids: []\n  };\n\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const id = getRowIdFromRowModel(row, getRowId);\n    cache.idRowsLookup[id] = row;\n    cache.idToIdLookup[id] = id;\n    cache.ids.push(id);\n  }\n\n  return cache;\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  previousTree,\n  rowCountProp,\n  loadingProp\n}) => {\n  const _apiRef$current$unsta = apiRef.current.unstable_caches.rows,\n        cacheForGrouping = _objectWithoutPropertiesLoose(_apiRef$current$unsta, _excluded);\n\n  const rowCount = rowCountProp != null ? rowCountProp : 0;\n  const groupingResponse = apiRef.current.unstable_applyStrategyProcessor('rowTreeCreation', _extends({}, cacheForGrouping, {\n    previousTree\n  }));\n  const processedGroupingResponse = apiRef.current.unstable_applyPipeProcessors('hydrateRows', groupingResponse);\n  const dataTopLevelRowCount = processedGroupingResponse.treeDepth === 1 ? processedGroupingResponse.ids.length : Object.values(processedGroupingResponse.tree).filter(node => node.parent == null).length;\n  return _extends({}, processedGroupingResponse, {\n    groupingResponseBeforeRowHydration: groupingResponse,\n    loading: loadingProp,\n    totalRowCount: Math.max(rowCount, processedGroupingResponse.ids.length),\n    totalTopLevelRowCount: Math.max(rowCount, dataTopLevelRowCount)\n  });\n};\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  var _tree$parentId;\n\n  const children = (_tree$parentId = tree[parentId]) == null ? void 0 : _tree$parentId.children;\n\n  if (children == null) {\n    return [];\n  }\n\n  const validDescendants = [];\n\n  for (let i = 0; i < children.length; i += 1) {\n    const child = children[i];\n    const childNode = tree[child];\n\n    if (!skipAutoGeneratedRows || !childNode.isAutoGenerated) {\n      validDescendants.push(child);\n    }\n\n    validDescendants.push(...getTreeNodeDescendants(tree, childNode.id, skipAutoGeneratedRows));\n  }\n\n  return validDescendants;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowIdsSelector, gridRowGroupingNameSelector } from './gridRowsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.unstable_caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      previousTree: null,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // Freeze rows for immutability\n    Object.freeze(props.rows);\n  }\n\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = React.useRef(null);\n  const getRow = React.useCallback(id => {\n    var _ref;\n\n    return (_ref = gridRowsLookupSelector(apiRef)[id]) != null ? _ref : null;\n  }, [apiRef]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback((newCache, throttle) => {\n    const run = () => {\n      timeout.current = null;\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          previousTree: gridRowTreeSelector(apiRef),\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n\n    if (timeout.current) {\n      clearTimeout(timeout.current);\n      timeout.current = null;\n    }\n\n    apiRef.current.unstable_caches.rows = newCache;\n\n    if (!throttle) {\n      run();\n      return;\n    }\n\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n\n    if (throttleRemainingTimeMs > 0) {\n      timeout.current = setTimeout(run, throttleRemainingTimeMs);\n      return;\n    }\n\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading\n    }), true);\n  }, [logger, props.getRowId, props.loading, throttledRowsChange]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      // TODO: Add test with direct call to `apiRef.current.updateRows` in DataGrid after enabling the `apiRef` on the free plan.\n      throw new Error([\"MUI: You can't update several rows at once in `apiRef.current.updateRows` on the DataGrid.\", 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    } // we remove duplicate updates. A server can batch updates, and send several updates for the same row in one fn call.\n\n\n    const uniqUpdates = new Map();\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n\n      if (uniqUpdates.has(id)) {\n        uniqUpdates.set(id, _extends({}, uniqUpdates.get(id), update));\n      } else {\n        uniqUpdates.set(id, update);\n      }\n    });\n    const deletedRowIds = [];\n    const prevCache = apiRef.current.unstable_caches.rows;\n    const newCache = {\n      rowsBeforePartialUpdates: prevCache.rowsBeforePartialUpdates,\n      loadingPropBeforePartialUpdates: prevCache.loadingPropBeforePartialUpdates,\n      idRowsLookup: _extends({}, prevCache.idRowsLookup),\n      idToIdLookup: _extends({}, prevCache.idToIdLookup),\n      ids: [...prevCache.ids]\n    };\n    uniqUpdates.forEach((partialRow, id) => {\n      // eslint-disable-next-line no-underscore-dangle\n      if (partialRow._action === 'delete') {\n        delete newCache.idRowsLookup[id];\n        delete newCache.idToIdLookup[id];\n        deletedRowIds.push(id);\n        return;\n      }\n\n      const oldRow = apiRef.current.getRow(id);\n\n      if (!oldRow) {\n        newCache.idRowsLookup[id] = partialRow;\n        newCache.idToIdLookup[id] = id;\n        newCache.ids.push(id);\n        return;\n      }\n\n      newCache.idRowsLookup[id] = _extends({}, apiRef.current.getRow(id), partialRow);\n    });\n\n    if (deletedRowIds.length > 0) {\n      newCache.ids = newCache.ids.filter(id => !deletedRowIds.includes(id));\n    }\n\n    throttledRowsChange(newCache, true);\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(allRows.map(id => [id, idRowsLookup[id]]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n\n    if (!currentNode) {\n      throw new Error(`MUI: No row with id #${id} found`);\n    }\n\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => {\n    var _gridRowTreeSelector$;\n\n    return (_gridRowTreeSelector$ = gridRowTreeSelector(apiRef)[id]) != null ? _gridRowTreeSelector$ : null;\n  }, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n\n    if (applySorting) {\n      const groupNode = tree[groupId];\n\n      if (!groupNode) {\n        return [];\n      }\n\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        const node = tree[id];\n\n        if (!skipAutoGeneratedRows || !node.isAutoGenerated) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const allRows = gridRowIdsSelector(apiRef);\n    const oldIndex = allRows.findIndex(row => row === rowId);\n\n    if (oldIndex === -1 || oldIndex === targetIndex) {\n      return;\n    }\n\n    logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n    const updatedRows = [...allRows];\n    updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        ids: updatedRows\n      })\n    }));\n    apiRef.current.applySorting();\n  }, [apiRef, logger]);\n  const rowApi = {\n    getRow,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    setRowIndex,\n    updateRows,\n    setRowChildrenExpansion,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    getRowGroupChildren\n  };\n  /**\n   * EVENTS\n   */\n\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n\n    if (apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = apiRef.current.unstable_caches.rows;\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading\n      });\n    }\n\n    throttledRowsChange(cache, false);\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.unstable_getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n  /**\n   * APPLIERS\n   */\n\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, apiRef.current.unstable_applyPipeProcessors('hydrateRows', state.rows.groupingResponseBeforeRowHydration))\n    }));\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'GridRowApi');\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    return () => {\n      if (timeout.current !== null) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []); // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    const areNewRowsAlreadyInState = apiRef.current.unstable_caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates === props.loading; // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.unstable_caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n\n      return;\n    }\n\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange(createRowsInternalCache({\n      rows: props.rows,\n      getRowId: props.getRowId,\n      loading: props.loading\n    }), false);\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\n\nconst flatRowTreeCreationMethod = ({\n  ids,\n  idRowsLookup,\n  idToIdLookup,\n  previousTree\n}) => {\n  const tree = {};\n\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n\n    if (previousTree && previousTree[rowId] && previousTree[rowId].depth === 0 && previousTree[rowId].parent == null) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    idToIdLookup,\n    ids\n  };\n};\n\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nexport function getRowEl(cell) {\n  if (!cell) {\n    return null;\n  }\n\n  return findParentElementFromClassName(cell, gridClasses.row);\n} // TODO remove\n\nexport function isGridCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.cell);\n}\nexport function isGridHeaderCellRoot(elem) {\n  return elem != null && elem.classList.contains(gridClasses.columnHeader);\n}\n\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\n\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(`.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`);\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const row = getGridRowElement(root, id);\n\n  if (!row) {\n    return null;\n  }\n\n  return row.querySelector(`.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { buildWarning } from '../../../utils/warning';\nlet warnedOnceMissingColumn = false;\n\nfunction warnMissingColumn(field) {\n  console.warn([`MUI: You are calling getValue('${field}') but the column \\`${field}\\` is not defined.`, `Instead, you can access the data from \\`params.row.${field}\\`.`].join('\\n'));\n  warnedOnceMissingColumn = true;\n}\n\nconst getCellValueWarning = buildWarning([`MUI: You are calling getValue. This method is deprecated and will be removed in the next major version.`, 'Instead, you can access the data from `params.row`.']);\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\n\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  /**\n   * We want to remove the `getValue` param from `getRowParams`, `getCellParams` and `getBaseCellParams`\n   */\n\n  const getCellValueWithDeprecationWarning = React.useCallback((...args) => {\n    if (process.env.NODE_ENV !== 'production') {\n      getCellValueWarning();\n    }\n\n    return apiRef.current.getCellValue(...args);\n  }, [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n\n    if (!row) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row,\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getBaseCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      value: row[field],\n      colDef: apiRef.current.getColumn(field),\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      api: apiRef.current,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1\n    };\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const value = apiRef.current.getCellValue(id, field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n\n    if (!row || !rowNode) {\n      throw new Error(`No row with id #${id} found`);\n    }\n\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      // TODO v6: remove\n      getValue: getCellValueWithDeprecationWarning,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value\n    };\n\n    if (colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter({\n        id,\n        field: params.field,\n        value: params.value,\n        api: apiRef.current\n      });\n    }\n\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, getCellValueWithDeprecationWarning]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!colDef && !warnedOnceMissingColumn) {\n        warnMissingColumn(field);\n      }\n    }\n\n    if (!colDef || !colDef.valueGetter) {\n      const rowModel = apiRef.current.getRow(id);\n\n      if (!rowModel) {\n        throw new Error(`No row with id #${id} found`);\n      }\n\n      return rowModel[field];\n    }\n\n    return colDef.valueGetter(getBaseCellParams(id, field));\n  }, [apiRef, getBaseCellParams]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'GridParamsApi');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridVisibleSortedRowIdsSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { getVisibleRows, useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\n\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n\n  return [selectionModelProp];\n};\n\nexport const selectionStateInitializer = (state, props) => {\n  var _getSelectionModelPro;\n\n  return _extends({}, state, {\n    selection: (_getSelectionModelPro = getSelectionModelPropValue(props.selectionModel)) != null ? _getSelectionModelPro : []\n  });\n};\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\n\nexport const useGridSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const propSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.selectionModel, gridSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.selectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.unstable_registerControlState({\n    stateId: 'selection',\n    propModel: propSelectionModel,\n    propOnChange: props.onSelectionModelChange,\n    stateSelector: gridSelectionStateSelector,\n    changeEvent: 'selectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableMultipleSelection,\n    disableSelectionOnClick,\n    isRowSelectable,\n    pagination,\n    paginationMode\n  } = props;\n  const canHaveMultipleSelection = !disableMultipleSelection || checkboxSelection;\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    var _lastRowToggled$curre;\n\n    let endId = id;\n    const startId = (_lastRowToggled$curre = lastRowToggled.current) != null ? _lastRowToggled$curre : id;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (isSelected) {\n      const visibleRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n\n      if (startIndex === endIndex) {\n        return;\n      }\n\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n  /**\n   * API METHODS\n   */\n\n  const setSelectionModel = React.useCallback(model => {\n    const currentModel = gridSelectionStateSelector(apiRef.current.state);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        selection: model\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const isRowSelected = React.useCallback(id => gridSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (isRowSelectable && !isRowSelectable(apiRef.current.getRowParams(id))) {\n      return;\n    }\n\n    lastRowToggled.current = id;\n\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n\n      if (isSelected) {\n        newSelection.push(id);\n      }\n\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n      if (isSelectionValid) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = isRowSelectable ? ids.filter(id => isRowSelectable(apiRef.current.getRowParams(id))) : ids;\n    let newSelection;\n\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n\n    if (isSelectionValid) {\n      apiRef.current.setSelectionModel(newSelection);\n    }\n  }, [apiRef, isRowSelectable, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`); // Using rows from all pages allow to select a range across several pages\n\n    const allPagesRowIds = gridVisibleSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionApi = {\n    selectRow,\n    selectRows,\n    selectRowRange,\n    setSelectionModel,\n    getSelectedRows,\n    isRowSelected\n  };\n  useGridApiMethod(apiRef, selectionApi, 'GridSelectionApi');\n  /**\n   * EVENTS\n   */\n\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef); // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n\n    if (hasChanged) {\n      apiRef.current.setSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey; // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (disableSelectionOnClick) {\n      return;\n    }\n\n    if (params.field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n\n    if (params.field) {\n      const column = apiRef.current.getColumn(params.field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    if (event.shiftKey && (canHaveMultipleSelection || checkboxSelection)) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableSelectionOnClick, canHaveMultipleSelection, checkboxSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      var _window$getSelection;\n\n      (_window$getSelection = window.getSelection()) == null ? void 0 : _window$getSelection.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value);\n    }\n  }, [apiRef, expandMouseRowRangeSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridVisibleSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    } // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n\n\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n\n    if (event.key.toLowerCase() === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', removeOutdatedSelection);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', handleRowSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', preventSelectionOnShift);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (propSelectionModel !== undefined) {\n      apiRef.current.setSelectionModel(propSelectionModel);\n    }\n  }, [apiRef, propSelectionModel]);\n  const isStateControlled = propSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled) {\n      return;\n    } // isRowSelectable changed\n\n\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(apiRef.current.getRowParams(id)));\n\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled]);\n  React.useEffect(() => {\n    const currentSelection = gridSelectionStateSelector(apiRef.current.state);\n\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      const {\n        rows: currentPageRows\n      } = getVisibleRows(apiRef, {\n        pagination,\n        paginationMode\n      });\n      const currentPageRowsLookup = currentPageRows.reduce((acc, {\n        id\n      }) => {\n        acc[id] = true;\n        return acc;\n      }, {});\n      const firstSelectableRow = currentSelection.find(id => {\n        let isSelectable = true;\n\n        if (isRowSelectable) {\n          isSelectable = isRowSelectable(apiRef.current.getRowParams(id));\n        }\n\n        return isSelectable && currentPageRowsLookup[id]; // Check if the row is in the current page\n      });\n      apiRef.current.setSelectionModel(firstSelectableRow !== undefined ? [firstSelectableRow] : []);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, disableMultipleSelection, isRowSelectable, pagination, paginationMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\n\nexport const useGridSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.all = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.all];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.all = columnsState.all.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridFeatureModeConstant } from '../../../models/gridFeatureMode';\nimport { isEnterKey } from '../../../utils/keyboardUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { gridRowIdsSelector, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nexport const sortingStateInitializer = (state, props) => {\n  var _ref, _props$sortModel, _props$initialState, _props$initialState$s;\n\n  const sortModel = (_ref = (_props$sortModel = props.sortModel) != null ? _props$sortModel : (_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$s = _props$initialState.sorting) == null ? void 0 : _props$initialState$s.sortModel) != null ? _ref : [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\n\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.unstable_registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n\n    if (existingIdx > -1) {\n      if (!sortItem) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    var _col$sortingOrder2;\n\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n\n    if (existing) {\n      var _col$sortingOrder;\n\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder = col.sortingOrder) != null ? _col$sortingOrder : props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort == null ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection((_col$sortingOrder2 = col.sortingOrder) != null ? _col$sortingOrder2 : props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  /**\n   * API METHODS\n   */\n\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === GridFeatureModeConstant.server) {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: gridRowIdsSelector(state, apiRef.current.instanceId)\n          })\n        });\n      }\n\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.unstable_applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((column, direction, allowMultipleSorting) => {\n    if (!column.sortable) {\n      return;\n    }\n\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = !sortItem ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndex = React.useCallback(id => apiRef.current.getSortedRowIds().indexOf(id), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIndex,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'GridSortApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n\n    if (sortModelToExport.length === 0) {\n      return prevState;\n    }\n\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    var _context$stateToResto;\n\n    const sortModel = (_context$stateToResto = context.stateToRestore.sorting) == null ? void 0 : _context$stateToResto.sortModel;\n\n    if (sortModel == null) {\n      return params;\n    }\n\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    if (!params.sortRowList) {\n      return gridRowIdsSelector(apiRef);\n    }\n\n    const rowTree = gridRowTreeSelector(apiRef);\n    return params.sortRowList(Object.values(rowTree));\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n  /**\n   * EVENTS\n   */\n\n  const handleColumnHeaderClick = React.useCallback(({\n    colDef\n  }, event) => {\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(colDef, undefined, allowMultipleSorting);\n  }, [sortColumn]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    colDef\n  }, event) => {\n    // Ctrl + Enter opens the column menu\n    if (isEnterKey(event.key) && !event.ctrlKey && !event.metaKey) {\n      sortColumn(colDef, undefined, event.shiftKey);\n    }\n  }, [sortColumn]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  /**\n   * 1ST RENDER\n   */\n\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector'; // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight; // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n\n  return undefined;\n}\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\n\n\nexport const useGridScroll = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersElementRef;\n  const windowRef = apiRef.current.windowRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridVisibleSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n\n    if (params.colIndex != null) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n\n      if (typeof params.rowIndex !== 'undefined') {\n        var _visibleSortedRows$pa;\n\n        const rowId = (_visibleSortedRows$pa = visibleSortedRows[params.rowIndex]) == null ? void 0 : _visibleSortedRows$pa.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: windowRef.current.clientWidth,\n        scrollTop: windowRef.current.scrollLeft,\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n\n    if (params.rowIndex != null) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: windowRef.current.clientHeight,\n        scrollTop: windowRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n\n    return false;\n  }, [logger, apiRef, windowRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (windowRef.current && params.left != null && colRef.current) {\n      colRef.current.scrollLeft = params.left;\n      windowRef.current.scrollLeft = params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n\n    if (windowRef.current && params.top != null) {\n      windowRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [windowRef, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!(windowRef != null && windowRef.current)) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    return {\n      top: windowRef.current.scrollTop,\n      left: windowRef.current.scrollLeft\n    };\n  }, [windowRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'GridScrollApi');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { debounce } from '@mui/material/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityRowHeightSelector, gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterStateSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortingStateSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\n\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef({}); // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const rowHeightFromDensity = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const filterState = useGridSelector(apiRef, gridFilterStateSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortingState = useGridSelector(apiRef, gridSortingStateSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const densityFactor = gridDensityFactorSelector(apiRef.current.state, apiRef.current.instanceId);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            base: rowHeightFromDensity\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n\n        };\n      }\n\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = rowHeightFromDensity;\n      const existingBaseRowHeight = sizes.base;\n\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeightFromDensity; // If the row was not measured yet use the estimated row height\n\n            baseRowHeight = estimatedRowHeight != null ? estimatedRowHeight : rowHeightFromDensity;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns null or undefined.\n          baseRowHeight = rowHeightFromUser != null ? rowHeightFromUser : rowHeightFromDensity;\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      } // We use an object to make simple to check if a height is already added or not\n\n\n      const initialHeights = {\n        base: baseRowHeight\n      };\n\n      if (getRowSpacing) {\n        var _spacing$top, _spacing$bottom;\n\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = (_spacing$top = spacing.top) != null ? _spacing$top : 0;\n        initialHeights.spacingBottom = (_spacing$bottom = spacing.bottom) != null ? _spacing$bottom : 0;\n      }\n\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      const finalRowHeight = Object.values(processedSizes).reduce((acc2, value) => acc2 + value, 0);\n      return acc + finalRowHeight;\n    }, 0);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeightFromDensity, getRowHeightProp, getRowSpacing, getEstimatedRowHeight]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.base : rowHeightFromDensity;\n  }, [rowHeightFromDensity]);\n\n  const getRowInternalSizes = rowId => {\n    var _rowsHeightLookup$cur;\n\n    return (_rowsHeightLookup$cur = rowsHeightLookup.current[rowId]) == null ? void 0 : _rowsHeightLookup$cur.sizes;\n  };\n\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.base = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta), [hydrateRowsMeta]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    } // Only trigger hydration if the value is different, otherwise we trigger a loop\n\n\n    const needsHydration = rowsHeightLookup.current[id].sizes.base !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.base = height;\n\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    var _rowsHeightLookup$cur2;\n\n    return ((_rowsHeightLookup$cur2 = rowsHeightLookup.current[id]) == null ? void 0 : _rowsHeightLookup$cur2.autoHeight) || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []); // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeightFromDensity, filterState, paginationState, sortingState, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_getLastMeasuredRowIndex: getLastMeasuredRowIndex,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_rowHasAutoHeight: rowHasAutoHeight,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'GridRowsMetaApi');\n};","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing as useGridEditing_old, editingStateInitializer as editingStateInitializer_old } from '../hooks/features/editRows/useGridEditing.old';\nimport { useGridEditing as useGridEditing_new, editingStateInitializer as editingStateInitializer_new } from '../hooks/features/editRows/useGridEditing.new';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { selectionStateInitializer, useGridSelection } from '../hooks/features/selection/useGridSelection';\nimport { useGridSelectionPreProcessors } from '../hooks/features/selection/useGridSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nexport const useDataGridComponent = props => {\n  var _props$experimentalFe, _props$experimentalFe2;\n\n  const apiRef = useGridInitialization(undefined, props);\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n\n  useGridSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n  /**\n   * Register all state initializers here.\n   */\n\n  useGridInitializeState(selectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState((_props$experimentalFe = props.experimentalFeatures) != null && _props$experimentalFe.newEditingApi ? editingStateInitializer_new : editingStateInitializer_old, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  const useGridEditing = (_props$experimentalFe2 = props.experimentalFeatures) != null && _props$experimentalFe2.newEditingApi ? useGridEditing_new : useGridEditing_old;\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  return apiRef;\n};","import * as React from 'react';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridVisibleSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\n\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   */\n\n  const goToCell = React.useCallback((colIndex, rowIndex, closestColumnToUse = 'left') => {\n    var _visibleSortedRows$ro;\n\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const rowId = (_visibleSortedRows$ro = visibleSortedRows[rowIndex]) == null ? void 0 : _visibleSortedRows$ro.id;\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n\n    logger.debug(`Navigating to cell row ${rowIndex}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const handleCellNavigationKeyDown = React.useCallback((params, event) => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!currentPage.range || !dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const visibleSortedRows = gridVisibleSortedRowEntriesSelector(apiRef);\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = visibleSortedRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = currentPage.range.firstRowIndex;\n    const lastRowIndexInPage = currentPage.range.lastRowIndex;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'Enter':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, rowIndexBefore + 1);\n          }\n\n          break;\n        }\n\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, rowIndexBefore - 1);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, rowIndexBefore, 'right');\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, rowIndexBefore, 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, rowIndexBefore, 'right');\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          const field = params.field;\n\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n\n          const colDef = params.colDef;\n\n          if (colDef && colDef.type === 'treeDataGroup') {\n            break;\n          }\n\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, nextRowIndex);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, firstRowIndexInPage);\n          } else {\n            goToCell(firstColIndex, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, lastRowIndexInPage);\n          } else {\n            goToCell(lastColIndex, rowIndexBefore);\n          }\n\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPage, goToCell, goToHeader]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    var _currentPage$range$fi, _currentPage$range, _currentPage$range$la, _currentPage$range2;\n\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return;\n    }\n\n    const viewportPageSize = apiRef.current.unstable_getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = (_currentPage$range$fi = (_currentPage$range = currentPage.range) == null ? void 0 : _currentPage$range.firstRowIndex) != null ? _currentPage$range$fi : null;\n    const lastRowIndexInPage = (_currentPage$range$la = (_currentPage$range2 = currentPage.range) == null ? void 0 : _currentPage$range2.lastRowIndex) != null ? _currentPage$range$la : null;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, firstRowIndexInPage);\n          }\n\n          break;\n        }\n\n      case 'ArrowRight':\n        {\n          if (colIndexBefore < lastColIndex) {\n            goToHeader(colIndexBefore + 1, event);\n          }\n\n          break;\n        }\n\n      case 'ArrowLeft':\n        {\n          if (colIndexBefore > firstColIndex) {\n            goToHeader(colIndexBefore - 1, event);\n          }\n\n          break;\n        }\n\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage));\n          }\n\n          break;\n        }\n\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n\n          break;\n        }\n\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPage, goToCell, goToHeader]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // Get the most recent params because the cell mode may have changed by another listener\n\n\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n\n    if (cellParams.cellMode !== GridCellModes.Edit && isNavigationKey(event.key)) {\n      apiRef.current.publishEvent('cellNavigationKeyDown', cellParams, event);\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellNavigationKeyDown', handleCellNavigationKeyDown);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const setCellColSpanInfo = React.useCallback((rowId, columnIndex, cellColSpanInfo) => {\n    const sizes = lookup.current;\n\n    if (!sizes[rowId]) {\n      sizes[rowId] = {};\n    }\n\n    sizes[rowId][columnIndex] = cellColSpanInfo;\n  }, []);\n  const getCellColSpanInfo = React.useCallback((rowId, columnIndex) => {\n    var _lookup$current$rowId;\n\n    return (_lookup$current$rowId = lookup.current[rowId]) == null ? void 0 : _lookup$current$rowId[columnIndex];\n  }, []); // Calculate `colSpan` for the cell.\n\n  const calculateCellColSpan = React.useCallback(params => {\n    const {\n      columnIndex,\n      rowId,\n      minFirstColumnIndex,\n      maxLastColumnIndex\n    } = params;\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    const columnsLength = visibleColumns.length;\n    const column = visibleColumns[columnIndex];\n    const colSpan = typeof column.colSpan === 'function' ? column.colSpan(apiRef.current.getCellParams(rowId, column.field)) : column.colSpan;\n\n    if (!colSpan || colSpan === 1) {\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan: 1,\n          width: column.computedWidth\n        }\n      });\n      return {\n        colSpan: 1\n      };\n    }\n\n    let width = column.computedWidth;\n\n    for (let j = 1; j < colSpan; j += 1) {\n      const nextColumnIndex = columnIndex + j; // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n\n      if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n        const nextColumn = visibleColumns[nextColumnIndex];\n        width += nextColumn.computedWidth;\n        setCellColSpanInfo(rowId, columnIndex + j, {\n          spannedByColSpan: true,\n          rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n          leftVisibleCellIndex: columnIndex\n        });\n      }\n\n      setCellColSpanInfo(rowId, columnIndex, {\n        spannedByColSpan: false,\n        cellProps: {\n          colSpan,\n          width\n        }\n      });\n    }\n\n    return {\n      colSpan\n    };\n  }, [apiRef, setCellColSpanInfo]); // Calculate `colSpan` for each cell in the row\n\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn\n      });\n\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [calculateCellColSpan]);\n  const columnSpanningApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo,\n    unstable_calculateColSpan: calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningApi, 'GridColumnSpanningAPI');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument } from '@mui/material/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridVisibleRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityHeaderHeightSelector } from '../density/densitySelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getColumnsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]); // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns) => new Promise(resolve => {\n    if (!fields && !allColumns) {\n      resolve();\n      return;\n    }\n\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const buildPrintWindow = React.useCallback(title => {\n    const iframeEl = document.createElement('iframe');\n    iframeEl.id = 'grid-print-window'; // Without this 'onload' event won't fire in some browsers\n\n    iframeEl.src = window.location.href;\n    iframeEl.style.position = 'absolute';\n    iframeEl.style.width = '0px';\n    iframeEl.style.height = '0px';\n    iframeEl.title = title || document.title;\n    return iframeEl;\n  }, []);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    var _printWindow$contentW, _querySelector, _querySelector2;\n\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false\n    }, options); // Some agents, such as IE11 and Enzyme (as of 2 Jun 2020) continuously call the\n    // `onload` callback. This ensures that it is only called once.\n\n\n    printWindow.onload = null;\n    const printDoc = printWindow.contentDocument || ((_printWindow$contentW = printWindow.contentWindow) == null ? void 0 : _printWindow$contentW.document);\n\n    if (!printDoc) {\n      return;\n    }\n\n    const headerHeight = gridDensityHeaderHeightSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n    const gridCloneViewport = gridClone.querySelector(`.${gridClasses.virtualScroller}`); // Expand the viewport window to prevent clipping\n\n    gridCloneViewport.style.height = 'auto';\n    gridCloneViewport.style.width = 'auto';\n    gridCloneViewport.parentElement.style.width = 'auto';\n    gridCloneViewport.parentElement.style.height = 'auto'; // Allow to overflow to not hide the border of the last row\n\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n    const columnHeaders = gridClone.querySelector(`.${gridClasses.columnHeaders}`);\n    const columnHeadersInner = columnHeaders.querySelector(`.${gridClasses.columnHeadersInner}`);\n    columnHeadersInner.style.width = '100%';\n    let gridToolbarElementHeight = ((_querySelector = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _querySelector.clientHeight) || 0;\n    let gridFooterElementHeight = ((_querySelector2 = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _querySelector2.clientHeight) || 0;\n\n    if (normalizeOptions.hideToolbar) {\n      var _gridClone$querySelec;\n\n      (_gridClone$querySelec = gridClone.querySelector(`.${gridClasses.toolbarContainer}`)) == null ? void 0 : _gridClone$querySelec.remove();\n      gridToolbarElementHeight = 0;\n    }\n\n    if (normalizeOptions.hideFooter) {\n      var _gridClone$querySelec2;\n\n      (_gridClone$querySelec2 = gridClone.querySelector(`.${gridClasses.footerContainer}`)) == null ? void 0 : _gridClone$querySelec2.remove();\n      gridFooterElementHeight = 0;\n    } // Expand container height to accommodate all rows\n\n\n    gridClone.style.height = `${rowsMeta.currentPageTotalHeight + headerHeight + gridToolbarElementHeight + gridFooterElementHeight}px`; // Remove all loaded elements from the current host\n\n    printDoc.body.innerHTML = '';\n    printDoc.body.appendChild(gridClone);\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n\n    if (normalizeOptions.copyStyles) {\n      const headStyleElements = doc.current.querySelectorAll(\"style, link[rel='stylesheet']\");\n\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n\n          if (sheet) {\n            let styleCSS = ''; // NOTE: for-of is not supported by IE\n\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    } // Trigger print\n\n\n    if (process.env.NODE_ENV !== 'test') {\n      printWindow.contentWindow.print();\n    }\n  }, [apiRef, doc]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    var _previousGridState$cu, _previousGridState$cu2;\n\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow); // Revert grid to previous state\n\n    apiRef.current.restoreState(previousGridState.current || {});\n\n    if (!((_previousGridState$cu = previousGridState.current) != null && (_previousGridState$cu2 = _previousGridState$cu.columns) != null && _previousGridState$cu2.columnVisibilityModel)) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n\n    apiRef.current.unstable_enableVirtualization(); // Clear local state\n\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI: No grid root element available.');\n    }\n\n    previousGridState.current = apiRef.current.exportState(); // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n\n    if (props.pagination) {\n      const visibleRowCount = gridVisibleRowCountSelector(apiRef);\n      apiRef.current.setPageSize(visibleRowCount);\n    }\n\n    await updateGridColumnsForPrint(options == null ? void 0 : options.fields, options == null ? void 0 : options.allColumns);\n    apiRef.current.unstable_disableVirtualization();\n    const printWindow = buildPrintWindow(options == null ? void 0 : options.fileName);\n    doc.current.body.appendChild(printWindow);\n\n    if (process.env.NODE_ENV === 'test') {\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => handlePrintWindowLoad(printWindow, options);\n\n      printWindow.contentWindow.onafterprint = () => handlePrintWindowAfterPrint(printWindow);\n    }\n  }, [props, logger, apiRef, buildPrintWindow, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'GridPrintExportApi');\n  /**\n   * PRE-PROCESSING\n   */\n\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    var _options$printOptions;\n\n    if ((_options$printOptions = options.printOptions) != null && _options$printOptions.disableToolbarButton) {\n      return initialValue;\n    }\n\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { debounce, ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector } from '../columns';\nimport { gridDensityHeaderHeightSelector, gridDensityRowHeightSelector } from '../density';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nconst isTestEnvironment = process.env.NODE_ENV === 'test';\n\nconst hasScroll = ({\n  content,\n  container,\n  scrollBarSize\n}) => {\n  const hasScrollXIfNoYScrollBar = content.width > container.width;\n  const hasScrollYIfNoXScrollBar = content.height > container.height;\n  let hasScrollX = false;\n  let hasScrollY = false;\n\n  if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n    hasScrollX = hasScrollXIfNoYScrollBar;\n    hasScrollY = content.height + (hasScrollX ? scrollBarSize : 0) > container.height; // We recalculate the scroll x to consider the size of the y scrollbar.\n\n    if (hasScrollY) {\n      hasScrollX = content.width + scrollBarSize > container.width;\n    }\n  }\n\n  return {\n    hasScrollX,\n    hasScrollY\n  };\n};\n\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(null);\n  const fullDimensionsRef = React.useRef(null);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const updateGridDimensionsRef = React.useCallback(() => {\n    var _apiRef$current$rootE;\n\n    const rootElement = (_apiRef$current$rootE = apiRef.current.rootElementRef) == null ? void 0 : _apiRef$current$rootE.current;\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n\n    if (!rootDimensionsRef.current) {\n      return;\n    }\n\n    let scrollBarSize;\n\n    if (props.scrollbarSize != null) {\n      scrollBarSize = props.scrollbarSize;\n    } else if (!columnsTotalWidth || !rootElement) {\n      scrollBarSize = 0;\n    } else {\n      const doc = ownerDocument(rootElement);\n      const scrollDiv = doc.createElement('div');\n      scrollDiv.style.width = '99px';\n      scrollDiv.style.height = '99px';\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.overflow = 'scroll';\n      scrollDiv.className = 'scrollDiv';\n      rootElement.appendChild(scrollDiv);\n      scrollBarSize = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      rootElement.removeChild(scrollDiv);\n    }\n\n    let viewportOuterSize;\n    let hasScrollX;\n    let hasScrollY;\n\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > rootDimensionsRef.current.width;\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rowsMeta.currentPageTotalHeight + (hasScrollX ? scrollBarSize : 0)\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height - headerHeight\n      };\n      const scrollInformation = hasScroll({\n        content: {\n          width: Math.round(columnsTotalWidth),\n          height: rowsMeta.currentPageTotalHeight\n        },\n        container: viewportOuterSize,\n        scrollBarSize\n      });\n      hasScrollY = scrollInformation.hasScrollY;\n      hasScrollX = scrollInformation.hasScrollX;\n    }\n\n    const viewportInnerSize = {\n      width: viewportOuterSize.width - (hasScrollY ? scrollBarSize : 0),\n      height: viewportOuterSize.height - (hasScrollX ? scrollBarSize : 0)\n    };\n    const newFullDimensions = {\n      viewportOuterSize,\n      viewportInnerSize,\n      hasScrollX,\n      hasScrollY,\n      scrollBarSize\n    };\n    const prevDimensions = fullDimensionsRef.current;\n    fullDimensionsRef.current = newFullDimensions;\n\n    if (newFullDimensions.viewportInnerSize.width !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.width) || newFullDimensions.viewportInnerSize.height !== (prevDimensions == null ? void 0 : prevDimensions.viewportInnerSize.height)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newFullDimensions.viewportInnerSize);\n    }\n  }, [apiRef, props.scrollbarSize, props.autoHeight, headerHeight, rowsMeta.currentPageTotalHeight]);\n  const resize = React.useCallback(() => {\n    updateGridDimensionsRef();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, [apiRef, updateGridDimensionsRef]);\n  const getRootDimensions = React.useCallback(() => fullDimensionsRef.current, []);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = apiRef.current.getRootDimensions();\n\n    if (!dimensions) {\n      return 0;\n    }\n\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    }); // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n\n    if (props.getRowHeight) {\n      const renderContext = apiRef.current.unstable_getRenderContext();\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / gridDensityRowHeightSelector(apiRef));\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight]);\n  const dimensionsApi = {\n    resize,\n    getRootDimensions,\n    unstable_getViewportPageSize: getViewportPageSize,\n    unstable_updateGridDimensionsRef: updateGridDimensionsRef\n  };\n  useGridApiMethod(apiRef, dimensionsApi, 'GridDimensionsApi');\n  const debounceResize = React.useMemo(() => debounce(resize, 60), [resize]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size; // jsdom has no layout capabilities\n\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n\n    if (isTestEnvironment) {\n      // We don't need to debounce the resize for tests.\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      resize();\n      isFirstSizing.current = false;\n      return;\n    }\n\n    debounceResize();\n  }, [props.autoHeight, debounceResize, logger, resize]);\n  useEnhancedEffect(() => updateGridDimensionsRef(), [updateGridDimensionsRef]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'pageSizeChange', updateGridDimensionsRef);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateGridDimensionsRef);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'cellFocusOut', props.onCellFocusOut);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'componentError', props.onError);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback(() => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {});\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'GridStatePersistenceApi');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  errorOverlayDefaultLabel: 'An error occurred.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search...',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Find column',\n  columnsPanelTextFieldPlaceholder: 'Column title',\n  columnsPanelDragIconLabel: 'Reorder column',\n  columnsPanelShowAllButton: 'Show all',\n  columnsPanelHideAllButton: 'Hide all',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Operator',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering'\n};","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchUtilityClass(slot) {\n  return generateUtilityClass('MuiSwitch', slot);\n}\nconst switchClasses = generateUtilityClasses('MuiSwitch', ['root', 'edgeStart', 'edgeEnd', 'switchBase', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium', 'checked', 'disabled', 'input', 'thumb', 'track']);\nexport default switchClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"colDef\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"colSpan\", \"disableDragEvents\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  var _rootProps$experiment;\n\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    colSpan,\n    disableDragEvents,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const focusElementRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height === 'auto' ? 'none' : height // max-height doesn't support \"auto\"\n\n  };\n  React.useLayoutEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test' && (_rootProps$experiment = rootProps.experimentalFeatures) != null && _rootProps$experiment.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.warn([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  const column = apiRef.current.getColumn(field);\n  const managesOwnFocus = column.type === 'actions';\n\n  const renderChildren = () => {\n    if (children == null) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: classes.content,\n        children: valueToRender == null ? void 0 : valueToRender.toString()\n      });\n    }\n\n    if ( /*#__PURE__*/React.isValidElement(children) && managesOwnFocus) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        focusElementRef\n      });\n    }\n\n    return children;\n  };\n\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    tabIndex: (cellMode === 'view' || !isEditable) && !managesOwnFocus ? tabIndex : -1,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseDown: publish('cellMouseDown', onMouseDown),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: renderChildren()\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  disableDragEvents: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.any,\n  hasFocus: PropTypes.bool,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.any,\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"edge\", \"size\", \"sx\"];\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, darken, lighten } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport switchClasses, { getSwitchUtilityClass } from './switchClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    edge,\n    size,\n    color,\n    checked,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`],\n    switchBase: ['switchBase', `color${capitalize(color)}`, checked && 'checked', disabled && 'disabled'],\n    thumb: ['thumb'],\n    track: ['track'],\n    input: ['input']\n  };\n  const composedClasses = composeClasses(slots, getSwitchUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst SwitchRoot = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  width: 34 + 12 * 2,\n  height: 14 + 12 * 2,\n  overflow: 'hidden',\n  padding: 12,\n  boxSizing: 'border-box',\n  position: 'relative',\n  flexShrink: 0,\n  zIndex: 0,\n  // Reset the stacking context.\n  verticalAlign: 'middle',\n  // For correct alignment with the text.\n  '@media print': {\n    colorAdjust: 'exact'\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: -8\n}, ownerState.edge === 'end' && {\n  marginRight: -8\n}, ownerState.size === 'small' && {\n  width: 40,\n  height: 24,\n  padding: 7,\n  [`& .${switchClasses.thumb}`]: {\n    width: 16,\n    height: 16\n  },\n  [`& .${switchClasses.switchBase}`]: {\n    padding: 4,\n    [`&.${switchClasses.checked}`]: {\n      transform: 'translateX(16px)'\n    }\n  }\n}));\nconst SwitchSwitchBase = styled(SwitchBase, {\n  name: 'MuiSwitch',\n  slot: 'SwitchBase',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.switchBase, {\n      [`& .${switchClasses.input}`]: styles.input\n    }, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme\n}) => ({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 1,\n  // Render above the focus ripple.\n  color: theme.vars ? theme.vars.palette.Switch.defaultColor : `${theme.palette.mode === 'light' ? theme.palette.common.white : theme.palette.grey[300]}`,\n  transition: theme.transitions.create(['left', 'transform'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${switchClasses.checked}`]: {\n    transform: 'translateX(20px)'\n  },\n  [`&.${switchClasses.disabled}`]: {\n    color: theme.vars ? theme.vars.palette.Switch.defaultDisabledColor : `${theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[600]}`\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    opacity: 0.5\n  },\n  [`&.${switchClasses.disabled} + .${switchClasses.track}`]: {\n    opacity: theme.vars ? theme.vars.opacity.switchTrackDisabled : `${theme.palette.mode === 'light' ? 0.12 : 0.2}`\n  },\n  [`& .${switchClasses.input}`]: {\n    left: '-100%',\n    width: '300%'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${switchClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main,\n    '&:hover': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${switchClasses.disabled}`]: {\n      color: theme.vars ? theme.vars.palette.Switch[`${ownerState.color}DisabledColor`] : `${theme.palette.mode === 'light' ? lighten(theme.palette[ownerState.color].main, 0.62) : darken(theme.palette[ownerState.color].main, 0.55)}`\n    }\n  },\n  [`&.${switchClasses.checked} + .${switchClasses.track}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main\n  }\n}));\nconst SwitchTrack = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Track',\n  overridesResolver: (props, styles) => styles.track\n})(({\n  theme\n}) => ({\n  height: '100%',\n  width: '100%',\n  borderRadius: 14 / 2,\n  zIndex: -1,\n  transition: theme.transitions.create(['opacity', 'background-color'], {\n    duration: theme.transitions.duration.shortest\n  }),\n  backgroundColor: theme.vars ? theme.vars.palette.common.onBackground : `${theme.palette.mode === 'light' ? theme.palette.common.black : theme.palette.common.white}`,\n  opacity: theme.vars ? theme.vars.opacity.switchTrack : `${theme.palette.mode === 'light' ? 0.38 : 0.3}`\n}));\nconst SwitchThumb = styled('span', {\n  name: 'MuiSwitch',\n  slot: 'Thumb',\n  overridesResolver: (props, styles) => styles.thumb\n})(({\n  theme\n}) => ({\n  boxShadow: (theme.vars || theme).shadows[1],\n  backgroundColor: 'currentColor',\n  width: 20,\n  height: 20,\n  borderRadius: '50%'\n}));\nconst Switch = /*#__PURE__*/React.forwardRef(function Switch(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSwitch'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    edge = false,\n    size = 'medium',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    edge,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const icon = /*#__PURE__*/_jsx(SwitchThumb, {\n    className: classes.thumb,\n    ownerState: ownerState\n  });\n\n  return /*#__PURE__*/_jsxs(SwitchRoot, {\n    className: clsx(classes.root, className),\n    sx: sx,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(SwitchSwitchBase, _extends({\n      type: \"checkbox\",\n      icon: icon,\n      checkedIcon: icon,\n      ref: ref,\n      ownerState: ownerState\n    }, other, {\n      classes: _extends({}, classes, {\n        root: classes.switchBase\n      })\n    })), /*#__PURE__*/_jsx(SwitchTrack, {\n      className: classes.track,\n      ownerState: ownerState\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense switch styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n    hideMenu,\n    open,\n    id,\n    labelledby,\n    className,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(MenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridFilterMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(column == null ? void 0 : column.field);\n  }, [apiRef, column == null ? void 0 : column.field, onClick]);\n\n  if (rootProps.disableColumnFilter || !(column != null && column.filterable)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showFilter,\n    children: apiRef.current.getLocaleText('columnMenuFilter')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridFilterMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridFilterMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst HideGridColMenuItem = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const timeoutRef = React.useRef();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true); // do not allow to hide the last column with menu\n\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n\n    onClick(event); // time for the transition\n\n    timeoutRef.current = setTimeout(() => {\n      apiRef.current.setColumnVisibility(column == null ? void 0 : column.field, false);\n    }, 100);\n  }, [apiRef, column == null ? void 0 : column.field, onClick, disabled]);\n  React.useEffect(() => {\n    return () => clearTimeout(timeoutRef.current);\n  }, []);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  if (column.hideable === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: apiRef.current.getLocaleText('columnMenuHideColumn')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? HideGridColMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { HideGridColMenuItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst SortGridMenuItems = props => {\n  const {\n    column,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n\n  if (!column || !column.sortable) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      disabled: sortDirection == null,\n      children: apiRef.current.getLocaleText('columnMenuUnsort')\n    }), /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      disabled: sortDirection === 'asc',\n      children: apiRef.current.getLocaleText('columnMenuSortAsc')\n    }), /*#__PURE__*/_jsx(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      disabled: sortDirection === 'desc',\n      children: apiRef.current.getLocaleText('columnMenuSortDesc')\n    })]\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  const {\n    hideMenu,\n    currentColumn\n  } = props;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [/*#__PURE__*/_jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }), /*#__PURE__*/_jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('columnMenu', defaultButtons, currentColumn);\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, props, {\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      onClick: hideMenu,\n      column: currentColumn\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n    className,\n    rowCount,\n    visibleRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  if (rowCount === 0) {\n    return null;\n  }\n\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n    className,\n    selectedRowCount\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: 52,\n    // Match TablePagination min height\n    borderTop: `1px solid ${borderColor}`\n  };\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridHeader = /*#__PURE__*/React.forwardRef(function GridHeader(props, ref) {\n  var _rootProps$components, _rootProps$components2;\n\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, props, {\n    children: [/*#__PURE__*/_jsx(rootProps.components.PreferencesPanel, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.preferencesPanel)), rootProps.components.Toolbar && /*#__PURE__*/_jsx(rootProps.components.Toolbar, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.toolbar))]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _preferencePanelState, _rootProps$components, _rootProps$components2;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, (_preferencePanelState = preferencePanelState.openedPanelValue) != null ? _preferencePanelState : GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.components.Panel, _extends({\n    ref: ref,\n    as: rootProps.components.BasePopper,\n    open: columns.length > 0 && preferencePanelState.open\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n    children: panelContent\n  }));\n});","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\n\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { alpha, styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (props, styles) => styles.overlay\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  height: '100%',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: alpha(theme.palette.background.default, theme.palette.action.disabledOpacity)\n}));\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _InputBase;\n\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\",\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {})),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nexport const GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  var _rootProps$rowsPerPag;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const lastPage = React.useMemo(() => Math.floor(paginationState.rowCount / (paginationState.pageSize || 1)), [paginationState.rowCount, paginationState.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const newPageSize = Number(event.target.value);\n    apiRef.current.setPageSize(newPageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((event, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _rootProps$pageSize;\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingPageSizeInRowsPerPageOptions = React.useRef(false);\n\n    if (!warnedOnceMissingPageSizeInRowsPerPageOptions.current && !rootProps.autoPageSize && !rootProps.rowsPerPageOptions.includes((_rootProps$pageSize = rootProps.pageSize) != null ? _rootProps$pageSize : paginationState.pageSize)) {\n      var _rootProps$pageSize2;\n\n      console.warn([`MUI: The page size \\`${(_rootProps$pageSize2 = rootProps.pageSize) != null ? _rootProps$pageSize2 : paginationState.pageSize}\\` is not preset in the \\`rowsPerPageOptions\\``, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingPageSizeInRowsPerPageOptions.current = true;\n    }\n  }\n\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref // @ts-ignore\n    ,\n    component: \"div\",\n    count: paginationState.rowCount,\n    page: paginationState.page <= lastPage ? paginationState.page : lastPage,\n    rowsPerPageOptions: (_rootProps$rowsPerPag = rootProps.rowsPerPageOptions) != null && _rootProps$rowsPerPag.includes(paginationState.pageSize) ? rootProps.rowsPerPageOptions : [],\n    rowsPerPage: paginationState.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\n\nfunction GridPanelContent(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nfunction GridPanelFooter(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\n\nconst isEnabled = () => true;\n\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TrapFocus, {\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled,\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root)\n    }, other))\n  });\n});\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"multiFilterOperator\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"linkOperators\", \"columnsSort\", \"deleteIconProps\", \"linkOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"children\"],\n      _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    linkOperatorInput: ['filterFormLinkOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLinkOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLinkOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLinkOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled(FormControl, {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\n\nconst getLinkOperatorLocaleKey = linkOperator => {\n  switch (linkOperator) {\n    case GridLinkOperator.And:\n      return 'filterPanelOperatorAnd';\n\n    case GridLinkOperator.Or:\n      return 'filterPanelOperatorOr';\n\n    default:\n      throw new Error('MUI: Invalid `linkOperator` property in the `GridFilterPanel`.');\n  }\n};\n\nconst getColumnLabel = col => col.headerName || col.field;\n\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  var _rootProps$components, _rootProps$components2, _baseSelectProps$nati, _rootProps$components3, _rootProps$components4, _rootProps$components5, _currentColumn$filter2;\n\n  const {\n    item,\n    hasMultipleFilters,\n    deleteFilter,\n    applyFilterChanges,\n    multiFilterOperator,\n    showMultiFilterOperators,\n    disableMultiFilterOperator,\n    applyMultiFilterOperatorChanges,\n    focusElementRef,\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    deleteIconProps = {},\n    linkOperatorInputProps = {},\n    operatorInputProps = {},\n    columnInputProps = {},\n    valueInputProps = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const hasLinkOperatorColumn = hasMultipleFilters && linkOperators.length > 0;\n  const baseFormControlProps = ((_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseFormControl) || {};\n  const baseSelectProps = ((_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSelect) || {};\n  const isBaseSelectNative = (_baseSelectProps$nati = baseSelectProps.native) != null ? _baseSelectProps$nati : true;\n  const OptionComponent = isBaseSelectNative ? 'option' : MenuItem;\n\n  const {\n    InputComponentProps\n  } = valueInputProps,\n        valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n\n  const sortedFilterableColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filterableColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      case 'desc':\n        return filterableColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n\n      default:\n        return filterableColumns;\n    }\n  }, [filterableColumns, columnsSort]);\n  const currentColumn = item.columnField ? apiRef.current.getColumn(item.columnField) : null;\n  const currentOperator = React.useMemo(() => {\n    var _currentColumn$filter;\n\n    if (!item.operatorValue || !currentColumn) {\n      return null;\n    }\n\n    return (_currentColumn$filter = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter.find(operator => operator.value === item.operatorValue);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const columnField = event.target.value;\n    const column = apiRef.current.getColumn(columnField);\n\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    } // try to keep the same operator when column change\n\n\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operatorValue) || column.filterOperators[0]; // Erase filter value if the input component is modified\n\n    const eraseItemValue = !newOperator.InputComponent || newOperator.InputComponent !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      columnField,\n      operatorValue: newOperator.value,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operatorValue = event.target.value;\n    const newOperator = currentColumn == null ? void 0 : currentColumn.filterOperators.find(operator => operator.value === operatorValue);\n    const eraseItemValue = !(newOperator != null && newOperator.InputComponent) || (newOperator == null ? void 0 : newOperator.InputComponent) !== (currentOperator == null ? void 0 : currentOperator.InputComponent);\n    applyFilterChanges(_extends({}, item, {\n      operatorValue,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLinkOperator = React.useCallback(event => {\n    const linkOperator = event.target.value === GridLinkOperator.And.toString() ? GridLinkOperator.And : GridLinkOperator.Or;\n    applyMultiFilterOperatorChanges(linkOperator);\n  }, [applyMultiFilterOperatorChanges]);\n\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator != null && currentOperator.InputComponent) {\n        var _valueRef$current;\n\n        valueRef == null ? void 0 : (_valueRef$current = valueRef.current) == null ? void 0 : _valueRef$current.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      children: /*#__PURE__*/_jsx(IconButton, {\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        children: /*#__PURE__*/_jsx(rootProps.components.FilterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      })\n    })), /*#__PURE__*/_jsx(FilterFormLinkOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, linkOperatorInputProps, {\n      sx: _extends({\n        display: hasLinkOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, linkOperatorInputProps.sx || {}),\n      className: clsx(classes.linkOperatorInput, baseFormControlProps.className, linkOperatorInputProps.className),\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLinkOperator')\n        },\n        value: multiFilterOperator,\n        onChange: changeLinkOperator,\n        disabled: !!disableMultiFilterOperator || linkOperators.length === 1,\n        native: isBaseSelectNative\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseSelect, {\n        children: linkOperators.map(linkOperator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: linkOperator.toString(),\n          children: apiRef.current.getLocaleText(getLinkOperatorLocaleKey(linkOperator))\n        }, linkOperator.toString()))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: item.columnField || '',\n        onChange: changeColumn,\n        native: isBaseSelectNative\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseSelect, {\n        children: sortedFilterableColumns.map(col => /*#__PURE__*/_jsx(OptionComponent, {\n          value: col.field,\n          children: getColumnLabel(col)\n        }, col.field))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      children: [/*#__PURE__*/_jsx(InputLabel, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperators')\n      }), /*#__PURE__*/_jsx(rootProps.components.BaseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperators'),\n        id: operatorSelectId,\n        value: item.operatorValue,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef\n      }, (_rootProps$components5 = rootProps.componentsProps) == null ? void 0 : _rootProps$components5.baseSelect, {\n        children: currentColumn == null ? void 0 : (_currentColumn$filter2 = currentColumn.filterOperators) == null ? void 0 : _currentColumn$filter2.map(operator => /*#__PURE__*/_jsx(OptionComponent, {\n          value: operator.value,\n          children: operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)\n        }, operator.value))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.components.BaseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      children: currentOperator != null && currentOperator.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef\n      }, currentOperator.InputComponentProps, InputComponentProps)) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLinkOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    columnField: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operatorValue: PropTypes.string,\n    value: PropTypes.any\n  }).isRequired,\n\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  linkOperatorInputProps: PropTypes.any,\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The current logic operator applied.\n   */\n  multiFilterOperator: PropTypes.oneOf(['and', 'or']),\n\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"linkOperators\", \"columnsSort\", \"filterFormProps\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLinkOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridAddIcon } from '../../icons';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const lastFilterRef = React.useRef(null);\n\n  const {\n    linkOperators = [GridLinkOperator.And, GridLinkOperator.Or],\n    columnsSort,\n    filterFormProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const applyFilter = React.useCallback(item => {\n    apiRef.current.upsertFilterItem(item);\n  }, [apiRef]);\n  const applyFilterLinkOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLinkOperator(operator);\n  }, [apiRef]);\n  const getDefaultItem = React.useCallback(() => {\n    const firstColumnWithOperator = filterableColumns.find(colDef => {\n      var _colDef$filterOperato;\n\n      return (_colDef$filterOperato = colDef.filterOperators) == null ? void 0 : _colDef$filterOperato.length;\n    });\n\n    if (!firstColumnWithOperator) {\n      return null;\n    }\n\n    return {\n      columnField: firstColumnWithOperator.field,\n      operatorValue: firstColumnWithOperator.filterOperators[0].value,\n      id: Math.round(Math.random() * 1e5)\n    };\n  }, [filterableColumns]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n\n    const defaultItem = getDefaultItem();\n    return defaultItem ? [defaultItem] : [];\n  }, [filterModel.items, getDefaultItem]);\n  const hasMultipleFilters = items.length > 1;\n\n  const addNewFilter = () => {\n    const defaultItem = getDefaultItem();\n\n    if (!defaultItem) {\n      return;\n    }\n\n    apiRef.current.upsertFilterItems([...items, defaultItem]);\n  };\n\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = items.length === 1;\n    apiRef.current.deleteFilterItem(item);\n\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, items.length]);\n  React.useEffect(() => {\n    if (linkOperators.length > 0 && filterModel.linkOperator && !linkOperators.includes(filterModel.linkOperator)) {\n      applyFilterLinkOperator(linkOperators[0]);\n    }\n  }, [linkOperators, applyFilterLinkOperator, filterModel.linkOperator]);\n  React.useEffect(() => {\n    if (items.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [items.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelContent, {\n      children: items.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        multiFilterOperator: filterModel.linkOperator,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLinkOperator,\n        focusElementRef: index === items.length - 1 ? lastFilterRef : null,\n        linkOperators: linkOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id))\n    }), !rootProps.disableMultipleColumnsFiltering && /*#__PURE__*/_jsx(GridPanelFooter, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(GridAddIcon, {})\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      }))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    linkOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n\n  /**\n   * Sets the available logic operators.\n   * @default [GridLinkOperator.And, GridLinkOperator.Or]\n   */\n  linkOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFilterPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\n\nfunction GridPanelHeader(props) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(className, classes.root)\n  }, other));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})(() => ({\n  padding: '8px 0px 8px 8px'\n}));\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nexport function GridColumnsPanel(props) {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    if (apiRef.current.unstable_caches.columns.isUsingColumnVisibilityModel) {\n      if (isVisible) {\n        return apiRef.current.setColumnVisibilityModel({});\n      }\n\n      return apiRef.current.setColumnVisibilityModel(Object.fromEntries(columns.filter(col => col.hideable !== false).map(col => [col.field, false])));\n    } // TODO v6: Remove\n\n\n    return apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return columns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return columns.filter(column => (column.headerName || column.field).toLowerCase().indexOf(searchValueToCheck) > -1);\n  }, [columns, searchValue]);\n  React.useEffect(() => {\n    searchInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, props, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                size: \"small\"\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false)\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true)\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { generateUtilityClasses } from '@mui/material';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _apiRef$current$colum;\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const anchorEl = (_apiRef$current$colum = apiRef.current.columnHeadersContainerElementRef) == null ? void 0 : _apiRef$current$colum.current;\n\n  if (!anchorEl) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"renderedColumns\", \"containerWidth\", \"firstColumnToRender\", \"lastColumnToRender\", \"cellFocus\", \"cellTabIndex\", \"editRowsState\", \"isLastVisible\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\"];\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst EmptyCell = ({\n  width\n}) => {\n  if (!width) {\n    return null;\n  }\n\n  const style = {\n    width\n  };\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"MuiDataGrid-cell\",\n    style: style\n  }); // TODO change to .MuiDataGrid-emptyCell or .MuiDataGrid-rowFiller\n};\n\nfunction GridRow(props) {\n  var _apiRef$current$getRo;\n\n  const {\n    selected,\n    rowId,\n    row,\n    index,\n    style: styleProp,\n    rowHeight,\n    className,\n    visibleColumns,\n    renderedColumns,\n    containerWidth,\n    firstColumnToRender,\n    cellFocus,\n    cellTabIndex,\n    editRowsState,\n    isLastVisible = false,\n    onClick,\n    onDoubleClick,\n    onMouseEnter,\n    onMouseLeave\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ariaRowIndex = index + 2; // 1 for the header row and 1 as it's 1-based\n\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowTreeDepthSelector);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const ownerState = {\n    selected,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  }, [apiRef, rowHeight, rowId]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if pageSize=5 and page=1. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      apiRef.current.unstable_setLastMeasuredRowIndex(index - currentPage.range.firstRowIndex);\n    }\n\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    // The target is not an element when triggered by a Select inside the cell\n    // See https://github.com/mui/material-ui/issues/10534\n    if (event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell == null ? void 0 : cell.getAttribute('data-field'); // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      } // User opened a detail panel\n\n\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      } // User reorders a row\n\n\n      if (field === '__reorder__') {\n        return;\n      } // User is editing a cell\n\n\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      } // User clicked a button from the \"actions\" column type\n\n\n      const column = apiRef.current.getColumn(field);\n\n      if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n\n  const style = _extends({}, styleProp, {\n    maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n    // max-height doesn't support \"auto\"\n    minHeight: rowHeight\n  });\n\n  const sizes = apiRef.current.unstable_getRowInternalSizes(rowId);\n\n  if (sizes != null && sizes.spacingTop) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n    style[property] = sizes.spacingTop;\n  }\n\n  if (sizes != null && sizes.spacingBottom) {\n    const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n    style[property] = sizes.spacingBottom;\n  }\n\n  let rowClassName = null;\n\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - currentPage.range.firstRowIndex;\n\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n\n    rowClassName = rootProps.getRowClassName(rowParams);\n  }\n\n  const cells = [];\n\n  for (let i = 0; i < renderedColumns.length; i += 1) {\n    const column = renderedColumns[i];\n    const indexRelativeToAllColumns = firstColumnToRender + i;\n    const isLastColumn = indexRelativeToAllColumns === visibleColumns.length - 1;\n    const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n    const showRightBorder = !isLastColumn ? rootProps.showCellRightBorder : !removeLastBorderRight && rootProps.disableExtendRowFullWidth;\n    const cellParams = apiRef.current.getCellParams(rowId, column.field);\n    const classNames = [];\n    const disableDragEvents = rootProps.disableColumnReorder && column.disableReorder || !rootProps.rowReordering && !!sortModel.length && treeDepth > 1 && Object.keys(editRowsState).length > 0;\n\n    if (column.cellClassName) {\n      classNames.push(clsx(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName));\n    }\n\n    const editCellState = editRowsState[rowId] ? editRowsState[rowId][column.field] : null;\n    let content = null;\n\n    if (editCellState == null && column.renderCell) {\n      var _rootProps$classes;\n\n      content = column.renderCell(_extends({}, cellParams, {\n        api: apiRef.current\n      })); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--withRenderer'], (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes['cell--withRenderer']));\n    }\n\n    if (editCellState != null && column.renderEditCell) {\n      var _rootProps$classes2;\n\n      let updatedRow = row;\n\n      if (apiRef.current.unstable_getRowWithUpdatedValues) {\n        // Only the new editing API has this method\n        updatedRow = apiRef.current.unstable_getRowWithUpdatedValues(rowId, column.field);\n      }\n\n      const params = _extends({}, cellParams, {\n        row: updatedRow\n      }, editCellState, {\n        api: apiRef.current\n      });\n\n      content = column.renderEditCell(params); // TODO move to GridCell\n\n      classNames.push(clsx(gridClasses['cell--editing'], (_rootProps$classes2 = rootProps.classes) == null ? void 0 : _rootProps$classes2['cell--editing']));\n    }\n\n    if (rootProps.getCellClassName) {\n      // TODO move to GridCell\n      classNames.push(rootProps.getCellClassName(cellParams));\n    }\n\n    const hasFocus = cellFocus !== null && cellFocus.id === rowId && cellFocus.field === column.field;\n    const tabIndex = cellTabIndex !== null && cellTabIndex.id === rowId && cellTabIndex.field === column.field && cellParams.cellMode === 'view' ? 0 : -1;\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n\n    if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n      var _rootProps$components;\n\n      const {\n        colSpan,\n        width\n      } = cellColSpanInfo.cellProps;\n      cells.push( /*#__PURE__*/_jsx(rootProps.components.Cell, _extends({\n        value: cellParams.value,\n        field: column.field,\n        width: width,\n        rowId: rowId,\n        height: rowHeight,\n        showRightBorder: showRightBorder,\n        formattedValue: cellParams.formattedValue,\n        align: column.align || 'left',\n        cellMode: cellParams.cellMode,\n        colIndex: indexRelativeToAllColumns,\n        isEditable: cellParams.isEditable,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        className: clsx(classNames),\n        colSpan: colSpan,\n        disableDragEvents: disableDragEvents\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.cell, {\n        children: content\n      }), column.field));\n    }\n  }\n\n  const emptyCellWidth = containerWidth - columnsTotalWidth;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(rowClassName, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style,\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave)\n  }, other, {\n    children: [cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  cellFocus: PropTypes.object,\n  cellTabIndex: PropTypes.object,\n  containerWidth: PropTypes.number.isRequired,\n  editRowsState: PropTypes.object.isRequired,\n  firstColumnToRender: PropTypes.number.isRequired,\n\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isLastVisible: PropTypes.bool,\n  lastColumnToRender: PropTypes.number.isRequired,\n  renderedColumns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  row: PropTypes.any.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n    sortingOrder\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.components.ColumnSortedAscendingIcon : rootProps.components.ColumnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"message\", \"hasError\", \"errorInfo\"];\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDensityRowHeightSelector } from '../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// TODO v6: rename to GridErrorOverlay\nexport const ErrorOverlay = /*#__PURE__*/React.forwardRef(function ErrorOverlay(props, ref) {\n  const {\n    message\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const defaultLabel = apiRef.current.getLocaleText('errorOverlayDefaultLabel');\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    sx: {\n      width: '100%',\n      minHeight: 2 * rowHeight\n    }\n  }, other, {\n    children: message || defaultLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUISwitch from '@mui/material/Switch';\nimport MUIButton from '@mui/material/Button';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport { GridArrowDownwardIcon, GridArrowUpwardIcon, GridCell, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridColumnMenu, GridColumnsPanel, GridFilterAltIcon, GridFilterListIcon, GridFilterPanel, GridFooter, GridHeader, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridPreferencesPanel, GridRow, GridSaveAltIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridMoreVertIcon, GridExpandMoreIcon, GridKeyboardArrowRight, GridAddIcon, GridRemoveIcon, GridDragIcon, GridColumnHeaderFilterIconButton, GridSearchIcon } from '../components';\nimport { GridColumnUnsortedIcon } from '../components/columnHeaders/GridColumnUnsortedIcon';\nimport { ErrorOverlay } from '../components/ErrorOverlay';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nconst DEFAULT_GRID_ICON_SLOTS_COMPONENTS = {\n  BooleanCellTrueIcon: GridCheckIcon,\n  BooleanCellFalseIcon: GridCloseIcon,\n  ColumnMenuIcon: GridTripleDotsVerticalIcon,\n  OpenFilterButtonIcon: GridFilterListIcon,\n  FilterPanelDeleteIcon: GridCloseIcon,\n  ColumnFilteredIcon: GridFilterAltIcon,\n  ColumnSelectorIcon: GridColumnIcon,\n  ColumnUnsortedIcon: GridColumnUnsortedIcon,\n  ColumnSortedAscendingIcon: GridArrowUpwardIcon,\n  ColumnSortedDescendingIcon: GridArrowDownwardIcon,\n  ColumnResizeIcon: GridSeparatorIcon,\n  DensityCompactIcon: GridViewHeadlineIcon,\n  DensityStandardIcon: GridTableRowsIcon,\n  DensityComfortableIcon: GridViewStreamIcon,\n  ExportIcon: GridSaveAltIcon,\n  MoreActionsIcon: GridMoreVertIcon,\n  TreeDataCollapseIcon: GridExpandMoreIcon,\n  TreeDataExpandIcon: GridKeyboardArrowRight,\n  GroupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  GroupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  DetailPanelExpandIcon: GridAddIcon,\n  DetailPanelCollapseIcon: GridRemoveIcon,\n  RowReorderIcon: GridDragIcon,\n  QuickFilterIcon: GridSearchIcon,\n  QuickFilterClearIcon: GridCloseIcon\n};\n/**\n * TODO: Differentiate community and pro value and interface\n */\n\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, DEFAULT_GRID_ICON_SLOTS_COMPONENTS, {\n  BaseCheckbox: MUICheckbox,\n  BaseTextField: MUITextField,\n  BaseFormControl: MUIFormControl,\n  BaseSelect: MUISelect,\n  BaseSwitch: MUISwitch,\n  BaseButton: MUIButton,\n  BaseTooltip: MUITooltip,\n  BasePopper: MUIPopper,\n  Cell: GridCell,\n  ColumnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  ColumnMenu: GridColumnMenu,\n  ErrorOverlay,\n  Footer: GridFooter,\n  Header: GridHeader,\n  Toolbar: null,\n  PreferencesPanel: GridPreferencesPanel,\n  LoadingOverlay: GridLoadingOverlay,\n  NoResultsOverlay: GridNoResultsOverlay,\n  NoRowsOverlay: GridNoRowsOverlay,\n  Pagination: GridPagination,\n  FilterPanel: GridFilterPanel,\n  ColumnsPanel: GridColumnsPanel,\n  Panel: GridPanel,\n  Row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Badge from '@mui/material/Badge';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderFilterIconButton(props) {\n  var _rootProps$components;\n\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel();\n    }\n\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick]);\n\n  if (!counter) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(rootProps.components.ColumnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  });\n\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS, GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { GridDensityTypes, GridEditModes, GridFeatureModeConstant } from '../models';\nconst DATA_GRID_FORCED_PROPS = {\n  apiRef: undefined,\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  disableMultipleSelection: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  disableColumnResize: true,\n  signature: 'DataGrid'\n};\nexport const MAX_PAGE_SIZE = 100;\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\n\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBuffer: 3,\n  rowBuffer: 3,\n  columnThreshold: 3,\n  rowThreshold: 3,\n  density: GridDensityTypes.Standard,\n  disableExtendRowFullWidth: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleSelection: false,\n  disableMultipleColumnsSorting: false,\n  disableSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: GridFeatureModeConstant.client,\n  headerHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: GridFeatureModeConstant.client,\n  rowHeight: 52,\n  rowsPerPageOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellRightBorder: false,\n  showColumnRightBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: GridFeatureModeConstant.client,\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false\n};\nexport const useDataGridProps = inProps => {\n  if (inProps.pageSize > MAX_PAGE_SIZE) {\n    throw new Error(`'props.pageSize' cannot exceed 100 in DataGrid.`);\n  }\n\n  const themedProps = useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  });\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const components = React.useMemo(() => {\n    const overrides = themedProps.components;\n\n    if (!overrides) {\n      return _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS);\n    }\n\n    const mergedComponents = {};\n    Object.entries(DATA_GRID_DEFAULT_SLOTS_COMPONENTS).forEach(([key, defaultComponent]) => {\n      mergedComponents[key] = overrides[key] === undefined ? defaultComponent : overrides[key];\n    });\n    return mergedComponents;\n  }, [themedProps.components]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    components\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, components]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  overflow: 'auto',\n  // See https://github.com/mui/mui-x/issues/4360\n  position: 'relative',\n  '@media print': {\n    overflow: 'hidden'\n  }\n});\nconst GridVirtualScroller = /*#__PURE__*/React.forwardRef(function GridVirtualScroller(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    overflowedContent\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const {\n    className,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    overflowedContent: !rootProps.autoHeight && (style == null ? void 0 : style.minHeight) === 'auto'\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    style: style\n  }, other));\n});\nexport { GridVirtualScrollerContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridDensityRowHeightSelector } from '../density/densitySelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridEditRowsStateSelector } from '../editRows/gridEditRowsSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { clamp } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../selection/gridSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils'; // Uses binary search to avoid looping through all possible positions\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function binarySearch(offset, positions, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const itemOffset = positions[pivot];\n  return offset <= itemOffset ? binarySearch(offset, positions, sliceStart, pivot) : binarySearch(offset, positions, pivot + 1, sliceEnd);\n}\n\nfunction exponentialSearch(offset, positions, index) {\n  let interval = 1;\n\n  while (index < positions.length && positions[index] < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return binarySearch(offset, positions, Math.floor(index / 2), Math.min(index, positions.length));\n}\n\nexport const getRenderableIndexes = ({\n  firstIndex,\n  lastIndex,\n  buffer,\n  minFirstIndex,\n  maxLastIndex\n}) => {\n  return [clamp(firstIndex - buffer, minFirstIndex, maxLastIndex), clamp(lastIndex + buffer, minFirstIndex, maxLastIndex)];\n};\nexport const useGridVirtualScroller = props => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const {\n    ref,\n    disableVirtualization,\n    onRenderZonePositioning,\n    renderZoneMinColumnIndex = 0,\n    renderZoneMaxColumnIndex = visibleColumns.length,\n    getRowProps\n  } = props;\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const rowHeight = useGridSelector(apiRef, gridDensityRowHeightSelector);\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const renderZoneRef = React.useRef(null);\n  const rootRef = React.useRef(null);\n  const handleRef = useForkRef(ref, rootRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const scrollPosition = React.useRef({\n    top: 0,\n    left: 0\n  });\n  const [containerWidth, setContainerWidth] = React.useState(null);\n  const prevTotalWidth = React.useRef(columnsTotalWidth);\n  const getNearestIndexToRender = React.useCallback(offset => {\n    const lastMeasuredIndex = Math.max(0, apiRef.current.unstable_getLastMeasuredRowIndex());\n    const allRowsMeasured = lastMeasuredIndex === Infinity;\n\n    if (allRowsMeasured || rowsMeta.positions[lastMeasuredIndex] >= offset) {\n      // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n      // were measured, then use a binary search because it's faster.\n      return binarySearch(offset, rowsMeta.positions);\n    } // Otherwise, use an exponential search.\n    // If rows have \"auto\" as height, their positions will be based on estimated heights.\n    // In this case, we can skip several steps until we find a position higher than the offset.\n    // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n\n\n    return exponentialSearch(offset, rowsMeta.positions, lastMeasuredIndex);\n  }, [apiRef, rowsMeta.positions]);\n  const computeRenderContext = React.useCallback(() => {\n    if (disableVirtualization) {\n      return {\n        firstRowIndex: 0,\n        lastRowIndex: currentPage.rows.length,\n        firstColumnIndex: 0,\n        lastColumnIndex: visibleColumns.length\n      };\n    }\n\n    const {\n      top,\n      left\n    } = scrollPosition.current; // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n\n    const firstRowIndex = Math.min(getNearestIndexToRender(top), rowsMeta.positions.length - 1);\n    const lastRowIndex = rootProps.autoHeight ? firstRowIndex + currentPage.rows.length : getNearestIndexToRender(top + rootRef.current.clientHeight);\n    let hasRowWithAutoHeight = false;\n    let firstColumnIndex = 0;\n    let lastColumnIndex = columnPositions.length;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: firstRowIndex,\n      lastIndex: lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = currentPage.rows[i];\n      hasRowWithAutoHeight = apiRef.current.unstable_rowHasAutoHeight(row.id);\n    }\n\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(left, columnPositions);\n      lastColumnIndex = binarySearch(left + containerWidth, columnPositions);\n    }\n\n    return {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }, [disableVirtualization, getNearestIndexToRender, rowsMeta.positions.length, rootProps.autoHeight, rootProps.rowBuffer, currentPage.rows, columnPositions, visibleColumns.length, apiRef, containerWidth]);\n  React.useEffect(() => {\n    if (disableVirtualization) {\n      renderZoneRef.current.style.transform = `translate3d(0px, 0px, 0px)`;\n    } else {\n      // TODO a scroll reset should not be necessary\n      rootRef.current.scrollLeft = 0;\n      rootRef.current.scrollTop = 0;\n    }\n  }, [disableVirtualization]);\n  React.useEffect(() => {\n    setContainerWidth(rootRef.current.clientWidth);\n  }, [rowsMeta.currentPageTotalHeight]);\n  const handleResize = React.useCallback(() => {\n    if (rootRef.current) {\n      setContainerWidth(rootRef.current.clientWidth);\n    }\n  }, []);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  const updateRenderZonePosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const [initialFirstColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: renderZoneMinColumnIndex,\n      maxLastIndex: renderZoneMaxColumnIndex,\n      buffer: rootProps.columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const top = gridRowsMetaSelector(apiRef.current.state).positions[firstRowToRender];\n    const left = gridColumnPositionsSelector(apiRef)[firstColumnToRender]; // Call directly the selector because it might be outdated when this method is called\n\n    renderZoneRef.current.style.transform = `translate3d(${left}px, ${top}px, 0px)`;\n\n    if (typeof onRenderZonePositioning === 'function') {\n      onRenderZonePositioning({\n        top,\n        left\n      });\n    }\n  }, [apiRef, currentPage.rows, onRenderZonePositioning, renderZoneMinColumnIndex, renderZoneMaxColumnIndex, rootProps.columnBuffer, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateRenderZonePosition(renderContext);\n    }\n  }, [renderContext, updateRenderZonePosition]);\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    setRenderContext(nextRenderContext);\n    prevRenderContext.current = nextRenderContext;\n  }, [setRenderContext, prevRenderContext]);\n  React.useEffect(() => {\n    if (containerWidth == null) {\n      return;\n    }\n\n    const initialRenderContext = computeRenderContext();\n    updateRenderContext(initialRenderContext);\n    const {\n      top,\n      left\n    } = scrollPosition.current;\n    const params = {\n      top,\n      left,\n      renderContext: initialRenderContext\n    };\n    apiRef.current.publishEvent('rowsScroll', params);\n  }, [apiRef, computeRenderContext, containerWidth, updateRenderContext]);\n\n  const handleScroll = event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n    scrollPosition.current.top = scrollTop;\n    scrollPosition.current.left = scrollLeft; // On iOS and macOS, negative offsets are possible when swiping past the start\n\n    if (scrollLeft < 0 || scrollTop < 0 || !prevRenderContext.current) {\n      return;\n    } // When virtualization is disabled, the context never changes during scroll\n\n\n    const nextRenderContext = disableVirtualization ? prevRenderContext.current : computeRenderContext();\n    const topRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstRowIndex - prevRenderContext.current.firstRowIndex);\n    const bottomRowsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastRowIndex - prevRenderContext.current.lastRowIndex);\n    const topColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.firstColumnIndex - prevRenderContext.current.firstColumnIndex);\n    const bottomColumnsScrolledSincePreviousRender = Math.abs(nextRenderContext.lastColumnIndex - prevRenderContext.current.lastColumnIndex);\n    const shouldSetState = topRowsScrolledSincePreviousRender >= rootProps.rowThreshold || bottomRowsScrolledSincePreviousRender >= rootProps.rowThreshold || topColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || bottomColumnsScrolledSincePreviousRender >= rootProps.columnThreshold || prevTotalWidth.current !== columnsTotalWidth; // TODO v6: rename event to a wider name, it's not only fired for row scrolling\n\n    apiRef.current.publishEvent('rowsScroll', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: shouldSetState ? nextRenderContext : prevRenderContext.current\n    }, event);\n\n    if (shouldSetState) {\n      // Prevents batching render context changes\n      ReactDOM.flushSync(() => {\n        updateRenderContext(nextRenderContext);\n      });\n      prevTotalWidth.current = columnsTotalWidth;\n    }\n  };\n\n  const handleWheel = event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  };\n\n  const handleTouchMove = event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  };\n\n  const getRows = (params = {\n    renderContext\n  }) => {\n    const {\n      renderContext: nextRenderContext,\n      minFirstColumn = renderZoneMinColumnIndex,\n      maxLastColumn = renderZoneMaxColumnIndex,\n      availableSpace = containerWidth,\n      ignoreAutoHeight\n    } = params;\n\n    if (!currentPage.range || !nextRenderContext || availableSpace == null) {\n      return null;\n    }\n\n    const rowBuffer = !disableVirtualization ? rootProps.rowBuffer : 0;\n    const columnBuffer = !disableVirtualization ? rootProps.columnBuffer : 0;\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rowBuffer\n    });\n    const renderedRows = [];\n\n    for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n      const row = currentPage.rows[i];\n      renderedRows.push(row);\n      apiRef.current.unstable_calculateColSpan({\n        rowId: row.id,\n        minFirstColumn,\n        maxLastColumn\n      });\n    }\n\n    const [initialFirstColumnToRender, lastColumnToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstColumnIndex,\n      lastIndex: nextRenderContext.lastColumnIndex,\n      minFirstIndex: minFirstColumn,\n      maxLastIndex: maxLastColumn,\n      buffer: columnBuffer\n    });\n    const firstColumnToRender = getFirstNonSpannedColumnToRender({\n      firstColumnToRender: initialFirstColumnToRender,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    const rows = [];\n\n    for (let i = 0; i < renderedRows.length; i += 1) {\n      var _rootProps$components;\n\n      const {\n        id,\n        model\n      } = renderedRows[i];\n      const lastVisibleRowIndex = firstRowToRender + i === currentPage.rows.length - 1;\n      const baseRowHeight = !apiRef.current.unstable_rowHasAutoHeight(id) || ignoreAutoHeight ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else if (typeof rootProps.isRowSelectable === 'function') {\n        isSelected = rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n      } else {\n        isSelected = true;\n      }\n\n      rows.push( /*#__PURE__*/_jsx(rootProps.components.Row, _extends({\n        row: model,\n        rowId: id,\n        rowHeight: baseRowHeight,\n        cellFocus: cellFocus // TODO move to inside the row\n        ,\n        cellTabIndex: cellTabIndex // TODO move to inside the row\n        ,\n        editRowsState: editRowsState // TODO move to inside the row\n        ,\n        renderedColumns: renderedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnToRender: firstColumnToRender,\n        lastColumnToRender: lastColumnToRender,\n        selected: isSelected,\n        index: currentPage.range.firstRowIndex + firstRowToRender + i,\n        containerWidth: availableSpace,\n        isLastVisible: lastVisibleRowIndex\n      }, typeof getRowProps === 'function' ? getRowProps(id, model) : {}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.row), id));\n    }\n\n    return rows;\n  };\n\n  const needsHorizontalScrollbar = containerWidth && columnsTotalWidth > containerWidth;\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(rowsMeta.currentPageTotalHeight, 1);\n    let shouldExtendContent = false;\n\n    if (rootRef != null && rootRef.current && height <= (rootRef == null ? void 0 : rootRef.current.clientHeight)) {\n      shouldExtendContent = true;\n    }\n\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height,\n      minHeight: shouldExtendContent ? '100%' : 'auto'\n    };\n\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.height = 2 * rowHeight; // Give room to show the overlay when there's no row.\n    }\n\n    return size;\n  }, [rootRef, columnsTotalWidth, rowsMeta.currentPageTotalHeight, currentPage.rows.length, needsHorizontalScrollbar, rootProps.autoHeight, rowHeight]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n\n  if (rootProps.autoHeight && currentPage.rows.length === 0) {\n    contentSize.height = 2 * rowHeight; // Give room to show the overlay when there no rows.\n  }\n\n  const rootStyle = {};\n\n  if (!needsHorizontalScrollbar) {\n    rootStyle.overflowX = 'hidden';\n  }\n\n  if (rootProps.autoHeight) {\n    rootStyle.overflowY = 'hidden';\n  }\n\n  const getRenderContext = React.useCallback(() => {\n    return prevRenderContext.current;\n  }, []);\n  apiRef.current.unstable_getRenderContext = getRenderContext;\n  return {\n    renderContext,\n    updateRenderZonePosition,\n    getRows,\n    getRootProps: (_ref = {}) => {\n      let {\n        style = {}\n      } = _ref,\n          other = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n      return _extends({\n        ref: handleRef,\n        onScroll: handleScroll,\n        onWheel: handleWheel,\n        onTouchMove: handleTouchMove,\n        style: _extends({}, style, rootStyle)\n      }, other);\n    },\n    getContentProps: ({\n      style = {}\n    } = {}) => ({\n      style: _extends({}, style, contentSize)\n    }),\n    getRenderZoneProps: () => ({\n      ref: renderZoneRef\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"disableVirtualization\"];\nimport * as React from 'react';\nimport { GridVirtualScroller } from './virtualization/GridVirtualScroller';\nimport { GridVirtualScrollerContent } from './virtualization/GridVirtualScrollerContent';\nimport { GridVirtualScrollerRenderZone } from './virtualization/GridVirtualScrollerRenderZone';\nimport { useGridVirtualScroller } from '../hooks/features/virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DataGridVirtualScroller = /*#__PURE__*/React.forwardRef(function DataGridVirtualScroller(props, ref) {\n  const {\n    className,\n    disableVirtualization\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    getContentProps,\n    getRenderZoneProps,\n    getRows\n  } = useGridVirtualScroller({\n    ref,\n    disableVirtualization\n  });\n  return /*#__PURE__*/_jsx(GridVirtualScroller, _extends({\n    className: className\n  }, getRootProps(other), {\n    children: /*#__PURE__*/_jsx(GridVirtualScrollerContent, _extends({}, getContentProps(), {\n      children: /*#__PURE__*/_jsx(GridVirtualScrollerRenderZone, _extends({}, getRenderZoneProps(), {\n        children: getRows()\n      }))\n    }))\n  }));\n});\nexport { DataGridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport Badge from '@mui/material/Badge';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n\n  if (direction === 'asc') {\n    Icon = icons.ColumnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.ColumnSortedDescendingIcon;\n  } else {\n    Icon = icons.ColumnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\n\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.components, direction, classes.icon, sortingOrder);\n\n  if (!iconElement) {\n    return null;\n  }\n\n  const iconButton = /*#__PURE__*/_jsx(IconButton, {\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    children: iconElement\n  });\n\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\n\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})(({\n  theme\n}) => ({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: theme.typography.fontWeightMedium\n}));\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\n\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  var _rootProps$components;\n\n  const {\n    label,\n    description,\n    columnWidth\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  React.useEffect(() => {\n    if (!description && titleRef && titleRef.current) {\n      const isOver = isOverflown(titleRef.current);\n\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [titleRef, columnWidth, description, label]);\n  return /*#__PURE__*/_jsx(rootProps.components.BaseTooltip, _extends({\n    title: description || tooltip\n  }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides;\n\n(function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n})(GridColumnHeaderSeparatorSides || (GridColumnHeaderSeparatorSides = {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n    height,\n    side = GridColumnHeaderSeparatorSides.Right\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnRightBorder ? 0 : 1\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\n\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    column,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(column.field);\n  }, [apiRef, column.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(IconButton, {\n      ref: iconButtonRef,\n      tabIndex: -1,\n      className: classes.button,\n      \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      size: \"small\",\n      onClick: handleMenuIconClick,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      \"aria-controls\": columnMenuId,\n      id: columnMenuButtonId,\n      children: /*#__PURE__*/_jsx(rootProps.components.ColumnMenuIcon, {\n        fontSize: \"small\"\n      })\n    })\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    column,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    filterItemsCounter\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0; // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n\n  const isColumnNumeric = column.type === 'number';\n  const slots = {\n    root: ['columnHeader', column.headerAlign === 'left' && 'columnHeader--alignLeft', column.headerAlign === 'center' && 'columnHeader--alignCenter', column.headerAlign === 'right' && 'columnHeader--alignRight', column.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', showRightBorder && 'withBorder'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nfunction GridColumnHeaderItem(props) {\n  var _apiRef$current$getRo, _column$sortingOrder, _rootProps$components, _column$headerName, _rootProps$components2;\n\n  const {\n    column,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLastColumn,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    extendRowFullWidth,\n    disableReorder,\n    separatorSide\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const {\n    hasScrollX,\n    hasScrollY\n  } = (_apiRef$current$getRo = apiRef.current.getRootDimensions()) != null ? _apiRef$current$getRo : {\n    hasScrollX: false,\n    hasScrollY: false\n  };\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !column.disableReorder, [rootProps.disableColumnReorder, disableReorder, column.disableReorder]);\n  let headerComponent = null;\n\n  if (column.renderHeader) {\n    headerComponent = column.renderHeader(apiRef.current.getColumnHeaderParams(column.field));\n  }\n\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    }\n\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(column.field), event);\n  }, [apiRef, column.field]);\n  const mouseEventsHandlers = {\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  };\n  const draggableEventHandlers = isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : null;\n  const removeLastBorderRight = isLastColumn && hasScrollX && !hasScrollY;\n  const showRightBorder = !isLastColumn ? rootProps.showColumnRightBorder : !removeLastBorderRight && !extendRowFullWidth;\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const width = column.computedWidth;\n  let ariaSort = 'none';\n\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !column.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    column: column,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n\n  const sortingOrder = (_column$sortingOrder = column.sortingOrder) != null ? _column$sortingOrder : rootProps.sortingOrder;\n\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.components.ColumnHeaderFilterIconButton, _extends({\n      field: column.field,\n      counter: filterItemsCounter\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.columnHeaderFilterIconButton)), column.sortable && !column.hideSortIcons && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder\n    })]\n  });\n\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus == null ? void 0 : elementToFocus.focus();\n      apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof column.headerClassName === 'function' ? column.headerClassName({\n    field: column.field,\n    colDef: column\n  }) : column.headerClassName;\n  const label = (_column$headerName = column.headerName) != null ? _column$headerName : column.field;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: headerCellRef,\n    className: clsx(classes.root, headerClassName),\n    \"data-field\": column.field,\n    style: {\n      width,\n      minWidth: width,\n      maxWidth: width\n    },\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": column.renderHeader && headerComponent == null ? label : undefined\n  }, mouseEventsHandlers, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable\n    }, draggableEventHandlers, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: column.renderHeader ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: column.description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, {\n      resizable: !rootProps.disableColumnResize && !!column.resizable,\n      resizing: isResizing,\n      height: headerHeight,\n      onMouseDown: publish('columnSeparatorMouseDown'),\n      side: separatorSide\n    }), /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n      columnMenuId: columnMenuId,\n      columnMenuButtonId: columnMenuButtonId,\n      field: column.field,\n      open: columnMenuOpen,\n      target: iconButtonRef.current,\n      ContentComponent: rootProps.components.ColumnMenu,\n      contentComponentProps: (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.columnMenu,\n      onExited: handleExited\n    })]\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colIndex: PropTypes.number.isRequired,\n  column: PropTypes.object.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  extendRowFullWidth: PropTypes.bool.isRequired,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLastColumn: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nexport { GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { useForkRef } from '@mui/material/utils';\nimport { defaultMemoize } from 'reselect';\nimport { useGridApiContext } from '../../utils/useGridApiContext';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from '../columns/gridColumnsSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector } from '../focus/gridFocusStateSelector';\nimport { gridDensityHeaderHeightSelector } from '../density/densitySelector';\nimport { gridFilterActiveItemsLookupSelector } from '../filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnMenuSelector } from '../columnMenu/columnMenuSelector';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isUIEvent(event) {\n  return !!event.target;\n}\n\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]); // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n\n    if (!innerRef.current) {\n      return;\n    } // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n\n\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n\n    prevScrollLeft.current = left; // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n\n    let canUpdateInnerPosition = false;\n\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    } // Pass directly the render context to avoid waiting for the next render\n\n\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScroll);\n\n  const getColumns = (params, other = {}) => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n\n    if (!nextRenderContext) {\n      return null;\n    }\n\n    const columns = [];\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const column = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const hasTabbableElement = !(tabIndexState === null && cellTabIndexState === null);\n      const tabIndex = tabIndexState !== null && tabIndexState.field === column.field || isFirstColumn && !hasTabbableElement ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === column.field;\n      const open = columnMenuState.open && columnMenuState.field === column.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[column.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[column.field] && filterColumnLookup[column.field].length,\n        headerHeight: headerHeight,\n        isDragging: column.field === dragCol,\n        column: column,\n        colIndex: columnIndex,\n        isResizing: resizeCol === column.field,\n        isLastColumn: columnIndex === visibleColumns.length - 1,\n        extendRowFullWidth: !rootProps.disableExtendRowFullWidth,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), column.field));\n    }\n\n    return columns;\n  };\n\n  const rootStyle = {\n    minHeight: headerHeight,\n    maxHeight: headerHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumns,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      'aria-rowindex': 1,\n      role: 'row'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../hooks/features/density/densitySelector';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\n\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = React.useRef();\n  const [dragging, setDragging] = React.useState(false);\n  const height = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const rootProps = useGridRootProps();\n\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const handleScrolling = React.useCallback(newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n  }, []);\n  const handleDragOver = React.useCallback(event => {\n    let offset;\n\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI: Wrong drag direction');\n    }\n\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n    clearTimeout(timeout.current); // Avoid freeze and inertia.\n\n    timeout.current = setTimeout(() => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  }, [scrollDirection, apiRef]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timeout.current);\n    };\n  }, []);\n  const toggleDragging = React.useCallback(() => {\n    setDragging(prevDragging => !prevDragging);\n  }, []);\n  useGridApiEventHandler(apiRef, 'rowsScroll', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', toggleDragging);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', toggleDragging);\n  return dragging ? /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    onDragOver: handleDragOver,\n    style: {\n      height\n    }\n  }) : null;\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = /*#__PURE__*/React.memo(GridScrollAreaRaw);\nexport { GridScrollArea };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled, alpha, lighten, darken } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})(({\n  theme\n}) => {\n  const borderColor = theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68);\n  return {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    overflow: 'hidden',\n    display: 'flex',\n    alignItems: 'center',\n    borderBottom: `1px solid ${borderColor}`,\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  };\n});\nexport const GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"isDragging\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    isDragging,\n    hasScrollX,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeadersInner', isDragging && 'columnHeaderDropZone', hasScrollX && 'columnHeadersInner--scrollable']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnHeadersInnerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'columnHeadersInner',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses.columnHeaderDropZone}`]: styles.columnHeaderDropZone\n  }, styles.columnHeadersInner]\n})(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  [`&.${gridClasses.columnHeaderDropZone} .${gridClasses.columnHeaderDraggableContainer}`]: {\n    cursor: 'move'\n  },\n  [`&.${gridClasses['columnHeadersInner--scrollable']} .${gridClasses.columnHeader}:last-child`]: {\n    borderRight: 'none'\n  }\n}));\nexport const GridColumnHeadersInner = /*#__PURE__*/React.forwardRef(function GridColumnHeadersInner(props, ref) {\n  var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n  const {\n    isDragging,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    isDragging,\n    hasScrollX: (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.hasScrollX) != null ? _apiRef$current$getRo : false,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridColumnHeadersInnerRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root)\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"innerRef\", \"className\"];\nimport * as React from 'react';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridScrollArea } from './GridScrollArea';\nimport { GridColumnHeaders } from './columnHeaders/GridColumnHeaders';\nimport { GridColumnHeadersInner } from './columnHeaders/GridColumnHeadersInner';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const DataGridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnsHeader(props, ref) {\n  const {\n    innerRef\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isDragging,\n    getRootProps,\n    getInnerProps,\n    getColumns\n  } = useGridColumnHeaders({\n    innerRef\n  });\n  return /*#__PURE__*/_jsxs(GridColumnHeaders, _extends({\n    ref: ref\n  }, getRootProps(other), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridColumnHeadersInner, _extends({\n      isDragging: isDragging\n    }, getInnerProps(), {\n      children: getColumns()\n    })), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    })]\n  }));\n});","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { GridBody, GridErrorHandler, GridFooterPlaceholder, GridHeaderPlaceholder, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps, MAX_PAGE_SIZE } from './useDataGridProps';\nimport { DataGridVirtualScroller } from '../components/DataGridVirtualScroller';\nimport { DataGridColumnHeaders } from '../components/DataGridColumnHeaders';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const apiRef = useDataGridComponent(props);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    apiRef: apiRef,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, {\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref,\n      children: /*#__PURE__*/_jsxs(GridErrorHandler, {\n        children: [/*#__PURE__*/_jsx(GridHeaderPlaceholder, {}), /*#__PURE__*/_jsx(GridBody, {\n          ColumnHeadersComponent: DataGridColumnHeaders,\n          VirtualScrollerComponent: DataGridVirtualScroller\n        }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n      })\n    })\n  });\n});\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The label of the grid.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * The id of the element containing a label for the grid.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the grid height is dynamic and follow the number of rows in the grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n\n  /**\n   * If `true`, the grid get a first column with a checkbox that allows to select rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Number of extra columns to be rendered before/after the visible slice.\n   * @default 3\n   */\n  columnBuffer: PropTypes.number,\n\n  /**\n   * Set of columns of type [[GridColumns]].\n   */\n  columns: chainPropTypes(PropTypes.array.isRequired, props => {\n    // @ts-ignore because otherwise `build:api` doesn't work\n    if (props.columns && props.columns.some(column => column.resizable)) {\n      return new Error([`MUI: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Number of rows from the `columnBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  columnThreshold: PropTypes.number,\n\n  /**\n   * Extend native column types with your new column types.\n   */\n  columnTypes: PropTypes.object,\n\n  /**\n   * Set the column visibility model of the grid.\n   * If defined, the grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n\n  /**\n   * Overrideable components.\n   */\n  components: PropTypes.object,\n\n  /**\n   * Overrideable components props dynamically passed to the component at rendering.\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * Set the density of the grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n\n  /**\n   * If `true`, rows will not be extended to fill the full width of the grid container.\n   * @default false\n   */\n  disableExtendRowFullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableSelectionOnClick: PropTypes.bool,\n\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n\n  /**\n   * Set the edit rows model of the grid.\n   */\n  editRowsModel: PropTypes.object,\n\n  /**\n   * An error that will turn the grid into its error state and display the error component.\n   */\n  error: PropTypes.any,\n\n  /**\n   * Features under development.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    newEditingApi: PropTypes.bool,\n    preventCommitWhileValidating: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Set the filter model of the grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      columnField: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operatorValue: PropTypes.string,\n      value: PropTypes.any\n    })).isRequired,\n    linkOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n\n  /**\n   * Set the height in pixel of the column headers in the grid.\n   * @default 56\n   */\n  headerHeight: PropTypes.number,\n\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Set the locale text of the grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/grid/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"debug\"\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the cell changes are committed.\n   * @param {GridCellEditCommitParams} params With all properties from [[GridCellEditCommitParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when a cell loses focus.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellFocusOut: PropTypes.func,\n\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containig which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n\n  /**\n   * Callback fired when a column visibility changes.\n   * Only works when no `columnVisibilityModel` is provided and if we change the visibility of a single column at a time.\n   * @param {GridColumnVisibilityChangeParams} params With all properties from [[GridColumnVisibilityChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated Use `onColumnVisibilityModelChange` instead.\n   */\n  onColumnVisibilityChange: PropTypes.func,\n\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the edit cell value changes.\n   * @param {GridEditCellPropsParams} params With all properties from [[GridEditCellPropsParams]].\n   * @param {MuiEvent<React.SyntheticEvent>} event The event that caused this prop to be called.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @deprecated use `preProcessEditCellProps` from the [`GridColDef`](/x/api/data-grid/grid-col-def/)\n   */\n  onEditCellPropsChange: PropTypes.func,\n\n  /**\n   * Callback fired when the `editRowsModel` changes.\n   * @param {GridEditRowsModel} editRowsModel With all properties from [[GridEditRowsModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onEditRowsModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when an exception is thrown in the grid.\n   * @param {any} args The arguments passed to the `showError` call.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onError: PropTypes.func,\n\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n\n  /**\n   * Callback fired when the current page has changed.\n   * @param {number} page Index of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * Callback fired when the page size has changed.\n   * @param {number} pageSize Size of the page displayed on the Grid.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPageSizeChange: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n\n  /**\n   * Callback fired when the grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback fired when the row changes are committed.\n   * @param {GridRowId} id The row id.\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditCommit: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containig which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridSelectionModel} selectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSelectionModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n\n  /**\n   * Callback fired when the state of the grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @internal\n   */\n  onStateChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   * @default 0\n   */\n  page: PropTypes.number,\n\n  /**\n   * Set the number of rows in one page.\n   * If some of the rows have children (for instance in the tree data), this number represents the amount of top level rows wanted on each page.\n   * @default 100\n   */\n  pageSize: chainPropTypes(PropTypes.number, props => {\n    if (props.pageSize && props.pageSize > MAX_PAGE_SIZE) {\n      return new Error([`MUI: \\`<DataGrid pageSize={${props.pageSize}} />\\` is not a valid prop.`, `Only page size below ${MAX_PAGE_SIZE} is available in the MIT version.`, '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n\n    return null;\n  }),\n  pagination: props => {\n    if (props.pagination === false) {\n      return new Error(['MUI: `<DataGrid pagination={false} />` is not a valid prop.', 'Infinite scrolling is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to disable the pagination.'].join('\\n'));\n    }\n\n    return null;\n  },\n\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * Only applied if `props.experimentalFeatures.newEditingApi: true`.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n\n  /**\n   * Number of extra rows to be rendered before/after the visible slice.\n   * @default 3\n   */\n  rowBuffer: PropTypes.number,\n\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Set the height in pixel of a row in the grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   */\n  rows: PropTypes.array.isRequired,\n\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Number of rows from the `rowBuffer` that can be visible before a new slice is rendered.\n   * @default 3\n   */\n  rowThreshold: PropTypes.number,\n\n  /**\n   * Override the height/width of the grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n\n  /**\n   * Set the selection model of the grid.\n   */\n  selectionModel: chainPropTypes(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]), props => {\n    if (!props.checkboxSelection && Array.isArray(props.selectionModel) && props.selectionModel.length > 1) {\n      return new Error([`MUI: \\`<DataGrid selectionModel={${JSON.stringify(props.selectionModel)}} />\\` is not a valid prop.`, 'selectionModel can only be of 1 item in DataGrid.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the right border of the cells are displayed.\n   * @default false\n   */\n  showCellRightBorder: PropTypes.bool,\n\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnRightBorder: PropTypes.bool,\n\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n\n  /**\n   * Set the sort model of the grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","export default function chainPropTypes(propType1, propType2) {\n  if (process.env.NODE_ENV === 'production') {\n    return () => null;\n  }\n\n  return function validate(...args) {\n    return propType1(...args) || propType2(...args);\n  };\n}"],"sourceRoot":""}