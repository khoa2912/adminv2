{"version":3,"file":"static/js/722.559eff7b.chunk.js","mappings":"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","sources":["pages/components/ProductPage.js"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\n// material-ui\r\nimport { Box, Card, Grid, Stack, Typography } from \"@mui/material\";\r\n\r\n// project import\r\nimport ComponentSkeleton from \"./ComponentSkeleton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Card as CardANTD, Spin } from \"antd\";\r\nimport {\r\n  Col,\r\n  Collapse,\r\n  Form,\r\n  Row,\r\n  Upload,\r\n  Select,\r\n} from \"../../../node_modules/antd/lib/index\";\r\nimport { FormGroup } from \"react-bootstrap\";\r\nimport { EditorState, convertToRaw } from \"draft-js\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\n\r\nimport {\r\n  Button,\r\n  CardActions,\r\n  Divider,\r\n  FormControl,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Select as SelectMui,\r\n  NativeSelect,\r\n  MenuItem,\r\n  Modal,\r\n  OutlinedInput,\r\n  TextField,\r\n} from \"../../../node_modules/@mui/material/index\";\r\nimport { CKEditor } from \"ckeditor4-react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { notification, Popconfirm, Result } from \"antd\";\r\nimport { Tabs } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport formatThousand from \"util/formatThousans\";\r\nimport {\r\n  deleteProductById,\r\n  getDataFilterProduct,\r\n  getProducts,\r\n  getProductWarning,\r\n  editProduct,\r\n  getProductRelated,\r\n} from \"actions/product\";\r\nimport { getAllCategory } from \"actions/category\";\r\nimport { getTags } from \"actions/tag\";\r\nimport { getInfoProducts } from \"actions/infoProduct\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  DataArraySharp,\r\n  SettingsBackupRestoreSharp,\r\n} from \"../../../node_modules/@mui/icons-material/index\";\r\nimport tag from \"reducers/tag\";\r\nimport { api } from \"urlConfig\";\r\n\r\n// ===============================|| COLOR BOX ||=============================== //\r\nconst { TabPane } = Tabs;\r\nconst { Option } = Select;\r\nfunction ColorBox({ bgcolor, title, data, dark, main }) {\r\n  return (\r\n    <>\r\n      <Card sx={{ \"&.MuiPaper-root\": { borderRadius: \"0px\" } }}>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            py: 2.5,\r\n            bgcolor,\r\n            color: dark ? \"grey.800\" : \"#ffffff\",\r\n            border: main ? \"1px dashed\" : \"1px solid transparent\",\r\n          }}\r\n        >\r\n          {title && (\r\n            <Grid container justifyContent=\"space-around\" alignItems=\"center\">\r\n              <Grid item>\r\n                {data && (\r\n                  <Stack spacing={0.75} alignItems=\"center\">\r\n                    <Typography variant=\"subtitle2\">{data.label}</Typography>\r\n                    <Typography variant=\"subtitle1\">{data.color}</Typography>\r\n                  </Stack>\r\n                )}\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\" color=\"inherit\">\r\n                  {title}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nColorBox.propTypes = {\r\n  bgcolor: PropTypes.string,\r\n  title: PropTypes.string,\r\n  data: PropTypes.object.isRequired,\r\n  dark: PropTypes.bool,\r\n  main: PropTypes.bool,\r\n};\r\n\r\n// ===============================|| COMPONENT - COLOR ||=============================== //\r\n\r\nconst ComponentColor = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchModel, setSearchModel] = useState({\r\n    ProductName: \"\",\r\n    CategoryId: \"\",\r\n    Product_Tag: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const product = useSelector((state) => state.product);\r\n  const tag = useSelector((state) => state.tag);\r\n  const infoProduct = useSelector((state) => state.infoProduct);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const [type, setType] = useState(\"\");\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const category = useSelector((state) => state.category);\r\n  const [productPicture, setProductPicture] = useState([]);\r\n  const [productInPage, setProductInPage] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [file, setFile] = useState([]);\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [quantitySold, setQuantitySold] = useState(\"\");\r\n  const [regularPrice, setRegularPrice] = useState(\"\");\r\n  const [salePrice, setSalePrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [timeBaoHanh, setTimeBaoHanh] = useState(\"\");\r\n  const [series, setSeries] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [cpu, setCPU] = useState(\"\");\r\n  const [card, setCard] = useState(\"\");\r\n  const [ram, setRam] = useState(\"\");\r\n  const [manhinh, setManHinh] = useState(\"\");\r\n  const [ocung, setOCung] = useState(\"\");\r\n  const [hedieuhanh, setHeDieuHanh] = useState(\"\");\r\n  const [khoiluong, setKhoiLuong] = useState(\"\");\r\n  const [editorState, setEditorState] = useState(() =>\r\n    EditorState.createEmpty()\r\n  );\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [fileList, setFileList] = useState([]);\r\n  const [listTag, setListTag] = useState([]);\r\n  const [filebase64, setFileBase64] = useState([]);\r\n  const handleCancel = () => setPreviewVisible(false);\r\n  const handleChange = ({ fileList: newFileList }) => {\r\n    setFileList(newFileList);\r\n  };\r\n  useEffect(() => {\r\n    const listScreen = JSON.parse(localStorage.getItem(\"screenrole\"));\r\n    let obj = listScreen.find((o) => o.screenSlug === \"/product\");\r\n    console.log(\"obj\", obj);\r\n    if (!obj) {\r\n      navigate(\"/404\");\r\n    }\r\n  }, []);\r\n  const handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    setPreviewImage(file.url || file.preview);\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n  const getBase64 = (file) =>\r\n    new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n\r\n      reader.onload = () => resolve(reader.result);\r\n\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getDataFilterProduct()).then((data) => {\r\n      data.map((item, index) => (item.id = index + 1));\r\n      setProductInPage(data);\r\n      setLoading(false);\r\n    });\r\n    // dispatch(getProductRelated());\r\n    dispatch(getAllCategory());\r\n    dispatch(getTags());\r\n    dispatch(getInfoProducts());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (selectedRows[0]) {\r\n      selectedRows[0] &&\r\n        selectedRows[0].productPicture.map((item) =>\r\n          Object.assign(item, { url: item.img, uid: item._id })\r\n        );\r\n    }\r\n    setProductPicture(selectedRows[0] ? selectedRows[0].productPicture : []);\r\n  }, [selectedRows]);\r\n\r\n  var filterColor = infoProduct.infoProducts.filter((item) => {\r\n    if (item.type === \"mausac\") return item;\r\n  });\r\n  var filterScreen = infoProduct.infoProducts.filter((item) => {\r\n    if (item.type === \"manhinh\") return item;\r\n  });\r\n  var filterRam = infoProduct.infoProducts.filter((item) => {\r\n    if (item.type === \"ram\") return item;\r\n  });\r\n  var filterCpu = infoProduct.infoProducts.filter((item) => {\r\n    if (item.type === \"cpu\") return item;\r\n  });\r\n\r\n  const handleEdit = () => {};\r\n  const handleUpdateProduct = async () => {\r\n    if (name.trim() === \"\") {\r\n      notification[\"warning\"]({\r\n        message: \"Thêm mới Sản phẩm\",\r\n        description: \"Vui lòng nhập dữ liệu.\",\r\n      });\r\n      return;\r\n    }\r\n    const list = [];\r\n    const tempFileListImgUpload = [];\r\n    const tempFileListImg = [];\r\n    fileList.map((item) => {\r\n      if (item.type === \"image/png\" || item.type === \"image/jpeg\") {\r\n        tempFileListImgUpload.push(item);\r\n      } else {\r\n        tempFileListImg.push(item);\r\n      }\r\n    });\r\n\r\n    const objFilterColor = filterColor?.find((data) => data._id === color);\r\n    const objFilterRam = filterRam?.find((data) => data._id === ram);\r\n    const objFilterCpu = filterCpu?.find((data) => data._id === cpu);\r\n    const objFilterScreen = filterScreen?.find((data) => data._id === manhinh);\r\n\r\n    if (tempFileListImgUpload && tempFileListImgUpload.length > 0) {\r\n      for (let pic of tempFileListImgUpload) {\r\n        const reader = new FileReader();\r\n        if (pic) {\r\n          const link = await getBase64(pic.originFileObj);\r\n          list.push(link);\r\n        }\r\n      }\r\n      try {\r\n        await fetch(`${api}/product/uploadPicture`, {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ data: list }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        })\r\n          .then((response) => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw new Error(\"Something went wrong\");\r\n          })\r\n          .then((responseJson) => {\r\n            const mergeImg = tempFileListImg.concat(responseJson.result);\r\n            const data = {\r\n              _id: selectedRows[0]._id,\r\n              cpuId: objFilterCpu ? objFilterCpu._id : \"\",\r\n              nameCpu: objFilterCpu ? objFilterCpu.name : \"\",\r\n              typeCpu: objFilterCpu ? objFilterCpu.type : \"\",\r\n              colorId: objFilterColor ? objFilterColor._id : \"\",\r\n              nameColor: objFilterColor ? objFilterColor.name : \"\",\r\n              typeColor: objFilterColor ? objFilterColor.type : \"\",\r\n              ramId: objFilterRam ? objFilterRam._id : \"\",\r\n              nameRam: objFilterRam ? objFilterRam.name : \"\",\r\n              typeRam: objFilterRam ? objFilterRam.type : \"\",\r\n              screenId: objFilterScreen ? objFilterScreen._id : \"\",\r\n              nameScreen: objFilterScreen ? objFilterScreen.name : \"\",\r\n              typeScreen: objFilterScreen ? objFilterScreen.type : \"\",\r\n              name,\r\n              listTag,\r\n              quantity,\r\n              regularPrice,\r\n              salePrice,\r\n              description,\r\n              categoryId,\r\n              productPicture: mergeImg,\r\n              timeBaoHanh,\r\n              series,\r\n              card,\r\n              ocung,\r\n              hedieuhanh,\r\n              khoiluong,\r\n            };\r\n            dispatch(editProduct(data)).then((data) => {\r\n              dispatch(getDataFilterProduct()).then((data) => {\r\n                data.map((item, index) => (item.id = index + 1));\r\n                setProductInPage(data);\r\n                setLoading(false);\r\n              });\r\n              if (data === \"success\") {\r\n                handleClose();\r\n                notification[\"success\"]({\r\n                  message: \"Chỉnh sửa Sản phẩm\",\r\n                  description: \"Chỉnh sửa Sản phẩm thành công.\",\r\n                });\r\n              } else {\r\n                handleClose();\r\n                notification[\"error\"]({\r\n                  message: \"Chỉnh sửa Sản phẩm\",\r\n                  description: \"Chỉnh sửa Sản phẩm thất bại.\",\r\n                });\r\n              }\r\n            });\r\n          });\r\n      } catch (err) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    } else {\r\n      const data = {\r\n        _id: selectedRows[0]._id,\r\n        cpuId: objFilterCpu ? objFilterCpu._id : \"\",\r\n        nameCpu: objFilterCpu ? objFilterCpu.name : \"\",\r\n        typeCpu: objFilterCpu ? objFilterCpu.type : \"\",\r\n        colorId: objFilterColor ? objFilterColor._id : \"\",\r\n        nameColor: objFilterColor ? objFilterColor.name : \"\",\r\n        typeColor: objFilterColor ? objFilterColor.type : \"\",\r\n        ramId: objFilterRam ? objFilterRam._id : \"\",\r\n        nameRam: objFilterRam ? objFilterRam.name : \"\",\r\n        typeRam: objFilterRam ? objFilterRam.type : \"\",\r\n        screenId: objFilterScreen ? objFilterScreen._id : \"\",\r\n        nameScreen: objFilterScreen ? objFilterScreen.name : \"\",\r\n        typeScreen: objFilterScreen ? objFilterScreen.type : \"\",\r\n        name,\r\n        quantity,\r\n        listTag,\r\n        regularPrice,\r\n        salePrice,\r\n        description,\r\n        categoryId,\r\n        productPicture: tempFileListImg,\r\n        timeBaoHanh,\r\n        series,\r\n        card,\r\n        ocung,\r\n        hedieuhanh,\r\n        khoiluong,\r\n      };\r\n      dispatch(editProduct(data)).then((data) => {\r\n        dispatch(getDataFilterProduct()).then((data) => {\r\n          data.map((item, index) => (item.id = index + 1));\r\n          setProductInPage(data);\r\n          setLoading(false);\r\n        });\r\n        if (data === \"success\") {\r\n          handleClose();\r\n          notification[\"success\"]({\r\n            message: \"Chỉnh sửa Sản phẩm\",\r\n            description: \"Chỉnh sửa Sản phẩm thành công.\",\r\n          });\r\n        } else {\r\n          handleClose();\r\n          notification[\"error\"]({\r\n            message: \"Chỉnh sửa Sản phẩm\",\r\n            description: \"Chỉnh sửa Sản phẩm thất bại.\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const text = \"Bạn có chắc chắn muốn xoá?\";\r\n  const columns = [\r\n    { field: \"id\", headerName: \"STT\", width: 130 },\r\n    { field: \"name\", headerName: \"Tên sản phẩm\", width: 300 },\r\n    {\r\n      field: \"category\",\r\n      headerName: \"Hãng\",\r\n      width: 130,\r\n      renderCell: (params) => {\r\n        return <div className=\"rowitem\">{params.value.name}</div>;\r\n      },\r\n    },\r\n    {\r\n      field: \"salePrice\",\r\n      headerName: \"Giá tiền\",\r\n      width: 130,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"rowitem\">\r\n            {formatThousand(params.row.salePrice)} VND\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"quantity\",\r\n      headerName: \"Số lượng\",\r\n      type: \"number\",\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"rowitem\" style={{ textAlign: \"center\" }}>\r\n            {formatThousand(params.row.quantity)}{\" \"}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"quantitySold\",\r\n      headerName: \"Số lượng đã bán\",\r\n      type: \"number\",\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"rowitem\" style={{ textAlign: \"center\" }}>\r\n            {formatThousand(params.value)}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"color\",\r\n      headerName: \"Màu\",\r\n      width: 180,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className=\"rowitem\">\r\n            {params.row.descriptionTable[0].color[0].name}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const gridStyle = {\r\n    width: \"50%\",\r\n    height: \"80px\",\r\n  };\r\n  // eslint-disable-next-line\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 1000,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  notification.config({\r\n    placement: \"topRight\",\r\n    top: 80,\r\n    duration: 3,\r\n    rtl: false,\r\n  });\r\n  const handleView = () => {\r\n    if (selectedRows.length === 0) {\r\n      notification[\"warning\"]({\r\n        message: \"Xem sản phẩm\",\r\n        description: \"Vui lòng chọn sản phẩm bạn muốn xem.\",\r\n      });\r\n    } else if (selectedRows.length >= 2) {\r\n      notification[\"warning\"]({\r\n        message: \"Xem sản phẩm\",\r\n        description: \"Vui lòng chỉ chọn một sản phẩm.\",\r\n      });\r\n    } else {\r\n      setType(\"view\");\r\n      handleOpen();\r\n    }\r\n  };\r\n  const confirm = () => {\r\n    if (selectedRows.length === 0) {\r\n      notification[\"warning\"]({\r\n        message: \"Xoá sản phẩm\",\r\n        description: \"Vui lòng chọn sản phẩm bạn muốn xoá.\",\r\n      });\r\n    } else {\r\n      let listIdProduct = [];\r\n      selectedRows.map((item) => {\r\n        listIdProduct.push(item._id);\r\n      });\r\n      const payload = {\r\n        productId: listIdProduct,\r\n      };\r\n      dispatch(deleteProductById(payload)).then((data) => {\r\n        dispatch(getDataFilterProduct()).then((data) => {\r\n          data.map((item, index) => (item.id = index + 1));\r\n          setProductInPage(data);\r\n          if (data === \"success\") {\r\n            notification[\"success\"]({\r\n              message: \"Xoá Sản phẩm\",\r\n              description: \"Xoá Sản phẩm thành công.\",\r\n            });\r\n          } else {\r\n            notification[\"error\"]({\r\n              message: \"Xoá Sản phẩm\",\r\n              description: \"Xoá Sản phẩm không thành công.\",\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n  const handleEditProduct = () => {\r\n    if (selectedRows.length === 0) {\r\n      notification[\"warning\"]({\r\n        message: \"Chỉnh sửa sản phẩm\",\r\n        description: \"Vui lòng chọn sản phẩm bạn muốn chỉnh sửa.\",\r\n      });\r\n    } else if (selectedRows.length >= 2) {\r\n      notification[\"warning\"]({\r\n        message: \"Xem sản phẩm\",\r\n        description: \"Vui lòng chỉ chọn một sản phẩm.\",\r\n      });\r\n    } else {\r\n      // notification['success']({\r\n      //     message: 'Chỉnh sửa sản phẩm',\r\n      //     description: 'Coming Soon'\r\n      // });\r\n      setType(\"edit\");\r\n      handleOpen();\r\n    }\r\n  };\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n  const handleChangeCategory = (value) => {\r\n    searchModel.CategoryId = value;\r\n    setSearchModel(searchModel);\r\n  };\r\n  const handleChangeTag = (value) => {\r\n    searchModel.Product_Tag = value;\r\n    setSearchModel(searchModel);\r\n  };\r\n  const handleChangeProduct = (value) => {\r\n    searchModel.ProductName = value;\r\n    setSearchModel(searchModel);\r\n  };\r\n\r\n  // Filter in Product\r\n  function removeDuplicates(startArray, prop) {\r\n    var newArray = [];\r\n    var lookupObject = {};\r\n\r\n    for (var i in startArray) {\r\n      lookupObject[startArray[i][prop]] = startArray[i];\r\n    }\r\n\r\n    for (i in lookupObject) {\r\n      newArray.push(lookupObject[i]);\r\n    }\r\n    return newArray;\r\n  }\r\n\r\n  // Filter Name\r\n  var filterArrayName = removeDuplicates(product.products, \"name\");\r\n\r\n  const handleSearch = () => {\r\n    setLoading(true);\r\n    dispatch(getDataFilterProduct(searchModel)).then((data) => {\r\n      data.map((item, index) => (item.id = index + 1));\r\n      setProductInPage(data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n      },\r\n    },\r\n  };\r\n  const handleChangeTagProduct = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setListTag(\r\n      // On autofill we get a stringified value.\r\n      typeof value === \"string\" ? value.split(\",\") : value\r\n    );\r\n  };\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        Upload\r\n      </div>\r\n    </div>\r\n  );\r\n  const modalProduct = (type) => {\r\n    let title;\r\n    let disable;\r\n    if (type === \"edit\") {\r\n      title = \"Chỉnh sửa sản phẩm\";\r\n      disable = false;\r\n    }\r\n    if (type === \"view\") {\r\n      title = \"Xem chi tiết sản phẩm\";\r\n      disable = true;\r\n    }\r\n    return (\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h3\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n          <Tabs\r\n            defaultActiveKey=\"1\"\r\n            style={{ color: \"black\", fontSize: \"19px\" }}\r\n          >\r\n            <TabPane tab={<span>Thông tin chung</span>} key=\"1\">\r\n              <div\r\n                className=\"container_addProduct\"\r\n                style={{\r\n                  display: \"flex\",\r\n                  paddingTop: \"0px\",\r\n                  color: \"black\",\r\n                  fontSize: \"17px\",\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"container_form_addProduct\"\r\n                  style={{\r\n                    paddingBottom: \"10px\",\r\n                    width: \"100%\",\r\n                    paddingRight: \"30px\",\r\n                  }}\r\n                >\r\n                  <TextField\r\n                    required\r\n                    style={{ width: \"100%\", marginBottom: \"15px\" }}\r\n                    id=\"outlined-error\"\r\n                    label=\"Tên sản phẩm\"\r\n                    defaultValue={name ? name : \"\"}\r\n                    disabled={disable}\r\n                    onChange={(e) => {\r\n                      setName(e.target.value);\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Số lượng\"\r\n                    type=\"number\"\r\n                    style={{ width: \"100%\", marginBottom: \"15px\" }}\r\n                    defaultValue={quantity ? quantity : \"\"}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    disabled={disable}\r\n                    onChange={(e) => {\r\n                      setQuantity(e.target.value);\r\n                    }}\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Số lượng đã bán\"\r\n                    type=\"number\"\r\n                    style={{ width: \"100%\", marginBottom: \"15px\" }}\r\n                    defaultValue={quantitySold ? quantitySold : 0}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    disabled={true}\r\n                  />\r\n                  <FormControl\r\n                    fullWidth\r\n                    style={{ width: \"100%\", marginBottom: \"15px\" }}\r\n                  >\r\n                    <InputLabel\r\n                      htmlFor=\"outlined-adornment-amount\"\r\n                      disabled={disable}\r\n                    >\r\n                      Giá tiền gốc\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-amount\"\r\n                      placeholder={formatThousand(\r\n                        regularPrice ? regularPrice : \"\"\r\n                      )}\r\n                      defaultValue={regularPrice ? regularPrice : null}\r\n                      startAdornment={\r\n                        <InputAdornment position=\"start\">VNĐ</InputAdornment>\r\n                      }\r\n                      label=\"Giá tiền gốc\"\r\n                      disabled={disable}\r\n                      onChange={(e) => {\r\n                        setRegularPrice(e.target.value);\r\n                      }}\r\n                      // InputProps={{\r\n                      //     inputComponent: NumberFormatCustom\r\n                      // }}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl\r\n                    fullWidth\r\n                    style={{ width: \"100%\", marginBottom: \"15px\" }}\r\n                  >\r\n                    <InputLabel\r\n                      htmlFor=\"outlined-adornment-amount\"\r\n                      disabled={disable}\r\n                    >\r\n                      Giá tiền giảm giá\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                      id=\"outlined-adornment-amount\"\r\n                      defaultValue={salePrice ? salePrice : null}\r\n                      disabled={disable}\r\n                      startAdornment={\r\n                        <InputAdornment position=\"start\">VNĐ</InputAdornment>\r\n                      }\r\n                      label=\"Giá tiền giảm giá\"\r\n                      onChange={(e) => {\r\n                        setSalePrice(e.target.value);\r\n                      }}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl style={{ width: \"100%\", marginBottom: \"15px\" }}>\r\n                    <InputLabel id=\"demo-multiple-checkbox-label\">\r\n                      Tag\r\n                    </InputLabel>\r\n                    <SelectMui\r\n                      // disabled={disable}\r\n                      defaultValue={listTag ? listTag : null}\r\n                      disabled={disable}\r\n                      label=\"Tag\"\r\n                      labelId=\"demo-multiple-checkbox-label\"\r\n                      id=\"demo-multiple-checkbox\"\r\n                      multiple\r\n                      input={<OutlinedInput label=\"Tag\" />}\r\n                      // renderValue={(selected) => selected.join(', ')}\r\n                      MenuProps={MenuProps}\r\n                      onChange={handleChangeTagProduct}\r\n                    >\r\n                      {tag.tags.map((option) => (\r\n                        <MenuItem value={option._id}>{option.tagName}</MenuItem>\r\n                      ))}\r\n                    </SelectMui>\r\n                  </FormControl>\r\n                  <FormControl\r\n                    fullWidth\r\n                    style={{ width: \"100%\", marginBottom: \"15px\" }}\r\n                  >\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Thương hiệu\r\n                    </InputLabel>\r\n                    <SelectMui\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      defaultValue={categoryId ? categoryId : \"\"}\r\n                      disabled={disable}\r\n                      label=\"Thương hiệu\"\r\n                      onChange={(e) => setCategoryId(e.target.value)}\r\n                    >\r\n                      {category.categories.map((option) => (\r\n                        <MenuItem value={option._id}>{option.name}</MenuItem>\r\n                      ))}\r\n                    </SelectMui>\r\n                  </FormControl>\r\n                  <Upload\r\n                    listType=\"picture-card\"\r\n                    defaultFileList={fileList ? fileList : []}\r\n                    onPreview={handlePreview}\r\n                    beforeUpload={() => {\r\n                      /* update state here */\r\n                      return false;\r\n                    }}\r\n                    disabled={disable}\r\n                    onChange={handleChange}\r\n                  >\r\n                    {uploadButton}\r\n                  </Upload>\r\n                </div>\r\n              </div>\r\n            </TabPane>\r\n            <TabPane\r\n              tab={<span>Mô tả sản phẩm</span>}\r\n              style={{ paddingBottom: \"20px\" }}\r\n              key=\"2\"\r\n            >\r\n              <FormGroup>\r\n                <CKEditor\r\n                  config={{\r\n                    enterMode: 2,\r\n                    resize_minWidth: \"100%\",\r\n                    resize_maxHeight: 600,\r\n                    //filebrowserBrowseUrl: '/browser/browse.php',\r\n                    //filebrowserUploadUrl: '/uploader/upload.php',\r\n                    pasteFromWordRemoveStyles: false,\r\n                    pasteFromWordNumberedHeadingToList: true,\r\n                    pasteFromWordPromptCleanup: true,\r\n                  }}\r\n                  initData={description ? description : null}\r\n                  onChange={(e) => {\r\n                    setDescription(e.target.value);\r\n                  }}\r\n                  readOnly={disable}\r\n                />\r\n              </FormGroup>\r\n            </TabPane>\r\n            <TabPane tab={<span>Mô tả chi tiết</span>} key=\"3\">\r\n              <div\r\n                className=\"table_des\"\r\n                style={{ width: \"100%\", color: \"black\", fontSize: \"17px\" }}\r\n              >\r\n                <div style={{ display: \"block\", width: \"100%\" }}>\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Thời gian bảo hành\"\r\n                    disabled={disable}\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginBottom: \"15px\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                    value={timeBaoHanh ? timeBaoHanh : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setTimeBaoHanh(e.target.value);\r\n                    }}\r\n                  />\r\n\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Series\"\r\n                    style={{ width: \"45%\", marginBottom: \"15px\" }}\r\n                    defaultValue={series ? series : null}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    onChange={(e) => {\r\n                      setSeries(e.target.value);\r\n                    }}\r\n                    disabled={disable}\r\n                  />\r\n                </div>\r\n                <div style={{ display: \"block\", width: \"100%\" }}>\r\n                  <FormControl\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginBottom: \"15px\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                  >\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      disabled={disable}\r\n                    >\r\n                      Màu sắc\r\n                    </InputLabel>\r\n                    <SelectMui\r\n                      defaultValue={color ? color : \"\"}\r\n                      label=\"Màu sắc\"\r\n                      labelId=\"demo-simple-select-label\"\r\n                      disabled={disable}\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => setColor(e.target.value)}\r\n                    >\r\n                      {filterColor.map((option) => (\r\n                        <MenuItem value={option._id}>{option.name}</MenuItem>\r\n                      ))}\r\n                    </SelectMui>\r\n                  </FormControl>\r\n\r\n                  <FormControl style={{ width: \"45%\", marginBottom: \"15px\" }}>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      disabled={disable}\r\n                    >\r\n                      CPU\r\n                    </InputLabel>\r\n                    <SelectMui\r\n                      defaultValue={cpu ? cpu : \"\"}\r\n                      label=\"CPU\"\r\n                      labelId=\"demo-simple-select-label\"\r\n                      disabled={disable}\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => setCPU(e.target.value)}\r\n                    >\r\n                      {filterCpu.map((option) => (\r\n                        <MenuItem value={option._id}>{option.name}</MenuItem>\r\n                      ))}\r\n                    </SelectMui>\r\n                  </FormControl>\r\n                </div>\r\n                <div style={{ display: \"block\", width: \"100%\" }}>\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Card đồ họa\"\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginBottom: \"15px\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    defaultValue={card ? card : null}\r\n                    onChange={(e) => {\r\n                      setCard(e.target.value);\r\n                    }}\r\n                    disabled={disable}\r\n                  />\r\n\r\n                  <FormControl style={{ width: \"45%\", marginBottom: \"15px\" }}>\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      disabled={disable}\r\n                    >\r\n                      Ram\r\n                    </InputLabel>\r\n                    <SelectMui\r\n                      defaultValue={ram ? ram : \"\"}\r\n                      disabled={disable}\r\n                      label=\"Ram\"\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => setRam(e.target.value)}\r\n                    >\r\n                      {filterRam.map((option) => (\r\n                        <MenuItem value={option._id}>{option.name}</MenuItem>\r\n                      ))}\r\n                    </SelectMui>\r\n                  </FormControl>\r\n                </div>\r\n                <div style={{ display: \"block\", width: \"100%\" }}>\r\n                  <FormControl\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginBottom: \"15px\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                  >\r\n                    <InputLabel\r\n                      id=\"demo-simple-select-label\"\r\n                      disabled={disable}\r\n                    >\r\n                      Màn hình\r\n                    </InputLabel>\r\n                    <SelectMui\r\n                      defaultValue={manhinh ? manhinh : \"\"}\r\n                      disabled={disable}\r\n                      label=\"Màn hình\"\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      onChange={(e) => setManHinh(e.target.value)}\r\n                    >\r\n                      {filterScreen.map((option) => (\r\n                        <MenuItem value={option._id}>{option.name}</MenuItem>\r\n                      ))}\r\n                    </SelectMui>\r\n                  </FormControl>\r\n\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Ổ cứng\"\r\n                    style={{ width: \"45%\", marginBottom: \"15px\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    defaultValue={ocung ? ocung : null}\r\n                    onChange={(e) => {\r\n                      setOCung(e.target.value);\r\n                    }}\r\n                    disabled={disable}\r\n                  />\r\n                </div>\r\n                <div style={{ display: \"block\", width: \"100%\" }}>\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Hệ điều hành\"\r\n                    style={{\r\n                      width: \"45%\",\r\n                      marginBottom: \"15px\",\r\n                      marginRight: \"20px\",\r\n                    }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={hedieuhanh ? hedieuhanh : null}\r\n                    onChange={(e) => {\r\n                      setHeDieuHanh(e.target.value);\r\n                    }}\r\n                    disabled={disable}\r\n                  />\r\n\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-number\"\r\n                    label=\"Khối lượng\"\r\n                    style={{ width: \"45%\", marginBottom: \"15px\" }}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={khoiluong ? khoiluong : null}\r\n                    onChange={(e) => {\r\n                      setKhoiLuong(e.target.value);\r\n                    }}\r\n                    disabled={disable}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </TabPane>\r\n          </Tabs>\r\n          <CardActions sx={{ paddingLeft: \"0\" }}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"success\"\r\n              onClick={handleUpdateProduct}\r\n              disabled={disable}\r\n            >\r\n              Lưu\r\n            </Button>\r\n            <Button size=\"small\" variant=\"outlined\" onClick={handleClose}>\r\n              Đóng\r\n            </Button>\r\n          </CardActions>\r\n        </Box>\r\n      </Modal>\r\n    );\r\n  };\r\n  return (\r\n    <ComponentSkeleton>\r\n      <Form style={{ marginBottom: \"10px\" }}>\r\n        <Collapse\r\n          defaultActiveKey={[\"1\"]}\r\n          expandIconPosition={\"right\"}\r\n          className=\"mps-search-header-collapse\"\r\n        >\r\n          <Collapse.Panel\r\n            header={\r\n              <span className=\"mps-search-header-panel-title\">\r\n                {\" \"}\r\n                Thông tin tìm kiếm\r\n              </span>\r\n            }\r\n            key=\"1\"\r\n          >\r\n            <CardANTD style={{ border: \"none\" }}>\r\n              <CardANTD.Grid style={gridStyle}>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Form.Item>Mã sản phẩm</Form.Item>\r\n                  </Col>\r\n                  <Col span={16}>\r\n                    <Form.Item>\r\n                      <Select\r\n                        mode=\"multiple\"\r\n                        optionFilterProp=\"data\"\r\n                        optionLabelProp=\"text\"\r\n                        onChange={handleChangeProduct}\r\n                      >\r\n                        {filterArrayName.map((item, index) => (\r\n                          <Option\r\n                            key={item._id}\r\n                            data={item._id}\r\n                            text={item._id}\r\n                          >\r\n                            <div className=\"global-search-item\">\r\n                              <span>{item._id}</span>\r\n                              {/* <span style={{ float: 'right' }}> {index} </span> */}\r\n                            </div>\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </CardANTD.Grid>\r\n              <CardANTD.Grid style={gridStyle}>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Form.Item>Tên sản phẩm</Form.Item>\r\n                  </Col>\r\n                  <Col span={16}>\r\n                    <Form.Item>\r\n                      <Select\r\n                        mode=\"multiple\"\r\n                        optionFilterProp=\"data\"\r\n                        optionLabelProp=\"text\"\r\n                        onChange={handleChangeProduct}\r\n                      >\r\n                        {filterArrayName.map((item, index) => (\r\n                          <Option\r\n                            key={item._id}\r\n                            data={item.name}\r\n                            text={item.name}\r\n                          >\r\n                            <div className=\"global-search-item\">\r\n                              <span>{item.name}</span>\r\n                              {/* <span style={{ float: 'right' }}> {index} </span> */}\r\n                            </div>\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </CardANTD.Grid>\r\n              <CardANTD.Grid style={gridStyle}>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Form.Item>Tên nhãn hàng</Form.Item>\r\n                  </Col>\r\n                  <Col span={16}>\r\n                    <Form.Item>\r\n                      <Select\r\n                        mode=\"multiple\"\r\n                        optionFilterProp=\"data\"\r\n                        optionLabelProp=\"text\"\r\n                        onChange={handleChangeCategory}\r\n                      >\r\n                        {category.categories.map((item, index) => (\r\n                          <Option\r\n                            key={item._id}\r\n                            data={item._id}\r\n                            text={item.name}\r\n                          >\r\n                            <div className=\"global-search-item\">\r\n                              <span>{item.name}</span>\r\n                              {/* <span style={{ float: 'right' }}> {index} </span> */}\r\n                            </div>\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </CardANTD.Grid>\r\n              <CardANTD.Grid style={gridStyle}>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Form.Item>Tag</Form.Item>\r\n                  </Col>\r\n                  <Col span={16}>\r\n                    <Form.Item>\r\n                      <Select\r\n                        mode=\"multiple\"\r\n                        optionFilterProp=\"data\"\r\n                        optionLabelProp=\"text\"\r\n                        onChange={handleChangeTag}\r\n                      >\r\n                        {tag.tags.map((item, index) => (\r\n                          <Option\r\n                            key={item._id}\r\n                            data={item._id}\r\n                            text={item.tagName}\r\n                          >\r\n                            <div className=\"global-search-item\">\r\n                              <span>{item.tagName}</span>\r\n                            </div>\r\n                          </Option>\r\n                        ))}\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </CardANTD.Grid>\r\n            </CardANTD>\r\n          </Collapse.Panel>\r\n        </Collapse>\r\n      </Form>\r\n      <Stack\r\n        direction=\"row\"\r\n        divider={<Divider orientation=\"vertical\" flexItem />}\r\n        spacing={2}\r\n        sx={{ marginBottom: \"20px\" }}\r\n      >\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleSearch}\r\n          startIcon={<SearchIcon />}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Tìm kiếm\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={handleView}\r\n        >\r\n          Xem\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          href=\"/createProduct\"\r\n          color=\"success\"\r\n          startIcon={<AddIcon />}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          Thêm mới\r\n        </Button>\r\n        <Popconfirm\r\n          placement=\"right\"\r\n          title={text}\r\n          onConfirm={confirm}\r\n          okText=\"Đồng ý\"\r\n          cancelText=\"Không\"\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"error\"\r\n            style={{ cursor: \"pointer\" }}\r\n            startIcon={<DeleteIcon />}\r\n            // onClick={handleDeleteProduct}\r\n          >\r\n            Xoá\r\n          </Button>\r\n        </Popconfirm>\r\n        <Button\r\n          variant=\"outlined\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={handleEditProduct}\r\n        >\r\n          Chỉnh sửa\r\n        </Button>\r\n      </Stack>\r\n      {modalProduct(type)}\r\n      {/* <Spin tip=\"Loading...\" spinning={loading}> */}\r\n      <Grid container spacing={3}>\r\n        <div style={{ height: 600, width: \"100%\", marginLeft: \"10px\" }}>\r\n          <DataGrid\r\n            rows={productInPage.length !== 0 ? productInPage : []}\r\n            columns={productInPage.length !== 0 ? columns : []}\r\n            pageSize={8}\r\n            rowsPerPageOptions={[8]}\r\n            checkboxSelection\r\n            getRowId={(row) => row._id}\r\n            // onRowClick={(newSelection) => {\r\n            //     setArraySelect((arraySelect) => [...arraySelect, newSelection]);\r\n            // }}\r\n            onSelectionModelChange={(ids) => {\r\n              const selectedIDs = new Set(ids);\r\n              const selectedRows = productInPage.filter((row) =>\r\n                selectedIDs.has(row._id)\r\n              );\r\n              if (selectedRows.length === 1) {\r\n                setName(selectedRows[0].name);\r\n                setListTag(selectedRows[0].tag);\r\n                setRegularPrice(selectedRows[0].regularPrice);\r\n                setSalePrice(selectedRows[0].salePrice);\r\n                setQuantity(selectedRows[0].quantity);\r\n                setQuantitySold(selectedRows[0].quantitySold);\r\n                setCategoryId(selectedRows[0].category._id);\r\n                setFileList(selectedRows[0].productPicture);\r\n                setDescription(selectedRows[0].description);\r\n                setTimeBaoHanh(selectedRows[0].descriptionTable[0].baohanh);\r\n                setSeries(selectedRows[0].descriptionTable[0].Series);\r\n                setColor(selectedRows[0].descriptionTable[0].color[0].colorId);\r\n                setCPU(selectedRows[0].descriptionTable[0].cpu[0].cpuId);\r\n                setCard(selectedRows[0].descriptionTable[0].cardDohoa);\r\n                setRam(selectedRows[0].descriptionTable[0].ram[0].ramId);\r\n                setManHinh(\r\n                  selectedRows[0].descriptionTable[0].manhinh[0].screenId\r\n                );\r\n                setOCung(selectedRows[0].descriptionTable[0].ocung);\r\n                setHeDieuHanh(selectedRows[0].descriptionTable[0].hedieuhanh);\r\n                setKhoiLuong(selectedRows[0].descriptionTable[0].khoiluong);\r\n              }\r\n              setSelectedRows(selectedRows);\r\n            }}\r\n            loading={loading}\r\n          />\r\n        </div>\r\n      </Grid>\r\n      {/* </Spin> */}\r\n    </ComponentSkeleton>\r\n  );\r\n};\r\n\r\nexport default ComponentColor;\r\n"],"names":["TabPane","Tabs","Option","Select","dispatch","useDispatch","useState","ProductName","CategoryId","Product_Tag","searchModel","setSearchModel","navigate","useNavigate","product","useSelector","state","tag","infoProduct","selectedRows","setSelectedRows","loading","setLoading","open","setOpen","type","setType","handleOpen","handleClose","category","setProductPicture","productInPage","setProductInPage","name","setName","quantity","setQuantity","quantitySold","setQuantitySold","regularPrice","setRegularPrice","salePrice","setSalePrice","description","setDescription","categoryId","setCategoryId","timeBaoHanh","setTimeBaoHanh","series","setSeries","color","setColor","cpu","setCPU","card","setCard","ram","setRam","manhinh","setManHinh","ocung","setOCung","hedieuhanh","setHeDieuHanh","khoiluong","setKhoiLuong","EditorState","setPreviewVisible","setPreviewImage","setPreviewTitle","fileList","setFileList","listTag","setListTag","handleChange","newFileList","useEffect","obj","JSON","parse","localStorage","getItem","find","o","screenSlug","console","log","handlePreview","file","url","preview","getBase64","originFileObj","substring","lastIndexOf","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","getDataFilterProduct","then","data","map","item","index","id","getAllCategory","getTags","getInfoProducts","productPicture","Object","assign","img","uid","_id","filterColor","infoProducts","filter","filterScreen","filterRam","filterCpu","handleUpdateProduct","trim","notification","message","list","tempFileListImgUpload","tempFileListImg","push","objFilterColor","objFilterRam","objFilterCpu","objFilterScreen","length","pic","link","fetch","api","method","body","stringify","headers","response","ok","json","Error","responseJson","mergeImg","concat","cpuId","nameCpu","typeCpu","colorId","nameColor","typeColor","ramId","nameRam","typeRam","screenId","nameScreen","typeScreen","editProduct","columns","field","headerName","width","renderCell","params","className","value","formatThousand","row","style","textAlign","descriptionTable","gridStyle","height","position","top","left","transform","bgcolor","border","boxShadow","p","placement","duration","rtl","handleChangeProduct","filterArrayName","startArray","prop","newArray","lookupObject","i","removeDuplicates","products","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","handleChangeTagProduct","e","target","split","uploadButton","marginTop","marginBottom","defaultActiveKey","expandIconPosition","header","span","mode","optionFilterProp","optionLabelProp","onChange","text","categories","tags","tagName","direction","divider","orientation","flexItem","spacing","sx","variant","onClick","startIcon","cursor","href","title","onConfirm","listIdProduct","payload","productId","deleteProductById","okText","cancelText","disable","onClose","component","fontSize","tab","display","paddingTop","paddingBottom","paddingRight","required","label","defaultValue","disabled","InputLabelProps","shrink","fullWidth","htmlFor","placeholder","startAdornment","labelId","multiple","input","option","listType","defaultFileList","onPreview","beforeUpload","config","enterMode","resize_minWidth","resize_maxHeight","pasteFromWordRemoveStyles","pasteFromWordNumberedHeadingToList","pasteFromWordPromptCleanup","initData","readOnly","marginRight","paddingLeft","size","modalProduct","container","marginLeft","rows","pageSize","rowsPerPageOptions","checkboxSelection","getRowId","onSelectionModelChange","ids","selectedIDs","Set","has","baohanh","Series","cardDohoa"],"sourceRoot":""}